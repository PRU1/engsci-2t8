(undo-tree-save-format-version . 1)
"550001673e77516ca1a7104c2198cd11e4666f11"
[nil nil nil nil (26619 7762 176645 0) 0 nil]
([nil nil ((#("
" 0 1 (fontified t)) . 10920) (undo-tree-id1 . 1) (t 26619 6842 843332 704000)) nil (26619 7762 176643 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10919)) nil (26619 7787 742950 0) 0 nil])
([nil nil ((10839 . 10840) (#("." 0 1 (fontified t)) . -10838) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 10839 (10830 . 10839) (#("a" 0 1 (fontified t)) . -10830) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("n" 0 1 (fontified t)) . -10831) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("i" 0 1 (fontified t)) . -10832) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 10833 (10815 . 10833) (10794 . 10815) (10783 . 10794) (#(" " 0 1 (fontified nil)) . 10779) (10778 . 10779) (10773 . 10783) (10763 . 10773) (10742 . 10763) (10741 . 10743) (#("(" 0 1 (fontified nil)) . -10741) (10741 . 10742) (10723 . 10741) (10714 . 10723) (#(" " 0 1 (fontified nil)) . 10709) (10708 . 10709) (10709 . 10714) (#("i" 0 1 (fontified t)) . -10709) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 10710 (10699 . 10710) (#("the " 0 4 (fontified t)) . -10699) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) 10703 (#("time" 0 4 (fontified t)) . -10703) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) 10707 (10699 . 10707) (#("perhaps " 0 8 (fontified t)) . -10699) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) 10707 (10694 . 10707) (10687 . 10693) (10667 . 10687) (10666 . 10668) (#("(" 0 1 (fontified nil)) . -10666) (10666 . 10667) (10653 . 10666) (10647 . 10653) (#(" " 0 1 (fontified nil)) . 10642) (10641 . 10642) (10632 . 10647) (10611 . 10632) (10601 . 10611) (10580 . 10601) (#("This " 0 5 (fontified t)) . -10580) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) 10585 (#("comes " 0 6 (fontified t)) . -10585) (undo-tree-id44 . -6) (undo-tree-id45 . -6) (undo-tree-id46 . -6) 10591 (#("up " 0 3 (fontified t)) . -10591) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) 10594 (#("when " 0 5 (fontified t)) . -10594) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) 10599 (#("you " 0 4 (fontified t)) . -10599) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) 10603 (#("want " 0 5 (fontified t)) . -10603) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) 10608 (#("to " 0 3 (fontified t)) . -10608) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) 10611 (#("model " 0 6 (fontified t)) . -10611) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) 10617 (#("the " 0 4 (fontified t)) . -10617) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) 10621 (#("cost " 0 5 (fontified t)) . -10621) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -5) 10626 (#("of " 0 3 (fontified t)) . -10626) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) 10629 (#("going " 0 6 (fontified t)) . -10629) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) 10635 (#("to " 0 3 (fontified t)) . -10635) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) 10638 (#("a
" 0 2 (fontified t)) . -10638) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) 10640 (#("particular " 0 11 (fontified t)) . -10640) (undo-tree-id83 . -11) (undo-tree-id84 . -11) (undo-tree-id85 . -11) 10651 (#("node. " 0 6 (fontified t)) . -10651) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) 10657 (#("For " 0 4 (fontified t)) . -10657) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) 10661 (10657 . 10661) (#("This " 0 5 (fontified t)) . -10657) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) 10662 (10651 . 10662) (#("r" 0 1 (fontified t)) . -10651) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 10652 (10651 . 10652) (#(" " 0 1 (fontified nil)) . 10640) (10639 . 10640) (10639 . 10651) (10618 . 10639) (10611 . 10618) (10590 . 10611) (10585 . 10590) (#("omes " 0 5 (fontified t)) . -10585) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) 10590 (10585 . 10590) (#("m" 0 1 (fontified t)) . -10585) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("o" 0 1 (fontified t)) . -10586) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 10587 (10580 . 10587) (#("For " 0 4 (fontified t)) . -10580) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) 10584 (#("example, " 0 9 (fontified t)) . -10584) (undo-tree-id110 . -9) (undo-tree-id111 . -9) (undo-tree-id112 . -9) 10593 (10581 . 10593) (10580 . 10581) (#(" " 0 1 (fontified nil)) . 10573) (10572 . 10573) (10560 . 10580) (#("e" 0 1 (fontified t)) . -10560) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 10561 (10559 . 10561) (#("weighted " 0 9 (fontified t)) . -10559) (undo-tree-id116 . -9) (undo-tree-id117 . -9) (undo-tree-id118 . -9) 10568 (#("ed" 0 2 (fontified t)) . -10568) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) 10570 (10563 . 10570) (#("t" 0 1 (fontified t)) . -10563) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 10564 (10560 . 10564) (10539 . 10560) (#("want " 0 5 (fontified t)) . -10539) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) 10544 (#("to " 0 3 (fontified t)) . -10544) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) 10547 (10544 . 10547) (#("to " 0 3 (fontified t)) . -10544) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) 10547 (#("traverse " 0 9 (fontified t)) . -10547) (undo-tree-id134 . -9) (undo-tree-id135 . -9) (undo-tree-id136 . -9) 10556 (#("to " 0 3 (fontified t)) . -10556) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) 10559 (#("a " 0 2 (fontified t)) . -10559) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) 10561 (#("node " 0 5 (fontified t)) . -10561) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) 10566 (10545 . 10566) (10524 . 10545) (10515 . 10524) (10513 . 10515) (10505 . 10513) (#("Consider" 0 8 (fontified t)) . -10505) (undo-tree-id146 . -8) (undo-tree-id147 . -8) 10513 (10505 . 10513) (10504 . 10505) (t 26619 7774 271671 807000) 10504) nil (26619 8005 241448 0) 0 nil] [nil nil ((10603 . 10604) (t 26619 7774 271671 807000)) ((#("
" 0 1 (fontified t)) . 10603) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) (26619 7787 742660 0) 0 nil] [nil nil ((#("Consider a graph with weighted edges\\footnote{Example: Google Maps, with nodes representing destinations and roads representing roads. The edge weight describes the time it takes to move between two destinations.}. We define the \\textit{cost} of a path as the sum of the weighted edges between two connected nodes. " 0 36 (fontified t) 36 45 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 45 46 (face (rainbow-delimiters-depth-1-face) fontified t) 46 212 (face (font-lock-constant-face) fontified t) 212 213 (face (rainbow-delimiters-depth-1-face) fontified t) 213 229 (fontified t) 229 236 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 236 237 (face (rainbow-delimiters-depth-1-face) fontified t) 237 241 (face (font-latex-italic-face) fontified t) 241 242 (face (rainbow-delimiters-depth-1-face) fontified t) 242 315 (fontified t)) . 10603) (undo-tree-id2 . -315)) ((10603 . 10918)) (26619 7766 810557 0) 0 nil] [nil nil ((#("Dijkstra's algorithm uses a greedy approach (i.e. pick the optimal node to explore at every step)" 0 97 (fontified t)) . 10505) (undo-tree-id0 . -97)) ((10505 . 10602)) (26619 7762 176634 0) 0 nil])
([nil nil ((10764 . 10776) (#("addresses" 0 9 (fontified t)) . 10764) (undo-tree-id11 . -8) (undo-tree-id12 . -9) (undo-tree-id13 . -9) (undo-tree-id14 . -9) (undo-tree-id15 . -9) (undo-tree-id16 . -9)) nil (26619 8005 241173 0) 0 nil])
nil
nil
nil
([nil nil ((10843 . 10844) (t 26619 8005 258418 507000)) nil (26619 8107 366414 0) 0 nil])
([nil nil ((10856 . 10862) (#("algorithm" 0 9 (fontified t)) . 10856) (undo-tree-id273 . -8)) nil (26619 8107 366412 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . 10933) (#("c" 0 1 (fontified t)) . 10933) (#("i" 0 1 (fontified t)) . 10933) (#("p" 0 1 (fontified t)) . 10933) (#(" " 0 1 (fontified t)) . 10933) (#("." 0 1 (fontified t)) . 10933) (#("e" 0 1 (fontified t)) . 10933) (#("." 0 1 (fontified t)) . 10933) (#("i" 0 1 (fontified t)) . 10933) (#("(" 0 1 (fontified t)) . 10933) (#(" " 0 1 (fontified t)) . 10933) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified t)) . 10933) (10932 . 10933) (10920 . 10932) (10915 . 10917) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 10915) (10914 . 10915) (10917 . 10918) (10896 . 10917) (#("H" 0 1 (face (font-lock-constant-face) fontified t)) . -10896) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (#("e" 0 1 (face (font-lock-constant-face) fontified t)) . -10897) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#(" " 0 1 (face (font-lock-constant-face) fontified t)) . -10898) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("g" 0 1 (face (font-lock-constant-face) fontified t)) . -10899) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("r" 0 1 (face (font-lock-constant-face) fontified t)) . -10900) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("e" 0 1 (face (font-lock-constant-face) fontified t)) . -10901) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("e" 0 1 (face (font-lock-constant-face) fontified t)) . -10902) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("d" 0 1 (face (font-lock-constant-face) fontified t)) . -10903) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("y" 0 1 (face (font-lock-constant-face) fontified t)) . -10904) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#(" " 0 1 (face (font-lock-constant-face) fontified t)) . -10905) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) 10906 (10895 . 10906) (10894 . 10896) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -10894) (10894 . 10895) (10888 . 10894) (10886 . 10888) (10885 . 10886)) nil (26619 8107 366402 0) 0 nil])
([nil nil ((10976 . 10977) (#("}" 0 1 (fontified nil)) . -10976) (10976 . 10977)) nil (26619 8107 366342 0) 0 nil])
([nil nil ((10969 . 10989) (10948 . 10969) (10938 . 10948) (#("optimal " 0 8 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -10938) (undo-tree-id238 . -8) (undo-tree-id239 . -8) (undo-tree-id240 . -8) (undo-tree-id241 . -8) 10946 (#("node" 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . 10946) (undo-tree-id242 . -3)) nil (26619 8107 366339 0) 0 nil])
([nil nil ((#(" to explore at every step)" 0 26 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . 10989) (undo-tree-id231 . -25) (undo-tree-id232 . -25) (undo-tree-id233 . -25) (undo-tree-id234 . -25) (undo-tree-id235 . 26) (undo-tree-id236 . -26) (undo-tree-id237 . -25) 11014) nil (26619 8107 366327 0) 0 nil])
([nil nil ((10989 . 10990)) nil (26619 8107 366314 0) 0 nil])
([nil nil ((#("  " 0 2 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -10915) (undo-tree-id229 . -2) (undo-tree-id230 . -2) 10917 (10914 . 10917) 10911) nil (26619 8107 366313 0) 0 nil])
([nil nil ((#("
" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . 10915) (undo-tree-id228 . 1)) nil (26619 8107 366307 0) 0 nil])
([nil nil ((10991 . 10992) 10915) nil (26619 8107 366303 0) 0 nil])
([nil nil (10915) nil (26619 8107 366302 0) 0 nil])
([nil nil ((10915 . 10917) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 10914) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (10915 . 10916) (10914 . 10915) (#("
" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -10914) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -10915) (undo-tree-id223 . -1) (undo-tree-id224 . 1) (undo-tree-id225 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -10916) (undo-tree-id226 . -1) (undo-tree-id227 . -1) 10917) nil (26619 8107 366298 0) 0 nil])
([nil nil ((10915 . 10917) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 10914) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (10915 . 10916) (10914 . 10915) (#("
" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -10914) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -10915) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -10916) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 10917) nil (26619 8107 366251 0) 0 nil])
([nil nil ((10991 . 10992) 10917) nil (26619 8107 366134 0) 0 nil])
([nil nil ((10992 . 10993)) nil (26619 8107 366129 0) 0 nil])
([nil nil ((10995 . 11000) (10980 . 10982) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified nil)) . 10980) (10979 . 10980) (10991 . 10993) (t 26619 8107 383233 73000)) nil (26619 8172 723365 0) 0 nil])
([nil nil ((#("This " 0 5 (fontified t)) . -10995) (undo-tree-id284 . -5) (undo-tree-id285 . -5) 11000) nil (26619 8172 723361 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10993) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#(" " 0 1 (fontified t)) . -10994) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 10995) nil (26619 8172 723355 0) 0 nil])
([nil nil ((10993 . 11006)) nil (26619 8172 723346 0) 0 nil])
([nil nil ((11006 . 11020)) nil (26619 8172 723345 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -11019) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 11020) nil (26619 8172 723343 0) 0 nil])
([nil nil ((11019 . 11040)) nil (26619 8172 723338 0) 0 nil])
([nil nil ((11040 . 11048)) nil (26619 8172 723336 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11047) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 11048) nil (26619 8172 723335 0) 0 nil])
([nil nil ((11047 . 11050)) nil (26619 8172 723329 0) 0 nil])
([nil nil ((11050 . 11051)) nil (26619 8172 723328 0) 0 nil])
([nil nil ((11051 . 11057)) nil (26619 8172 723326 0) 0 nil])
([nil nil ((11057 . 11059) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11057) (11057 . 11058)) nil (26619 8172 723325 0) 0 nil])
([nil nil ((11058 . 11062)) nil (26619 8172 723322 0) 0 nil])
([nil nil ((11065 . 11083) (#(" " 0 1 (fontified nil)) . 11050) (11049 . 11050) (11062 . 11065) (#("}" 0 1 (face (font-latex-italic-face) fontified nil)) . -11062) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11063) (11062 . 11063)) nil (26619 8172 723320 0) 0 nil])
([nil nil ((11083 . 11104)) nil (26619 8172 723316 0) 0 nil])
([nil nil ((11104 . 11108)) nil (26619 8172 723315 0) 0 nil])
([nil nil ((11108 . 11109)) nil (26619 8172 723313 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -11108) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 11109) nil (26619 8172 723311 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 11121) (11120 . 11121) (11108 . 11129)) nil (26619 8172 723298 0) 0 nil])
([nil nil ((11129 . 11148)) nil (26619 8172 723295 0) 0 nil])
([nil nil ((11148 . 11149)) nil (26619 8172 723290 0) 0 nil])
([nil nil ((#("connected " 0 10 (fontified t)) . 11133) (undo-tree-id389 . -9) (t 26619 8172 739133 326000)) nil (26619 8245 259185 0) 0 nil])
([nil nil ((11226 . 11229) (11225 . 11226) (11204 . 11225) (#("f" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -11204) (undo-tree-id383 . -1) (undo-tree-id384 . -1) 11205 (11197 . 11205) (11186 . 11188) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 11186) (11185 . 11186) (11189 . 11195) (#("s" 0 1 (face (font-lock-constant-face) fontified t)) . -11189) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 11190 (11178 . 11190) (11157 . 11178) (11148 . 11157) (#("Termin" 0 6 (face (font-lock-constant-face) fontified t)) . -11148) (undo-tree-id387 . -6) (undo-tree-id388 . -6) 11154 (11148 . 11154) (11147 . 11149) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -11147) (11147 . 11148) (11139 . 11147) (11138 . 11139)) nil (26619 8245 259179 0) 0 nil])
([nil nil ((#("Consider a graph with weighted edges\\footnote{Example: Google Maps, with nodes representing destinations and roads representing roads. The edge weight describes the time it takes to move between two destinations.}. We define the \\textit{cost} of a path as the sum of the weighted edges between two connected nodes. 
" 0 36 (fontified t) 36 45 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 45 46 (face (rainbow-delimiters-depth-1-face) fontified t) 46 212 (face (font-lock-constant-face) fontified t) 212 213 (face (rainbow-delimiters-depth-1-face) fontified t) 213 229 (fontified t) 229 236 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 236 237 (face (rainbow-delimiters-depth-1-face) fontified t) 237 241 (face (font-latex-italic-face) fontified t) 241 242 (face (rainbow-delimiters-depth-1-face) fontified t) 242 315 (fontified t) 315 316 (fontified t)) . 11235) (undo-tree-id366 . -44) (undo-tree-id367 . -44) (undo-tree-id368 . -315) (undo-tree-id369 . -44) (undo-tree-id370 . -44) (undo-tree-id371 . -44) (undo-tree-id372 . -44) (undo-tree-id373 . -44) (undo-tree-id374 . -44) (undo-tree-id375 . -44) (undo-tree-id376 . -316) (undo-tree-id377 . -316) (undo-tree-id378 . -44) (undo-tree-id379 . -44) (undo-tree-id380 . -44) (undo-tree-id381 . -316) (undo-tree-id382 . -316) 11279) nil (26619 8245 259141 0) 0 nil])
([nil nil ((11255 . 11259) (11243 . 11255) (11242 . 11244) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11242) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (11242 . 11243) (11236 . 11242) (11235 . 11236) (#("Random " 0 7 (fontified t)) . -11235) (undo-tree-id320 . -7) (undo-tree-id321 . -7) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -5) (undo-tree-id331 . -5) (undo-tree-id332 . -6) (undo-tree-id333 . -6) (undo-tree-id334 . -7) (undo-tree-id335 . -7) (undo-tree-id336 . -7) (undo-tree-id337 . -7) (undo-tree-id338 . -7) (undo-tree-id339 . -7) (undo-tree-id340 . -7) (undo-tree-id341 . -7) (undo-tree-id342 . -7) (undo-tree-id343 . -7) (undo-tree-id344 . -7) (undo-tree-id345 . -7) (undo-tree-id346 . -7) (undo-tree-id347 . -7) (undo-tree-id348 . -7) (undo-tree-id349 . -7) (undo-tree-id350 . -7) 11242 (#("though" 0 6 (fontified t)) . -11242) (undo-tree-id351 . -6) (undo-tree-id352 . -6) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -6) (undo-tree-id364 . -6) (undo-tree-id365 . -6) 11248 (11235 . 11248) (11234 . 11235)) nil (26619 8245 259109 0) 0 nil])
([nil nil ((11261 . 11263) (11260 . 11261)) nil (26619 8245 259028 0) 0 nil])
([nil nil (11293) nil (26619 8245 259026 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11264) (undo-tree-id310 . -1) (undo-tree-id311 . 1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) 11265) nil (26619 8245 259353 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11264) (undo-tree-id390 . 1) (undo-tree-id391 . 1) (#("
" 0 1 (fontified t)) . 11264) (undo-tree-id392 . 1) (#(" " 0 1 (fontified t)) . 11264) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("Dijkstra's " 0 11 (fontified t)) . -11264) (undo-tree-id411 . -11) (undo-tree-id412 . -11) (undo-tree-id413 . -11) (undo-tree-id414 . -11) (undo-tree-id415 . -11) (undo-tree-id416 . -11) (undo-tree-id417 . -11) (undo-tree-id418 . -11) (undo-tree-id419 . -11) (undo-tree-id420 . -11) (undo-tree-id421 . -11) (undo-tree-id422 . -11) (undo-tree-id423 . -11) (undo-tree-id424 . -11) (undo-tree-id425 . -11) (undo-tree-id426 . -11) (undo-tree-id427 . -11) (undo-tree-id428 . -11) (undo-tree-id429 . -11) (undo-tree-id430 . -11) (undo-tree-id431 . -11) (undo-tree-id432 . -11) (undo-tree-id433 . -11) (undo-tree-id434 . -11) (undo-tree-id435 . -11) (undo-tree-id436 . -11) (undo-tree-id437 . -11) (undo-tree-id438 . -11) (undo-tree-id439 . -11) (undo-tree-id440 . -11) (undo-tree-id441 . -11) (undo-tree-id442 . -11) (undo-tree-id443 . -11) (undo-tree-id444 . -11) (undo-tree-id445 . -11) (undo-tree-id446 . -11) (undo-tree-id447 . -11) (undo-tree-id448 . -11) (undo-tree-id449 . -11) (undo-tree-id450 . -11) (undo-tree-id451 . -11) (undo-tree-id452 . -11) (undo-tree-id453 . -11) (undo-tree-id454 . -11) (undo-tree-id455 . -11) (undo-tree-id456 . -11) 11275 (#("algorithm " 0 10 (fontified t)) . -11275) (undo-tree-id457 . -10) (undo-tree-id458 . -10) (undo-tree-id459 . -10) (undo-tree-id460 . -10) (undo-tree-id461 . -10) (undo-tree-id462 . -10) (undo-tree-id463 . -10) (undo-tree-id464 . -10) (undo-tree-id465 . -10) (undo-tree-id466 . -10) (undo-tree-id467 . -10) (undo-tree-id468 . -10) (undo-tree-id469 . -10) (undo-tree-id470 . -10) (undo-tree-id471 . -10) (undo-tree-id472 . -10) (undo-tree-id473 . -10) (undo-tree-id474 . -10) (undo-tree-id475 . -10) (undo-tree-id476 . -10) (undo-tree-id477 . -10) (undo-tree-id478 . -10) (undo-tree-id479 . -10) (undo-tree-id480 . -10) (undo-tree-id481 . -10) (undo-tree-id482 . -10) (undo-tree-id483 . -10) (undo-tree-id484 . -10) (undo-tree-id485 . -10) (undo-tree-id486 . -10) (undo-tree-id487 . -10) (undo-tree-id488 . -10) (undo-tree-id489 . -10) (undo-tree-id490 . -10) (undo-tree-id491 . -10) (undo-tree-id492 . -10) (undo-tree-id493 . -10) (undo-tree-id494 . -10) (undo-tree-id495 . -10) (undo-tree-id496 . -10) (undo-tree-id497 . -10) (undo-tree-id498 . -10) (undo-tree-id499 . -10) (undo-tree-id500 . -10) 11285 (#("is " 0 3 (fontified t)) . -11285) (undo-tree-id501 . -3) (undo-tree-id502 . -3) (undo-tree-id503 . -3) (undo-tree-id504 . -3) (undo-tree-id505 . -3) (undo-tree-id506 . -3) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -3) (undo-tree-id512 . -3) (undo-tree-id513 . -3) (undo-tree-id514 . -3) (undo-tree-id515 . -3) (undo-tree-id516 . -3) (undo-tree-id517 . -3) (undo-tree-id518 . -3) (undo-tree-id519 . -3) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . -3) (undo-tree-id535 . -3) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (undo-tree-id538 . -3) (undo-tree-id539 . -3) (undo-tree-id540 . -3) (undo-tree-id541 . -3) (undo-tree-id542 . -3) 11288 (#("an " 0 3 (fontified t)) . -11288) (undo-tree-id543 . -3) (undo-tree-id544 . -3) (undo-tree-id545 . -3) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) 11291 (#("approach " 0 9 (fontified t)) . -11291) (undo-tree-id583 . -9) (undo-tree-id584 . -9) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -9) (undo-tree-id588 . -9) (undo-tree-id589 . -9) (undo-tree-id590 . -9) (undo-tree-id591 . -9) (undo-tree-id592 . -9) (undo-tree-id593 . -9) (undo-tree-id594 . -9) (undo-tree-id595 . -9) (undo-tree-id596 . -9) (undo-tree-id597 . -9) (undo-tree-id598 . -9) (undo-tree-id599 . -9) (undo-tree-id600 . -9) (undo-tree-id601 . -9) (undo-tree-id602 . -9) (undo-tree-id603 . -9) (undo-tree-id604 . -9) (undo-tree-id605 . -9) (undo-tree-id606 . -9) (undo-tree-id607 . -9) (undo-tree-id608 . -9) (undo-tree-id609 . -9) (undo-tree-id610 . -9) (undo-tree-id611 . -9) (undo-tree-id612 . -9) (undo-tree-id613 . -9) (undo-tree-id614 . -9) (undo-tree-id615 . -9) (undo-tree-id616 . -9) (undo-tree-id617 . -9) (undo-tree-id618 . -9) (undo-tree-id619 . -9) (undo-tree-id620 . -9) 11300 (#("to " 0 3 (fontified t)) . -11300) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) 11303 (#("find " 0 5 (fontified t)) . -11303) (undo-tree-id655 . -5) (undo-tree-id656 . -5) (undo-tree-id657 . -5) (undo-tree-id658 . -5) (undo-tree-id659 . -5) (undo-tree-id660 . -5) (undo-tree-id661 . -5) (undo-tree-id662 . -5) (undo-tree-id663 . -5) (undo-tree-id664 . -5) (undo-tree-id665 . -5) (undo-tree-id666 . -5) (undo-tree-id667 . -5) (undo-tree-id668 . -5) (undo-tree-id669 . -5) (undo-tree-id670 . -5) (undo-tree-id671 . -5) (undo-tree-id672 . -5) (undo-tree-id673 . -5) (undo-tree-id674 . -5) (undo-tree-id675 . -5) (undo-tree-id676 . -5) (undo-tree-id677 . -5) (undo-tree-id678 . -5) (undo-tree-id679 . -5) (undo-tree-id680 . -5) (undo-tree-id681 . -5) (undo-tree-id682 . -5) (undo-tree-id683 . -5) (undo-tree-id684 . -5) (undo-tree-id685 . -5) (undo-tree-id686 . -5) 11308 (#("the " 0 4 (fontified t)) . -11308) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) 11312 (#("minimum " 0 8 (fontified t)) . -11312) (undo-tree-id717 . -8) (undo-tree-id718 . -8) (undo-tree-id719 . -8) (undo-tree-id720 . -8) (undo-tree-id721 . -8) (undo-tree-id722 . -8) (undo-tree-id723 . -8) (undo-tree-id724 . -8) (undo-tree-id725 . -8) (undo-tree-id726 . -8) (undo-tree-id727 . -8) (undo-tree-id728 . -8) (undo-tree-id729 . -8) (undo-tree-id730 . -8) (undo-tree-id731 . -8) (undo-tree-id732 . -8) (undo-tree-id733 . -8) (undo-tree-id734 . -8) (undo-tree-id735 . -8) (undo-tree-id736 . -8) (undo-tree-id737 . -8) (undo-tree-id738 . -8) (undo-tree-id739 . -8) (undo-tree-id740 . -8) (undo-tree-id741 . -8) (undo-tree-id742 . -8) (undo-tree-id743 . -8) (undo-tree-id744 . -8) 11320 (#("cost " 0 5 (fontified t)) . -11320) (undo-tree-id745 . -5) (undo-tree-id746 . -5) (undo-tree-id747 . -5) (undo-tree-id748 . -5) (undo-tree-id749 . -5) (undo-tree-id750 . -5) (undo-tree-id751 . -5) (undo-tree-id752 . -5) (undo-tree-id753 . -5) (undo-tree-id754 . -5) (undo-tree-id755 . -5) (undo-tree-id756 . -5) (undo-tree-id757 . -5) (undo-tree-id758 . -5) (undo-tree-id759 . -5) (undo-tree-id760 . -5) (undo-tree-id761 . -5) (undo-tree-id762 . -5) (undo-tree-id763 . -5) (undo-tree-id764 . -5) (undo-tree-id765 . -5) (undo-tree-id766 . -5) (undo-tree-id767 . -5) (undo-tree-id768 . -5) (undo-tree-id769 . -5) (undo-tree-id770 . -5) 11325 (#("path
" 0 5 (fontified t)) . -11325) (undo-tree-id771 . -5) (undo-tree-id772 . -5) (undo-tree-id773 . -5) (undo-tree-id774 . -5) (undo-tree-id775 . -5) (undo-tree-id776 . -5) (undo-tree-id777 . -5) (undo-tree-id778 . -5) (undo-tree-id779 . -5) (undo-tree-id780 . -5) (undo-tree-id781 . -5) (undo-tree-id782 . -5) (undo-tree-id783 . -5) (undo-tree-id784 . -5) (undo-tree-id785 . -5) (undo-tree-id786 . -5) (undo-tree-id787 . -5) (undo-tree-id788 . -5) (undo-tree-id789 . -5) (undo-tree-id790 . -5) (undo-tree-id791 . -5) (undo-tree-id792 . -5) (undo-tree-id793 . -5) (undo-tree-id794 . -5) (undo-tree-id795 . -5) 11330 (#("between " 0 8 (fontified t)) . -11330) (undo-tree-id796 . -8) (undo-tree-id797 . -8) (undo-tree-id798 . -8) (undo-tree-id799 . -8) (undo-tree-id800 . -8) (undo-tree-id801 . -8) (undo-tree-id802 . -8) (undo-tree-id803 . -8) (undo-tree-id804 . -8) (undo-tree-id805 . -8) (undo-tree-id806 . -8) (undo-tree-id807 . -8) (undo-tree-id808 . -8) (undo-tree-id809 . -8) (undo-tree-id810 . -8) (undo-tree-id811 . -8) (undo-tree-id812 . -8) (undo-tree-id813 . -8) (undo-tree-id814 . -8) (undo-tree-id815 . -8) (undo-tree-id816 . -8) (undo-tree-id817 . -8) 11338 (#("two " 0 4 (fontified t)) . -11338) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) 11342 (#("nodes, " 0 7 (fontified t)) . -11342) (undo-tree-id838 . -7) (undo-tree-id839 . -7) (undo-tree-id840 . -5) (undo-tree-id841 . -5) (undo-tree-id842 . -5) (undo-tree-id843 . -5) (undo-tree-id844 . -5) (undo-tree-id845 . -5) (undo-tree-id846 . -5) (undo-tree-id847 . -5) (undo-tree-id848 . -5) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -6) (undo-tree-id852 . -6) (undo-tree-id853 . -7) (undo-tree-id854 . -7) (undo-tree-id855 . -7) 11349 (#(" " 0 1 (fontified nil)) . 11330) (11329 . 11330) (11347 . 11349) (#("," 0 1 (fontified t)) . -11347) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) 11348 (11347 . 11348) (#("." 0 1 (fontified t)) . -11347) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) 11348) nil (26619 8263 812410 0) 0 nil] [nil nil ((#("Dijkstra's algorithm is an approach to find the minimum cost path between two nodes. 
" 0 86 (fontified t)) . 11264) (undo-tree-id286 . -85) (undo-tree-id287 . -85) (undo-tree-id288 . -85) (undo-tree-id289 . -85) (undo-tree-id290 . -85) (undo-tree-id291 . 1) (undo-tree-id292 . -85) (undo-tree-id293 . -28) (undo-tree-id294 . -28) (undo-tree-id295 . -85) (undo-tree-id296 . -85) (undo-tree-id297 . -85) (undo-tree-id298 . -85) (undo-tree-id299 . -85) (undo-tree-id300 . -85) (undo-tree-id301 . -85) (undo-tree-id302 . -85) (undo-tree-id303 . -85) (undo-tree-id304 . -85) (undo-tree-id305 . -85) (undo-tree-id306 . -85) (undo-tree-id307 . -85) (undo-tree-id308 . -86) (undo-tree-id309 . -86) 11349) ((11264 . 11350)) (26619 8245 259005 0) 0 nil])
([nil nil ((#("Esse" 0 4 (fontified t)) . -11233) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -2) (undo-tree-id874 . -2) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) 11237 (11233 . 11237) (#("I " 0 2 (fontified t)) . -11233) (undo-tree-id880 . -2) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -2) (undo-tree-id884 . -2) (undo-tree-id885 . -2) (undo-tree-id886 . -2) (undo-tree-id887 . -2) (undo-tree-id888 . -2) (undo-tree-id889 . -2) (undo-tree-id890 . -2) (undo-tree-id891 . -2) (undo-tree-id892 . -2) (undo-tree-id893 . -2) (undo-tree-id894 . -2) (undo-tree-id895 . -2) (undo-tree-id896 . -2) (undo-tree-id897 . -2) (undo-tree-id898 . -2) (undo-tree-id899 . -2) (undo-tree-id900 . -2) (undo-tree-id901 . -2) (undo-tree-id902 . -2) (undo-tree-id903 . -2) (undo-tree-id904 . -2) (undo-tree-id905 . -2) (undo-tree-id906 . -2) (undo-tree-id907 . -2) (undo-tree-id908 . -2) (undo-tree-id909 . -2) (undo-tree-id910 . -2) (undo-tree-id911 . -2) (undo-tree-id912 . -2) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -2) (undo-tree-id916 . -2) (undo-tree-id917 . -2) (undo-tree-id918 . -2) (undo-tree-id919 . -2) (undo-tree-id920 . -2) (undo-tree-id921 . -2) (undo-tree-id922 . -2) (undo-tree-id923 . -2) (undo-tree-id924 . -2) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (undo-tree-id927 . -2) (undo-tree-id928 . -2) (undo-tree-id929 . -2) (undo-tree-id930 . -2) (undo-tree-id931 . -2) (undo-tree-id932 . -2) (undo-tree-id933 . -2) (undo-tree-id934 . -2) (undo-tree-id935 . -2) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (undo-tree-id940 . -2) (undo-tree-id941 . -2) (undo-tree-id942 . -2) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -2) (undo-tree-id950 . -2) (undo-tree-id951 . -2) (undo-tree-id952 . -2) (undo-tree-id953 . -2) 11235 (#("can't " 0 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t)) . -11235) (undo-tree-id954 . -6) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -2) (undo-tree-id958 . -2) (undo-tree-id959 . -3) (undo-tree-id960 . -3) (undo-tree-id961 . -3) (undo-tree-id962 . -3) (undo-tree-id963 . -3) (undo-tree-id964 . -3) (undo-tree-id965 . -6) (undo-tree-id966 . -5) (undo-tree-id967 . -5) (undo-tree-id968 . -5) (undo-tree-id969 . -6) (undo-tree-id970 . -6) (undo-tree-id971 . -6) (undo-tree-id972 . -6) (undo-tree-id973 . -6) (undo-tree-id974 . -6) (undo-tree-id975 . -6) (undo-tree-id976 . -6) (undo-tree-id977 . -6) (undo-tree-id978 . -6) (undo-tree-id979 . -6) (undo-tree-id980 . -6) (undo-tree-id981 . -6) (undo-tree-id982 . -6) (undo-tree-id983 . -6) (undo-tree-id984 . -6) (undo-tree-id985 . -6) (undo-tree-id986 . -6) (undo-tree-id987 . -6) (undo-tree-id988 . -6) (undo-tree-id989 . -6) (undo-tree-id990 . -6) (undo-tree-id991 . -6) (undo-tree-id992 . -6) (undo-tree-id993 . -6) (undo-tree-id994 . -6) (undo-tree-id995 . -6) (undo-tree-id996 . -6) (undo-tree-id997 . -6) (undo-tree-id998 . -6) (undo-tree-id999 . -6) (undo-tree-id1000 . -6) (undo-tree-id1001 . -6) (undo-tree-id1002 . -6) (undo-tree-id1003 . -6) (undo-tree-id1004 . -6) (undo-tree-id1005 . -6) (undo-tree-id1006 . -6) (undo-tree-id1007 . -6) (undo-tree-id1008 . -6) (undo-tree-id1009 . -6) (undo-tree-id1010 . -6) (undo-tree-id1011 . -6) (undo-tree-id1012 . -6) (undo-tree-id1013 . -6) (undo-tree-id1014 . -6) (undo-tree-id1015 . -6) (undo-tree-id1016 . -6) (undo-tree-id1017 . -6) (undo-tree-id1018 . -6) (undo-tree-id1019 . -6) (undo-tree-id1020 . -6) (undo-tree-id1021 . -6) 11241 (#("think " 0 6 (fontified t)) . -11241) (undo-tree-id1022 . -6) (undo-tree-id1023 . -6) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -3) (undo-tree-id1029 . -3) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -5) (undo-tree-id1033 . -5) (undo-tree-id1034 . -6) (undo-tree-id1035 . -6) (undo-tree-id1036 . -6) (undo-tree-id1037 . -6) (undo-tree-id1038 . -6) (undo-tree-id1039 . -6) (undo-tree-id1040 . -6) (undo-tree-id1041 . -6) (undo-tree-id1042 . -6) (undo-tree-id1043 . -6) (undo-tree-id1044 . -6) (undo-tree-id1045 . -6) (undo-tree-id1046 . -6) (undo-tree-id1047 . -6) (undo-tree-id1048 . -6) (undo-tree-id1049 . -6) (undo-tree-id1050 . -6) (undo-tree-id1051 . -6) (undo-tree-id1052 . -6) (undo-tree-id1053 . -6) (undo-tree-id1054 . -6) (undo-tree-id1055 . -6) (undo-tree-id1056 . -6) (undo-tree-id1057 . -6) (undo-tree-id1058 . -6) (undo-tree-id1059 . -6) (undo-tree-id1060 . -6) (undo-tree-id1061 . -6) (undo-tree-id1062 . -6) (undo-tree-id1063 . -6) (undo-tree-id1064 . -6) (undo-tree-id1065 . -6) (undo-tree-id1066 . -6) (undo-tree-id1067 . -6) (undo-tree-id1068 . -6) (undo-tree-id1069 . -6) (undo-tree-id1070 . -6) (undo-tree-id1071 . -6) (undo-tree-id1072 . -6) 11247 (#("of " 0 3 (fontified t)) . -11247) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -2) (undo-tree-id1078 . -2) (undo-tree-id1079 . -3) (undo-tree-id1080 . -3) (undo-tree-id1081 . -3) (undo-tree-id1082 . -3) (undo-tree-id1083 . -3) (undo-tree-id1084 . -3) (undo-tree-id1085 . -3) (undo-tree-id1086 . -3) (undo-tree-id1087 . -3) (undo-tree-id1088 . -3) (undo-tree-id1089 . -3) (undo-tree-id1090 . -3) (undo-tree-id1091 . -3) (undo-tree-id1092 . -3) (undo-tree-id1093 . -3) (undo-tree-id1094 . -3) (undo-tree-id1095 . -3) (undo-tree-id1096 . -3) (undo-tree-id1097 . -3) (undo-tree-id1098 . -3) (undo-tree-id1099 . -3) (undo-tree-id1100 . -3) (undo-tree-id1101 . -3) (undo-tree-id1102 . -3) (undo-tree-id1103 . -3) (undo-tree-id1104 . -3) (undo-tree-id1105 . -3) (undo-tree-id1106 . -3) (undo-tree-id1107 . -3) (undo-tree-id1108 . -3) (undo-tree-id1109 . -3) 11250 (#("an " 0 3 (fontified t)) . -11250) (undo-tree-id1110 . -3) (undo-tree-id1111 . -3) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -3) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) (undo-tree-id1123 . -3) (undo-tree-id1124 . -3) (undo-tree-id1125 . -3) (undo-tree-id1126 . -3) (undo-tree-id1127 . -3) (undo-tree-id1128 . -3) (undo-tree-id1129 . -3) (undo-tree-id1130 . -3) (undo-tree-id1131 . -3) (undo-tree-id1132 . -3) (undo-tree-id1133 . -3) (undo-tree-id1134 . -3) (undo-tree-id1135 . -3) (undo-tree-id1136 . -3) (undo-tree-id1137 . -3) (undo-tree-id1138 . -3) 11253 (#("easily " 0 7 (fontified t)) . -11253) (undo-tree-id1139 . -7) (undo-tree-id1140 . -7) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -2) (undo-tree-id1144 . -2) (undo-tree-id1145 . -3) (undo-tree-id1146 . -3) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -5) (undo-tree-id1150 . -5) (undo-tree-id1151 . -6) (undo-tree-id1152 . -6) (undo-tree-id1153 . -7) (undo-tree-id1154 . -7) (undo-tree-id1155 . -7) 11260 (11251 . 11260) (#(" " 0 1 (fontified t)) . -11251) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) 11252 (11243 . 11252) (11240 . 11243) (11238 . 11240) (11233 . 11238) (11232 . 11233) (#("
" 0 1 (fontified t)) . -11232) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . 1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) 11233 (11232 . 11233) (11231 . 11232) (t 26619 8263 829985 29000) 11186) nil (26619 8306 541528 0) 0 nil])
nil
([nil nil ((10843 . 10845)) nil (26619 8306 541036 0) 0 nil])
([nil nil ((10845 . 10866)) nil (26619 8306 541035 0) 0 nil])
([nil nil ((10866 . 10887)) nil (26619 8306 541033 0) 0 nil])
([nil nil ((10887 . 10889)) nil (26619 8306 541028 0) 0 nil])
([nil nil ((10959 . 10960) (10954 . 10958) (10953 . 10955) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -10953) (10953 . 10954) (10947 . 10953) (10946 . 10947) (10938 . 10946) (#("w" 0 1 (fontified t)) . -10938) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (#(" " 0 1 (fontified t)) . -10939) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (#("d" 0 1 (fontified t)) . -10940) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (#("e" 0 1 (fontified t)) . -10941) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) 10942 (10924 . 10942) (#(" " 0 1 (fontified nil)) . 10910) (10909 . 10910) (10923 . 10924) (10918 . 10922) (10917 . 10919) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -10917) (10917 . 10918) (10911 . 10917) (10910 . 10911) (10903 . 10910) (10899 . 10903) (#("a " 0 2 (fontified t)) . -10899) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2) 10901 (#("path " 0 5 (fontified t)) . -10901) (undo-tree-id1197 . -5) (undo-tree-id1198 . -5) (undo-tree-id1199 . -5) 10906 (10889 . 10906) (t 26619 8306 560274 314000)) nil (26619 8338 733849 0) 0 nil])
([nil nil ((#("We define the cost of a path as the sum of edge weights
between two nodes\\footnote{Note to self: terminology can be more
  precise. But hopefully the idea is clear.}.
" 0 56 (fontified t) 56 73 (fontified t) 73 74 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified t) 74 82 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified t) 83 121 (face (font-lock-constant-face) font-lock-multiline t fontified t) 121 164 (face (font-lock-constant-face) font-lock-multiline t fontified t) 164 165 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified t) 165 166 (fontified t) 166 167 (fontified t)) . 11182) (undo-tree-id1168 . -166) (undo-tree-id1169 . -166) (undo-tree-id1170 . -166) (undo-tree-id1171 . -166) (undo-tree-id1172 . -166) (undo-tree-id1173 . -55) (undo-tree-id1174 . -55) (undo-tree-id1175 . -120) (undo-tree-id1176 . -120) (undo-tree-id1177 . -121) (undo-tree-id1178 . -166) (undo-tree-id1179 . -166) (undo-tree-id1180 . -166) (undo-tree-id1181 . -167) 11348) nil (26619 8338 734073 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11126 . 11127) (nil fontified nil 10960 . 11127) (10960 . 11127)) nil (26619 8425 230632 0) 0 nil] [nil nil ((nil rear-nonsticky nil 11091 . 11092) (nil fontified nil 10925 . 11092) (10925 . 11092)) ((#("We define the cost of a path as the sum of edge weights
between two nodes\\footnote{Note to self: terminology can be more
  precise. But hopefully the idea is clear.}.
" 0 73 (fontified nil) 73 82 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil) 82 83 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified nil) 83 121 (face (font-lock-constant-face) font-lock-multiline t fontified nil) 121 164 (face (font-lock-constant-face) font-lock-multiline t fontified nil) 164 165 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified nil) 165 166 (fontified nil) 166 167 (rear-nonsticky nil fontified nil)) . 10925) (undo-tree-id1200 . -167) (undo-tree-id1201 . -167) (undo-tree-id1202 . -166) (undo-tree-id1203 . -167) (undo-tree-id1204 . -167) (undo-tree-id1205 . -167) (undo-tree-id1206 . -167) (undo-tree-id1207 . -167) (nil fontified t 11008 . 11046) (nil fontified t 11007 . 11008) (nil fontified t 10998 . 11007) (nil fontified t 10925 . 10998) (nil rear-nonsticky t 11091 . 11092)) (26619 8338 733773 0) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . 10960)) nil (26619 8425 230630 0) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t)) . 10960)) nil (26619 8425 230629 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10960)) nil (26619 8425 230627 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 10960)) nil (26619 8425 230626 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10960)) nil (26619 8425 230624 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 10960)) nil (26619 8425 230623 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10960)) nil (26619 8425 230621 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 10960)) nil (26619 8425 230620 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10960)) nil (26619 8425 230618 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10960)) nil (26619 8425 230617 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10960)) nil (26619 8425 230615 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 10960)) nil (26619 8425 230614 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10959) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1)) nil (26619 8425 230612 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10959)) nil (26619 8425 230605 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10959)) nil (26619 8425 230603 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 10959)) nil (26619 8425 230602 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 10959)) nil (26619 8425 230600 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 10959)) nil (26619 8425 230598 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10959)) nil (26619 8425 230597 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10959)) nil (26619 8425 230595 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 10959)) nil (26619 8425 230594 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 10959)) nil (26619 8425 230592 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10959)) nil (26619 8425 230591 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 10959)) nil (26619 8425 230589 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10959)) nil (26619 8425 230588 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 10959)) nil (26619 8425 230586 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 10959)) nil (26619 8425 230585 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10959)) nil (26619 8425 230583 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 10959)) nil (26619 8425 230582 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11098)) nil (26619 8425 230581 0) 0 nil])
([nil nil ((10504 . 10505) 10474) nil (26619 8425 230579 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10505) (undo-tree-id1282 . 1)) nil (26619 8425 230577 0) 0 nil])
([nil nil ((#("  " 0 2 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -11052) (undo-tree-id1280 . -2) (undo-tree-id1281 . -2) 11054 (11051 . 11054) 10987) nil (26619 8425 230574 0) 0 nil])
([nil nil ((#("
" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . 11052) (undo-tree-id1275 . 1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1)) nil (26619 8425 230567 0) 0 nil])
([nil nil ((11129 . 11131) (11110 . 11129) (#("a" 0 1 (fontified t)) . -11110) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (#("l" 0 1 (fontified t)) . -11111) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (#("g" 0 1 (fontified t)) . -11112) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) 11113 (11109 . 11113) (11107 . 11109) (11099 . 11107) (#("The " 0 4 (fontified t)) . -11099) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) 11103 (11099 . 11103) (11098 . 11099) (11097 . 11098) 11052) nil (26619 8425 230556 0) 0 nil])
([nil nil ((#("Dijkstra's search uses a gready 
" 0 8 (fontified t) 8 9 (fontified t) 9 32 (fontified t) 32 33 (fontified t rear-nonsticky t)) . 11099) (undo-tree-id1259 . -32) (undo-tree-id1260 . -32) (undo-tree-id1261 . -32) (undo-tree-id1262 . -32) (undo-tree-id1263 . -32) (undo-tree-id1264 . 1) (undo-tree-id1265 . -8) (undo-tree-id1266 . -32) 11131) nil (26619 8425 230536 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11099) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . 1)) nil (26619 8425 230522 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 11258)) nil (26619 8425 230516 0) 0 nil])
([nil nil ((11290 . 11296) (#("n" 0 1 (fontified t)) . -11290) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) 11291 (11279 . 11291) (11258 . 11279)) nil (26619 8425 230514 0) 0 nil])
([nil nil ((#("path between two nodes that has the minimum" 0 43 (fontified t)) . 11297) (undo-tree-id1253 . -42)) nil (26619 8425 230508 0) 0 nil])
([nil nil ((11296 . 11297) (#(" " 0 1 (fontified t)) . 11296) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . 1)) nil (26619 8425 230504 0) 0 nil])
([nil nil ((11296 . 11297) (#("s" 0 1 (fontified t)) . -11296) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (#("s" 0 1 (fontified t)) . -11297) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) 11298 (11296 . 11298) (#("." 0 1 (fontified t)) . 11296) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1)) nil (26619 8425 230496 0) 0 nil])
([nil nil ((#("\\textit{cost}. 
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 7 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t) 8 12 (face (font-latex-italic-face) fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 15 (fontified t) 15 16 (fontified t)) . 11298) (undo-tree-id1210 . -15) (undo-tree-id1211 . -15) (undo-tree-id1212 . -15) (undo-tree-id1213 . -15) (undo-tree-id1214 . -15) (undo-tree-id1215 . -15) (undo-tree-id1216 . -15) (undo-tree-id1217 . -15) (undo-tree-id1218 . -15) (undo-tree-id1219 . -15) (undo-tree-id1220 . -15) (undo-tree-id1221 . -15) (undo-tree-id1222 . -15) (undo-tree-id1223 . -15) (undo-tree-id1224 . -15) (undo-tree-id1225 . -16) (undo-tree-id1226 . -16) 11313) nil (26619 8425 230456 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11298) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1)) nil (26619 8425 230423 0) 0 nil])
([nil nil ((#("emoji" 0 5 (face (font-lock-function-name-face) fontified t)) . 95) (undo-tree-id1287 . -4) (t 26619 8425 250602 958000)) nil (26619 8615 341765 0) 0 nil])
([nil nil ((#("," 0 1 (face (font-lock-function-name-face) fontified t)) . 93)) nil (26619 8615 341753 0) 0 nil])
([nil nil ((#(" " 0 1 (face (font-lock-function-name-face) fontified t)) . 93)) nil (26619 8615 341748 0) 0 nil])
([nil nil ((11290 . 11291) (t 26619 8615 362257 652000) 11289) nil (26619 18881 906735 0) 0 nil])
([nil nil ((11291 . 11292)) nil (26619 18881 906717 0) 0 nil])
([nil nil ((11290 . 11300) (t 26619 18881 940608 943000)) nil (26619 18911 602300 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11299) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) 11300) nil (26619 18911 602294 0) 0 nil])
([nil nil ((11300 . 11303) (#(" " 0 1 (fontified nil)) . 11294) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (11293 . 11294) (11299 . 11300)) nil (26619 18911 602263 0) 0 nil])
([nil nil ((#("nod" 0 3 (fontified t)) . -11300) (undo-tree-id1739 . -3) (undo-tree-id1740 . -3) (undo-tree-id1741 . -3) (undo-tree-id1742 . -3) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -2) (undo-tree-id1748 . -2) (undo-tree-id1749 . -2) (undo-tree-id1750 . -2) (undo-tree-id1751 . -3) (undo-tree-id1752 . -3) (undo-tree-id1753 . -3) (undo-tree-id1754 . -3) (undo-tree-id1755 . -3) (undo-tree-id1756 . -3) (undo-tree-id1757 . -3) (undo-tree-id1758 . -3) (undo-tree-id1759 . -3) (undo-tree-id1760 . -3) (undo-tree-id1761 . -3) 11303) nil (26619 18911 602247 0) 0 nil])
([nil nil ((#("every " 0 6 (fontified t)) . -11294) (undo-tree-id1683 . -6) (undo-tree-id1684 . -6) (undo-tree-id1685 . -6) (undo-tree-id1686 . -6) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -2) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -3) (undo-tree-id1696 . -3) (undo-tree-id1697 . -3) (undo-tree-id1698 . -3) (undo-tree-id1699 . -4) (undo-tree-id1700 . -5) (undo-tree-id1701 . -5) (undo-tree-id1702 . -5) (undo-tree-id1703 . -5) (undo-tree-id1704 . -5) (undo-tree-id1705 . -5) (undo-tree-id1706 . -5) (undo-tree-id1707 . -5) (undo-tree-id1708 . -5) (undo-tree-id1709 . -5) (undo-tree-id1710 . -5) (undo-tree-id1711 . -5) (undo-tree-id1712 . -6) (undo-tree-id1713 . -6) (undo-tree-id1714 . -6) (undo-tree-id1715 . -6) (undo-tree-id1716 . -6) (undo-tree-id1717 . -6) (undo-tree-id1718 . -6) (undo-tree-id1719 . -6) (undo-tree-id1720 . -6) (undo-tree-id1721 . -6) (undo-tree-id1722 . -6) (undo-tree-id1723 . -6) (undo-tree-id1724 . -6) (undo-tree-id1725 . -6) (undo-tree-id1726 . -6) (undo-tree-id1727 . -6) (undo-tree-id1728 . -6) (undo-tree-id1729 . -6) (undo-tree-id1730 . -6) (undo-tree-id1731 . -6) (undo-tree-id1732 . -6) (undo-tree-id1733 . -6) (undo-tree-id1734 . -6) (undo-tree-id1735 . -6) (undo-tree-id1736 . -6) (undo-tree-id1737 . -6) (undo-tree-id1738 . -6) 11300) nil (26619 18911 602175 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11293) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) 11294) nil (26619 18911 601976 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 11294) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (11293 . 11294) (11293 . 11300)) nil (26619 18911 601768 0) 0 nil])
([nil nil ((#("node, " 0 6 (fontified t)) . -11294) (undo-tree-id1579 . -6) (undo-tree-id1580 . -6) (undo-tree-id1581 . -6) (undo-tree-id1582 . -6) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -3) (undo-tree-id1592 . -3) (undo-tree-id1593 . -3) (undo-tree-id1594 . -3) (undo-tree-id1595 . -4) (undo-tree-id1596 . -4) (undo-tree-id1597 . -4) (undo-tree-id1598 . -4) (undo-tree-id1599 . -5) (undo-tree-id1600 . -5) (undo-tree-id1601 . -5) (undo-tree-id1602 . -5) (undo-tree-id1603 . -6) (undo-tree-id1604 . -6) (undo-tree-id1605 . -6) (undo-tree-id1606 . -6) (undo-tree-id1607 . -6) (undo-tree-id1608 . -6) (undo-tree-id1609 . -6) (undo-tree-id1610 . -6) 11300) nil (26619 18911 601748 0) 0 nil])
([nil nil ((#("At
" 0 3 (fontified t)) . -11291) (undo-tree-id1458 . -3) (undo-tree-id1459 . -3) (undo-tree-id1460 . -3) (undo-tree-id1461 . -3) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -2) (undo-tree-id1467 . -2) (undo-tree-id1468 . -2) (undo-tree-id1469 . -2) (undo-tree-id1470 . -2) (undo-tree-id1471 . -2) (undo-tree-id1472 . -2) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -2) (undo-tree-id1476 . -2) (undo-tree-id1477 . -2) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -2) (undo-tree-id1482 . -2) (undo-tree-id1483 . -2) (undo-tree-id1484 . -2) (undo-tree-id1485 . -2) (undo-tree-id1486 . -2) (undo-tree-id1487 . -2) (undo-tree-id1488 . -2) (undo-tree-id1489 . -2) (undo-tree-id1490 . -2) (undo-tree-id1491 . -2) (undo-tree-id1492 . -2) (undo-tree-id1493 . -2) (undo-tree-id1494 . -2) (undo-tree-id1495 . -2) (undo-tree-id1496 . -2) (undo-tree-id1497 . -2) (undo-tree-id1498 . -2) (undo-tree-id1499 . -2) (undo-tree-id1500 . -2) (undo-tree-id1501 . -2) (undo-tree-id1502 . -2) (undo-tree-id1503 . -2) (undo-tree-id1504 . -2) (undo-tree-id1505 . -2) (undo-tree-id1506 . -2) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) (undo-tree-id1509 . -2) (undo-tree-id1510 . -2) (undo-tree-id1511 . -2) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (undo-tree-id1514 . -2) (undo-tree-id1515 . -2) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) (undo-tree-id1525 . -2) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (undo-tree-id1528 . -2) (undo-tree-id1529 . -2) (undo-tree-id1530 . -2) (undo-tree-id1531 . -2) (undo-tree-id1532 . -2) (undo-tree-id1533 . -2) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2) (undo-tree-id1536 . -2) (undo-tree-id1537 . -2) (undo-tree-id1538 . -2) (undo-tree-id1539 . -3) (undo-tree-id1540 . -3) (undo-tree-id1541 . -3) (undo-tree-id1542 . -3) (undo-tree-id1543 . -3) (undo-tree-id1544 . -3) (undo-tree-id1545 . -3) (undo-tree-id1546 . -3) (undo-tree-id1547 . -3) (undo-tree-id1548 . -3) (undo-tree-id1549 . -3) (undo-tree-id1550 . -3) (undo-tree-id1551 . -3) (undo-tree-id1552 . -3) (undo-tree-id1553 . -3) (undo-tree-id1554 . -3) (undo-tree-id1555 . -3) (undo-tree-id1556 . -3) (undo-tree-id1557 . -3) (undo-tree-id1558 . -3) (undo-tree-id1559 . -3) (undo-tree-id1560 . -3) (undo-tree-id1561 . -3) (undo-tree-id1562 . -3) (undo-tree-id1563 . -3) (undo-tree-id1564 . -3) (undo-tree-id1565 . -3) (undo-tree-id1566 . -3) (undo-tree-id1567 . -3) (undo-tree-id1568 . -3) (undo-tree-id1569 . -3) (undo-tree-id1570 . -3) (undo-tree-id1571 . -3) (undo-tree-id1572 . -3) (undo-tree-id1573 . -3) (undo-tree-id1574 . -3) (undo-tree-id1575 . -3) (undo-tree-id1576 . -3) (undo-tree-id1577 . -3) (undo-tree-id1578 . -3) 11294) nil (26619 18911 601639 0) 0 nil])
([nil nil ((11300 . 11306) (#(" " 0 1 (fontified nil)) . 11294) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (11293 . 11294) (11291 . 11300)) nil (26619 18911 601256 0) 0 nil])
([nil nil ((#("node, " 0 6 (fontified t)) . -11300) (undo-tree-id1425 . -6) (undo-tree-id1426 . -6) (undo-tree-id1427 . -6) (undo-tree-id1428 . -6) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -2) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) (undo-tree-id1436 . -2) (undo-tree-id1437 . -3) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -5) (undo-tree-id1443 . -5) (undo-tree-id1444 . -5) (undo-tree-id1445 . -5) (undo-tree-id1446 . -6) (undo-tree-id1447 . -6) (undo-tree-id1448 . -6) (undo-tree-id1449 . -6) (undo-tree-id1450 . -6) (undo-tree-id1451 . -6) (undo-tree-id1452 . -6) (undo-tree-id1453 . -6) 11306) nil (26619 18911 601231 0) 0 nil])
([nil nil ((#("every " 0 6 (fontified t)) . -11294) (undo-tree-id1365 . -6) (undo-tree-id1366 . -6) (undo-tree-id1367 . -6) (undo-tree-id1368 . -6) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -2) (undo-tree-id1374 . -2) (undo-tree-id1375 . -2) (undo-tree-id1376 . -2) (undo-tree-id1377 . -3) (undo-tree-id1378 . -3) (undo-tree-id1379 . -3) (undo-tree-id1380 . -3) (undo-tree-id1381 . -4) (undo-tree-id1382 . -4) (undo-tree-id1383 . -4) (undo-tree-id1384 . -4) (undo-tree-id1385 . -5) (undo-tree-id1386 . -5) (undo-tree-id1387 . -5) (undo-tree-id1388 . -5) (undo-tree-id1389 . -6) (undo-tree-id1390 . -6) (undo-tree-id1391 . -6) (undo-tree-id1392 . -6) (undo-tree-id1393 . -6) (undo-tree-id1394 . -6) (undo-tree-id1395 . -6) (undo-tree-id1396 . -6) (undo-tree-id1397 . -6) (undo-tree-id1398 . -6) (undo-tree-id1399 . -6) (undo-tree-id1400 . -6) (undo-tree-id1401 . -6) (undo-tree-id1402 . -6) (undo-tree-id1403 . -6) (undo-tree-id1404 . -6) (undo-tree-id1405 . -6) (undo-tree-id1406 . -6) (undo-tree-id1407 . -6) (undo-tree-id1408 . -6) (undo-tree-id1409 . -6) (undo-tree-id1410 . -6) (undo-tree-id1411 . -6) (undo-tree-id1412 . -6) (undo-tree-id1413 . -6) (undo-tree-id1414 . -6) (undo-tree-id1415 . -6) (undo-tree-id1416 . -6) (undo-tree-id1417 . -6) (undo-tree-id1418 . -6) (undo-tree-id1419 . -6) (undo-tree-id1420 . -6) (undo-tree-id1421 . -6) (undo-tree-id1422 . -6) (undo-tree-id1423 . -6) (undo-tree-id1424 . -6) 11300) nil (26619 18911 601137 0) 0 nil])
([nil nil ((#("At
" 0 3 (fontified t)) . -11291) (undo-tree-id1288 . -3) (undo-tree-id1289 . -3) (undo-tree-id1290 . -3) (undo-tree-id1291 . -3) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -2) (undo-tree-id1297 . -2) (undo-tree-id1298 . -2) (undo-tree-id1299 . -2) (undo-tree-id1300 . -3) (undo-tree-id1301 . -3) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) (undo-tree-id1306 . -3) (undo-tree-id1307 . -3) (undo-tree-id1308 . -3) (undo-tree-id1309 . -3) (undo-tree-id1310 . -3) (undo-tree-id1311 . -3) (undo-tree-id1312 . -3) (undo-tree-id1313 . -3) (undo-tree-id1314 . -3) (undo-tree-id1315 . -3) (undo-tree-id1316 . -3) (undo-tree-id1317 . -3) (undo-tree-id1318 . -3) (undo-tree-id1319 . -3) (undo-tree-id1320 . -3) (undo-tree-id1321 . -3) (undo-tree-id1322 . -3) (undo-tree-id1323 . -3) (undo-tree-id1324 . -3) (undo-tree-id1325 . -3) (undo-tree-id1326 . -3) (undo-tree-id1327 . -3) (undo-tree-id1328 . -3) (undo-tree-id1329 . -3) (undo-tree-id1330 . -3) (undo-tree-id1331 . -3) (undo-tree-id1332 . -3) (undo-tree-id1333 . -3) (undo-tree-id1334 . -3) (undo-tree-id1335 . -3) (undo-tree-id1336 . -3) (undo-tree-id1337 . -3) (undo-tree-id1338 . -3) (undo-tree-id1339 . -3) (undo-tree-id1340 . -3) (undo-tree-id1341 . -3) (undo-tree-id1342 . -3) (undo-tree-id1343 . -3) (undo-tree-id1344 . -3) (undo-tree-id1345 . -3) (undo-tree-id1346 . -3) (undo-tree-id1347 . -3) (undo-tree-id1348 . -3) (undo-tree-id1349 . -3) (undo-tree-id1350 . -3) (undo-tree-id1351 . -3) (undo-tree-id1352 . -3) (undo-tree-id1353 . -3) (undo-tree-id1354 . -3) (undo-tree-id1355 . -3) (undo-tree-id1356 . -3) (undo-tree-id1357 . -3) (undo-tree-id1358 . -3) (undo-tree-id1359 . -3) (undo-tree-id1360 . -3) (undo-tree-id1361 . -3) (undo-tree-id1362 . -3) (undo-tree-id1363 . -3) (undo-tree-id1364 . -3) 11294) nil (26619 18911 600933 0) 0 nil])
([nil nil ((11305 . 11312) (#(" " 0 1 (fontified nil)) . 11295) (11294 . 11295) (11291 . 11305) (t 26619 18911 641446 102000)) nil (26619 18948 14160 0) 0 nil])
([nil nil ((11312 . 11324)) nil (26619 18948 14156 0) 0 nil])
([nil nil ((#("below" 0 5 (fontified t)) . -11319) (undo-tree-id1927 . -5) (undo-tree-id1928 . -5) (undo-tree-id1929 . -5) (undo-tree-id1930 . -5) 11324) nil (26619 18948 14153 0) 0 nil])
([nil nil ((#("summarized " 0 11 (fontified t)) . -11308) (undo-tree-id1923 . -11) (undo-tree-id1924 . -11) (undo-tree-id1925 . -11) (undo-tree-id1926 . -11) 11319) nil (26619 18948 14141 0) 0 nil])
([nil nil ((#("is " 0 3 (fontified t)) . -11305) (undo-tree-id1919 . -3) (undo-tree-id1920 . -3) (undo-tree-id1921 . -3) (undo-tree-id1922 . -3) 11308) nil (26619 18948 14129 0) 0 nil])
([nil nil ((#("procedure " 0 10 (fontified t)) . -11295) (undo-tree-id1915 . -10) (undo-tree-id1916 . -10) (undo-tree-id1917 . -10) (undo-tree-id1918 . -10) 11305) nil (26619 18948 14117 0) 0 nil])
([nil nil ((#("The
" 0 4 (fontified t)) . -11291) (undo-tree-id1911 . -4) (undo-tree-id1912 . -4) (undo-tree-id1913 . -4) (undo-tree-id1914 . -4) 11295) nil (26619 18948 14105 0) 0 nil])
([nil nil ((11302 . 11311) (#(" " 0 1 (fontified nil)) . 11294) (11293 . 11294) (11291 . 11302)) nil (26619 18948 14094 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11310) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) 11311) nil (26619 18948 14091 0) 0 nil])
([nil nil ((11310 . 11312)) nil (26619 18948 14081 0) 0 nil])
([nil nil ((11312 . 11319)) nil (26619 18948 14079 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -11317) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (#(":" 0 1 (fontified t)) . -11318) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) 11319) nil (26619 18948 14076 0) 0 nil])
([nil nil ((11317 . 11320)) nil (26619 18948 14040 0) 0 nil])
([nil nil ((11320 . 11322)) nil (26619 18948 14038 0) 0 nil])
([nil nil ((11322 . 11326)) nil (26619 18948 14036 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -11325) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) 11326) nil (26619 18948 14033 0) 0 nil])
([nil nil ((11325 . 11327)) nil (26619 18948 14005 0) 0 nil])
([nil nil ((11327 . 11330)) nil (26619 18948 14003 0) 0 nil])
([nil nil ((#("begin   " 0 8 (fontified t)) . -11322) (undo-tree-id1837 . -8) (undo-tree-id1838 . -8) (undo-tree-id1839 . -8) (undo-tree-id1840 . -8) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -2) (undo-tree-id1846 . -2) (undo-tree-id1847 . -2) (undo-tree-id1848 . -2) (undo-tree-id1849 . -3) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -3) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) (undo-tree-id1855 . -3) (undo-tree-id1856 . -3) (undo-tree-id1857 . -3) (undo-tree-id1858 . -3) (undo-tree-id1859 . -3) (undo-tree-id1860 . -3) (undo-tree-id1861 . -3) (undo-tree-id1862 . -3) (undo-tree-id1863 . -3) (undo-tree-id1864 . -4) (undo-tree-id1865 . -4) (undo-tree-id1866 . -4) (undo-tree-id1867 . -4) (undo-tree-id1868 . -5) (undo-tree-id1869 . -5) (undo-tree-id1870 . -5) (undo-tree-id1871 . -5) (undo-tree-id1872 . -8) (undo-tree-id1873 . -8) (undo-tree-id1874 . -8) (undo-tree-id1875 . -8) (undo-tree-id1876 . -8) (undo-tree-id1877 . -8) (undo-tree-id1878 . -8) (undo-tree-id1879 . -8) 11330) nil (26619 18948 13997 0) 0 nil])
([nil nil ((11322 . 11323)) nil (26619 18948 13888 0) 0 nil])
([nil nil ((11323 . 11328)) nil (26619 18948 13886 0) 0 nil])
([nil nil ((11328 . 11330)) nil (26619 18948 13883 0) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t fontified t)) . -11328) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (#(" " 0 1 (font-lock-multiline t fontified t)) . -11329) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) 11330) nil (26619 18948 13878 0) 0 nil])
([nil nil ((11328 . 11330) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11328) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (11328 . 11329)) nil (26619 18948 13813 0) 0 nil])
([nil nil ((11329 . 11334)) nil (26619 18948 13806 0) 0 nil])
([nil nil ((11334 . 11338)) nil (26619 18948 13804 0) 0 nil])
([nil nil ((#("testi    " 0 9 (face (font-lock-function-name-face) fontified t)) . -11329) (undo-tree-id1775 . -9) (undo-tree-id1776 . -9) (undo-tree-id1777 . -9) (undo-tree-id1778 . -9) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -2) (undo-tree-id1784 . -2) (undo-tree-id1785 . -2) (undo-tree-id1786 . -2) (undo-tree-id1787 . -3) (undo-tree-id1788 . -3) (undo-tree-id1789 . -3) (undo-tree-id1790 . -3) (undo-tree-id1791 . -4) (undo-tree-id1792 . -4) (undo-tree-id1793 . -4) (undo-tree-id1794 . -4) (undo-tree-id1795 . -5) (undo-tree-id1796 . -5) (undo-tree-id1797 . -5) (undo-tree-id1798 . -5) (undo-tree-id1799 . -9) (undo-tree-id1800 . -9) (undo-tree-id1801 . -9) (undo-tree-id1802 . -9) (undo-tree-id1803 . -9) (undo-tree-id1804 . -9) (undo-tree-id1805 . -9) (undo-tree-id1806 . -9) 11338) nil (26619 18948 13793 0) 0 nil])
([nil nil ((#("itemize " 0 8 (fontified t)) . -11322) (undo-tree-id2135 . -8) (undo-tree-id2136 . -8) (undo-tree-id2137 . -8) (undo-tree-id2138 . -8) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -2) (undo-tree-id2144 . -2) (undo-tree-id2145 . -2) (undo-tree-id2146 . -2) (undo-tree-id2147 . -3) (undo-tree-id2148 . -3) (undo-tree-id2149 . -3) (undo-tree-id2150 . -3) (undo-tree-id2151 . -4) (undo-tree-id2152 . -4) (undo-tree-id2153 . -4) (undo-tree-id2154 . -4) (undo-tree-id2155 . -5) (undo-tree-id2156 . -5) (undo-tree-id2157 . -5) (undo-tree-id2158 . -5) (undo-tree-id2159 . -6) (undo-tree-id2160 . -6) (undo-tree-id2161 . -6) (undo-tree-id2162 . -6) (undo-tree-id2163 . -7) (undo-tree-id2164 . -7) (undo-tree-id2165 . -7) (undo-tree-id2166 . -7) (undo-tree-id2167 . -8) (undo-tree-id2168 . -8) (undo-tree-id2169 . -8) (undo-tree-id2170 . -8) (undo-tree-id2171 . -8) (undo-tree-id2172 . -8) (undo-tree-id2173 . -8) (undo-tree-id2174 . -8) 11330 (11329 . 11330) (11322 . 11329) (#("}" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 11322) (#("\\" 0 1 (fontified t)) . -11322) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) 11323 (#("begin{" 0 5 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11323) (undo-tree-id2271 . -6) (undo-tree-id2272 . -6) (undo-tree-id2273 . -5) (undo-tree-id2274 . -5) (undo-tree-id2275 . -5) (undo-tree-id2276 . -5) (undo-tree-id2277 . -5) (undo-tree-id2278 . -5) (undo-tree-id2279 . -5) (undo-tree-id2280 . -5) (undo-tree-id2281 . -5) (undo-tree-id2282 . -5) (undo-tree-id2283 . -5) (undo-tree-id2284 . -5) (undo-tree-id2285 . -5) (undo-tree-id2286 . -6) (undo-tree-id2287 . -6) (undo-tree-id2288 . -6) (undo-tree-id2289 . -6) (undo-tree-id2290 . -6) (undo-tree-id2291 . -6) (undo-tree-id2292 . -6) (undo-tree-id2293 . -6) (undo-tree-id2294 . -6) (undo-tree-id2295 . -6) (undo-tree-id2296 . -6) (undo-tree-id2297 . -6) (undo-tree-id2298 . -6) (undo-tree-id2299 . -6) (undo-tree-id2300 . -6) (undo-tree-id2301 . -6) (undo-tree-id2302 . -6) (undo-tree-id2303 . -6) (undo-tree-id2304 . -6) (undo-tree-id2305 . -6) (undo-tree-id2306 . -6) (undo-tree-id2307 . -6) (undo-tree-id2308 . -6) (undo-tree-id2309 . -6) (undo-tree-id2310 . -6) (undo-tree-id2311 . -6) (undo-tree-id2312 . -6) (undo-tree-id2313 . -6) (undo-tree-id2314 . -6) (undo-tree-id2315 . -6) (undo-tree-id2316 . -6) (undo-tree-id2317 . -6) (undo-tree-id2318 . -6) (undo-tree-id2319 . -6) (undo-tree-id2320 . -6) (undo-tree-id2321 . -6) (undo-tree-id2322 . -6) (undo-tree-id2323 . -6) (undo-tree-id2324 . -6) (undo-tree-id2325 . -6) (undo-tree-id2326 . -6) (undo-tree-id2327 . -6) (undo-tree-id2328 . -6) (undo-tree-id2329 . -6) (undo-tree-id2330 . -6) (undo-tree-id2331 . -6) (undo-tree-id2332 . -6) (undo-tree-id2333 . -6) (undo-tree-id2334 . -6) (undo-tree-id2335 . -6) (undo-tree-id2336 . -6) (undo-tree-id2337 . -6) (undo-tree-id2338 . -6) (undo-tree-id2339 . -6) (undo-tree-id2340 . -6) (undo-tree-id2341 . -6) (undo-tree-id2342 . -6) (undo-tree-id2343 . -6) (undo-tree-id2344 . -6) (undo-tree-id2345 . -6) (undo-tree-id2346 . -6) (undo-tree-id2347 . -6) (undo-tree-id2348 . -6) (undo-tree-id2349 . -6) (undo-tree-id2350 . -6) (undo-tree-id2351 . -6) (undo-tree-id2352 . -6) (undo-tree-id2353 . -6) (undo-tree-id2354 . -6) (undo-tree-id2355 . -6) (undo-tree-id2356 . -6) (undo-tree-id2357 . -6) (undo-tree-id2358 . -6) (undo-tree-id2359 . -6) 11329 (#("itemize" 0 7 (face (font-lock-function-name-face) fontified t)) . -11329) (undo-tree-id2360 . -7) (undo-tree-id2361 . -7) (undo-tree-id2362 . -7) (undo-tree-id2363 . -7) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -2) (undo-tree-id2369 . -2) (undo-tree-id2370 . -2) (undo-tree-id2371 . -2) (undo-tree-id2372 . -3) (undo-tree-id2373 . -3) (undo-tree-id2374 . -3) (undo-tree-id2375 . -3) (undo-tree-id2376 . -4) (undo-tree-id2377 . -4) (undo-tree-id2378 . -4) (undo-tree-id2379 . -4) (undo-tree-id2380 . -5) (undo-tree-id2381 . -5) (undo-tree-id2382 . -5) (undo-tree-id2383 . -5) (undo-tree-id2384 . -6) (undo-tree-id2385 . -6) (undo-tree-id2386 . -6) (undo-tree-id2387 . -6) (undo-tree-id2388 . -7) (undo-tree-id2389 . -7) (undo-tree-id2390 . -7) (undo-tree-id2391 . -7) (undo-tree-id2392 . -7) (undo-tree-id2393 . -7) (undo-tree-id2394 . -7) (undo-tree-id2395 . -7) 11336 (11329 . 11336) (t 26619 18948 41573 27000)) nil (26619 19036 744780 0) 0 nil])
([nil nil ((11352 . 11353) (#("}" 0 1 (face (font-lock-function-name-face) fontified nil)) . -11352) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11353) (11352 . 11353) (11345 . 11352) (11344 . 11346) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11344) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (11344 . 11345) (11341 . 11344) (11340 . 11341) (11337 . 11340) (11336 . 11337) (#("}" 0 1 (face (font-lock-function-name-face) fontified nil)) . -11336) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11337) (11329 . 11337) (11328 . 11330) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11328) (11328 . 11329) (11323 . 11328) (#("e" 0 1 (face (font-latex-sedate-face) fontified t)) . -11323) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) 11324 (11323 . 11324) (11322 . 11323) (#("b" 0 1 (fontified t)) . -11322) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) 11323 (11322 . 11323) (#("itemiz" 0 6 (fontified t)) . -11322) (undo-tree-id2131 . -6) (undo-tree-id2132 . -6) (undo-tree-id2133 . -6) (undo-tree-id2134 . -6) 11328 (11322 . 11328)) nil (26619 19036 744237 0) 0 nil])
([nil nil (11353) nil (26619 19036 744196 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11339) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) 11340) nil (26619 19036 744193 0) 0 nil])
([nil nil (11339) nil (26619 19036 744172 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11230) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) 11231 ("  " . 16826) ("  " . 15197) ("  " . 15045) ("  " . 14126) ("  " . 13887) ("  " . 13471) (" " . 13266) (#(" " 0 1 (fontified t)) . 12885) (#(" " 0 1 (fontified t)) . 12293) (#(" " 0 1 (fontified t)) . 12015) (#(" " 0 1 (fontified t)) . 11775) (#(" " 0 1 (fontified t)) . 11509) (#(" " 0 1 (fontified t)) . 11440) (#(" " 0 1 (fontified t)) . 11402) (#(" " 0 1 (fontified t)) . 10258) (" " . 9921) ("  " . 9446) (" " . 6672) (" " . 6239) (" " . 5142) (" " . 3792) ("                  " . 2413) ("                " . 2365) ("                 " . 2343) ("                    " . 2322) ("                 " . 2304) ("         " . 2283) ("   " . 2052) 11339) nil (26619 19036 744159 0) 0 nil])
([nil nil ((11232 . 11233) (11229 . 11232) 11214) nil (26619 19036 744067 0) 0 nil])
([nil nil ((11221 . 11230) (#("itemize" 0 7 (face (font-lock-function-name-face) fontified t)) . 11221) (undo-tree-id2070 . -7) (undo-tree-id2071 . -7) (undo-tree-id2072 . -6)) nil (26619 19036 744064 0) 0 nil])
([nil nil ((11241 . 11252) (#("itemize" 0 7 (face (font-lock-function-name-face) fontified t)) . 11241) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -2) (undo-tree-id2012 . -2) (undo-tree-id2013 . -2) (undo-tree-id2014 . -2) (undo-tree-id2015 . -3) (undo-tree-id2016 . -3) (undo-tree-id2017 . -3) (undo-tree-id2018 . -3) (undo-tree-id2019 . -4) (undo-tree-id2020 . -4) (undo-tree-id2021 . -4) (undo-tree-id2022 . -4) (undo-tree-id2023 . -5) (undo-tree-id2024 . -5) (undo-tree-id2025 . -5) (undo-tree-id2026 . -5) (undo-tree-id2027 . -6) (undo-tree-id2028 . -6) (undo-tree-id2029 . -6) (undo-tree-id2030 . -6) (undo-tree-id2031 . -7) (undo-tree-id2032 . -7) (undo-tree-id2033 . -7) (undo-tree-id2034 . -7) (undo-tree-id2035 . -7) (undo-tree-id2036 . -7) (undo-tree-id2037 . -7) (undo-tree-id2038 . -7) (undo-tree-id2039 . -7) (undo-tree-id2040 . -7) (undo-tree-id2041 . -7) (undo-tree-id2042 . -7) (undo-tree-id2043 . -7) (undo-tree-id2044 . -7) (undo-tree-id2045 . -7) (undo-tree-id2046 . -7) (undo-tree-id2047 . -7) (undo-tree-id2048 . -7) (undo-tree-id2049 . -7) (undo-tree-id2050 . -7) (undo-tree-id2051 . -7) (undo-tree-id2052 . -6) (undo-tree-id2053 . -7) (undo-tree-id2054 . -7) (undo-tree-id2055 . -7) (undo-tree-id2056 . -7) (undo-tree-id2057 . -7) (undo-tree-id2058 . -7) (undo-tree-id2059 . -7) (undo-tree-id2060 . -7) (undo-tree-id2061 . -7) (undo-tree-id2062 . -7) (undo-tree-id2063 . -7) (undo-tree-id2064 . -7) (undo-tree-id2065 . -7) (undo-tree-id2066 . -7) (undo-tree-id2067 . -7) (undo-tree-id2068 . -7) (undo-tree-id2069 . -7)) nil (26619 19036 744051 0) 0 nil])
([nil nil ((11278 . 11280) (#("  " 0 2 (fontified nil)) . -11268) (11279 . 11280) (11271 . 11279) (11270 . 11271) (11268 . 11270) (#(" " 0 1 (fontified nil)) . 11267) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (11268 . 11269) (#("S" 0 1 (fontified t)) . -11268) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) 11269 (#("t" 0 1 (fontified t)) . -11269) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (#("e" 0 1 (fontified t)) . -11270) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) 11271 (11255 . 11271) (#("ending " 0 7 (fontified t)) . -11255) (undo-tree-id1955 . -7) (undo-tree-id1956 . -7) (undo-tree-id1957 . -7) (undo-tree-id1958 . -7) 11262 (#("node. " 0 6 (fontified t)) . -11262) (undo-tree-id1959 . -6) (undo-tree-id1960 . -6) (undo-tree-id1961 . -6) (undo-tree-id1962 . -6) 11268 (#("Set " 0 4 (fontified t)) . -11268) (undo-tree-id1963 . -4) (undo-tree-id1964 . -4) (undo-tree-id1965 . -4) (undo-tree-id1966 . -4) 11272 (#("every " 0 6 (fontified t)) . -11272) (undo-tree-id1967 . -6) (undo-tree-id1968 . -6) (undo-tree-id1969 . -6) (undo-tree-id1970 . -6) 11278 (#("node" 0 4 (fontified t)) . -11278) (undo-tree-id1971 . -4) (undo-tree-id1972 . -4) (undo-tree-id1973 . -4) (undo-tree-id1974 . -4) 11282 (11280 . 11282) (11259 . 11280) (11238 . 11259) (#("Set " 0 4 (fontified t)) . -11238) (undo-tree-id1975 . -4) (undo-tree-id1976 . -4) (undo-tree-id1977 . -4) (undo-tree-id1978 . -4) 11242 (#("each " 0 5 (fontified t)) . -11242) (undo-tree-id1979 . -5) (undo-tree-id1980 . -5) (undo-tree-id1981 . -5) (undo-tree-id1982 . -5) 11247 (11237 . 11247) (#("
" 0 1 (font-lock-multiline t fontified t)) . -11237) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (#("
" 0 1 (font-lock-multiline t fontified t)) . -11238) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (#(" " 0 1 (font-lock-multiline t fontified t)) . -11239) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (#(" " 0 1 (font-lock-multiline t fontified t)) . -11240) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) 11241 (11239 . 11241) (#("  " 0 2 (font-lock-multiline t fontified nil)) . 11238) (undo-tree-id1999 . -2) (undo-tree-id2000 . -2) (undo-tree-id2001 . -2) (undo-tree-id2002 . -2) (11238 . 11241) (#(" " 0 1 (fontified nil)) . 11237) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (#("  " 0 2 (fontified nil)) . -11232) (11240 . 11241) (11235 . 11240)) nil (26619 19036 743898 0) 0 nil])
([nil nil ((11277 . 11295)) nil (26619 19036 743745 0) 0 nil])
([nil nil ((11295 . 11298)) nil (26619 19036 743743 0) 0 nil])
([nil nil ((#("to " 0 3 (fontified t)) . -11295) (undo-tree-id1935 . -3) (undo-tree-id1936 . -3) (undo-tree-id1937 . -3) (undo-tree-id1938 . -3) 11298) nil (26619 19036 743740 0) 0 nil])
([nil nil ((#("other " 0 6 (fontified t)) . -11289) (undo-tree-id1931 . -6) (undo-tree-id1932 . -6) (undo-tree-id1933 . -6) (undo-tree-id1934 . -6) 11295) nil (26619 19036 743728 0) 0 nil])
([nil nil ((11289 . 11310)) nil (26619 19036 743702 0) 0 nil])
([nil nil ((11310 . 11325)) nil (26619 19036 743699 0) 0 nil])
([nil nil ((11325 . 11326)) nil (26619 19036 743690 0) 0 nil])
([nil nil ((11326 . 11327) (t 26619 19036 774925 937000)) nil (26619 19088 513491 0) 0 nil])
([nil nil ((11327 . 11330)) nil (26619 19088 513488 0) 0 nil])
([nil nil ((11330 . 11331)) nil (26619 19088 513486 0) 0 nil])
([nil nil ((11331 . 11336)) nil (26619 19088 513477 0) 0 nil])
([nil nil ((11433 . 11438) (11429 . 11433) (11408 . 11429) (11404 . 11408) (11395 . 11399) (#(" " 0 1 (fontified nil)) . 11395) (undo-tree-id2434 . -1) (11394 . 11395) (11383 . 11400) (11379 . 11383) (11358 . 11379) (11337 . 11358) (11336 . 11337) (t 26619 19088 540177 347000)) nil (26619 19137 91295 0) 0 nil])
([nil nil (11332) nil (26619 19137 91284 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11328) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (#(" " 0 1 (fontified t)) . -11329) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) 11330) nil (26619 19137 91279 0) 0 nil])
([nil nil ((11431 . 11436) 11393) nil (26619 19137 91222 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11432) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (#(" " 0 1 (fontified t)) . -11433) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (#(" " 0 1 (fontified t)) . -11434) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (#(" " 0 1 (fontified t)) . -11435) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) 11436) nil (26619 19137 91216 0) 0 nil])
([nil nil ((11432 . 11433)) nil (26619 19137 91159 0) 0 nil])
([nil nil ((11433 . 11454)) nil (26619 19137 91158 0) 0 nil])
([nil nil ((11454 . 11456)) nil (26619 19137 91155 0) 0 nil])
([nil nil ((11456 . 11475)) nil (26619 19137 91144 0) 0 nil])
([nil nil ((11475 . 11480) (t 26619 19137 117898 718000)) nil (26619 19203 246747 0) 0 nil])
([nil nil ((11431 . 11432)) nil (26619 19214 48258 0) 0 nil] [nil nil ((11449 . 11453) (#("teh " 0 4 (fontified t)) . -11449) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) 11453 (#("cost " 0 5 (fontified t)) . -11453) (undo-tree-id2439 . -5) (undo-tree-id2440 . -5) (undo-tree-id2441 . -5) (undo-tree-id2442 . -5) 11458 (#("is
      " 0 3 (fontified t) 3 9 (fontified t)) . -11458) (undo-tree-id2443 . -9) (undo-tree-id2444 . -9) (undo-tree-id2445 . -9) (undo-tree-id2446 . -9) 11467 (#("cumualitive. " 0 13 (fontified t)) . -11467) (undo-tree-id2447 . -13) (undo-tree-id2448 . -13) (undo-tree-id2449 . -13) (undo-tree-id2450 . -13) 11480 (#("teh " 0 4 (fontified t)) . -11480) (undo-tree-id2451 . -4) (undo-tree-id2452 . -4) (undo-tree-id2453 . -4) (undo-tree-id2454 . -4) 11484 (11480 . 11484) (11461 . 11467) (#(" " 0 1 (fontified nil)) . 11461) (11460 . 11461) (11461 . 11474) (#("cumalitive" 0 10 (fontified t)) . -11461) (undo-tree-id2455 . -10) (undo-tree-id2456 . -10) (undo-tree-id2457 . -10) (undo-tree-id2458 . -10) 11471 (11461 . 11471) (#("comulative" 0 10 (fontified t)) . -11461) (undo-tree-id2459 . -10) (undo-tree-id2460 . -10) (undo-tree-id2461 . -10) (undo-tree-id2462 . -10) 11471 (11460 . 11471) (11439 . 11460) (11438 . 11440) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -11438) (11438 . 11439) (11433 . 11438) (11432 . 11433) (#("N" 0 1 (fontified t)) . -11432) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (#("o" 0 1 (fontified t)) . -11433) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (#("t" 0 1 (fontified t)) . -11434) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) 11435 (11432 . 11435) (#("The " 0 4 (fontified t)) . -11432) (undo-tree-id2475 . -4) (undo-tree-id2476 . -4) (undo-tree-id2477 . -4) (undo-tree-id2478 . -4) 11436 (#("cost " 0 5 (fontified t)) . -11436) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) 11441 (11431 . 11441)) ((#(" The cost " 0 1 (fontified nil) 1 5 (fontified nil) 5 10 (fontified nil)) . 11431) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (11432 . 11441) (#("Not" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 11432) (11432 . 11435) (#("\\" 0 1 (face (font-latex-sedate-face) fontified nil)) . 11432) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (#("texit" 0 5 (face (font-latex-sedate-face) fontified nil)) . 11433) (undo-tree-id2489 . -5) (undo-tree-id2490 . -5) (undo-tree-id2491 . -5) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . 11438) (11438 . 11439) (#("{}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11438) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (#("Note that teh cost is" 0 10 (fontified nil) 10 14 (fontified nil) 14 19 (fontified nil) 19 21 (fontified nil)) . 11439) (undo-tree-id2495 . -10) (undo-tree-id2496 . -10) (undo-tree-id2497 . -10) (#(" comulative" 0 1 (fontified nil) 1 11 (fontified nil)) . 11460) (11461 . 11471) (#("cumalitive" 0 10 (fontified nil)) . 11461) (11461 . 11471) (#("cumualitive. " 0 13 (fontified nil)) . 11461) (#("
" 0 1 (fontified nil)) . 11460) (11461 . 11462) (#("      " 0 6 (fontified nil)) . 11461) (#("teh " 0 4 (fontified nil)) . 11480) (11449 . 11484) (#("the " 0 4 (fontified t)) . 11449) (undo-tree-id2498 . -4) (undo-tree-id2499 . -4) (undo-tree-id2500 . -4)) (26619 19202 790854 0) 0 nil])
([nil nil ((#("node. " 0 6 (fontified t)) . -11426) (undo-tree-id2685 . -6) (undo-tree-id2686 . -6) (undo-tree-id2687 . -5) (undo-tree-id2688 . -5) (undo-tree-id2689 . -5) (undo-tree-id2690 . -5) (undo-tree-id2691 . -6) (undo-tree-id2692 . -6) (undo-tree-id2693 . -6) (undo-tree-id2694 . -6) (undo-tree-id2695 . -6) (undo-tree-id2696 . -6) (undo-tree-id2697 . -6) (undo-tree-id2698 . -6) (undo-tree-id2699 . -6) 11432 (t 26619 19214 77208 432000)) nil (26619 19232 305308 0) 0 nil])
([nil nil ((apply -2 1399 1432 undo--wrap-and-run-primitive-undo 1399 1432 ((1401 . 1403) 1399))) ((apply 2 1399 1430 undo--wrap-and-run-primitive-undo 1399 1430 ((#("% " 0 2 (face font-lock-comment-face fontified t)) . 1401) 1399))) (26619 19202 790393 0) 0 nil])
([nil nil ((#("neighbour " 0 10 (fontified t)) . -11416) (undo-tree-id2666 . -10) (undo-tree-id2667 . -10) (undo-tree-id2668 . -10) (undo-tree-id2669 . -10) (undo-tree-id2670 . -10) (undo-tree-id2671 . -10) (undo-tree-id2672 . -10) (undo-tree-id2673 . -10) (undo-tree-id2674 . -10) (undo-tree-id2675 . -10) (undo-tree-id2676 . -10) (undo-tree-id2677 . -10) (undo-tree-id2678 . -10) (undo-tree-id2679 . -10) (undo-tree-id2680 . -10) (undo-tree-id2681 . -10) (undo-tree-id2682 . -10) (undo-tree-id2683 . -10) (undo-tree-id2684 . -10) 11426) nil (26619 19232 305278 0) 0 nil])
nil
([nil nil ((#("each " 0 5 (fontified t)) . -11411) (undo-tree-id2643 . -5) (undo-tree-id2644 . -5) (undo-tree-id2645 . -5) (undo-tree-id2646 . -5) (undo-tree-id2647 . -5) (undo-tree-id2648 . -5) (undo-tree-id2649 . -5) (undo-tree-id2650 . -5) (undo-tree-id2651 . -5) (undo-tree-id2652 . -5) (undo-tree-id2653 . -5) (undo-tree-id2654 . -5) (undo-tree-id2655 . -5) (undo-tree-id2656 . -5) (undo-tree-id2657 . -5) (undo-tree-id2658 . -5) (undo-tree-id2659 . -5) (undo-tree-id2660 . -5) (undo-tree-id2661 . -5) (undo-tree-id2662 . -5) (undo-tree-id2663 . -5) (undo-tree-id2664 . -5) (undo-tree-id2665 . -5) 11416) nil (26619 19232 305240 0) 0 nil])
([nil nil ((#("te " 0 3 (fontified t)) . -11408) (undo-tree-id2616 . -3) (undo-tree-id2617 . -3) (undo-tree-id2618 . -3) (undo-tree-id2619 . -3) (undo-tree-id2620 . -3) (undo-tree-id2621 . -3) (undo-tree-id2622 . -3) (undo-tree-id2623 . -3) (undo-tree-id2624 . -3) (undo-tree-id2625 . -3) (undo-tree-id2626 . -3) (undo-tree-id2627 . -3) (undo-tree-id2628 . -3) (undo-tree-id2629 . -3) (undo-tree-id2630 . -3) (undo-tree-id2631 . -3) (undo-tree-id2632 . -3) (undo-tree-id2633 . -3) (undo-tree-id2634 . -3) (undo-tree-id2635 . -3) (undo-tree-id2636 . -3) (undo-tree-id2637 . -3) (undo-tree-id2638 . -3) (undo-tree-id2639 . -3) (undo-tree-id2640 . -3) (undo-tree-id2641 . -3) (undo-tree-id2642 . -3) 11411) nil (26619 19232 305197 0) 0 nil])
([nil nil ((11408 . 11429)) nil (26619 19232 305143 0) 0 nil])
([nil nil ((11429 . 11433)) nil (26619 19232 305141 0) 0 nil])
([nil nil ((#("node" 0 4 (fontified t)) . -11429) (undo-tree-id2585 . -4) (undo-tree-id2586 . -4) (undo-tree-id2587 . -4) (undo-tree-id2588 . -4) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -2) (undo-tree-id2594 . -2) (undo-tree-id2595 . -2) (undo-tree-id2596 . -2) (undo-tree-id2597 . -3) (undo-tree-id2598 . -3) (undo-tree-id2599 . -3) (undo-tree-id2600 . -3) (undo-tree-id2601 . -4) (undo-tree-id2602 . -4) (undo-tree-id2603 . -4) (undo-tree-id2604 . -4) (undo-tree-id2605 . -4) (undo-tree-id2606 . -4) (undo-tree-id2607 . -4) (undo-tree-id2608 . -4) (undo-tree-id2609 . -4) (undo-tree-id2610 . -4) (undo-tree-id2611 . -4) (undo-tree-id2612 . -4) (undo-tree-id2613 . -4) (undo-tree-id2614 . -4) (undo-tree-id2615 . -4) 11433) nil (26619 19232 305137 0) 0 nil])
([nil nil ((#("neighbouring " 0 13 (fontified t)) . -11416) (undo-tree-id2501 . -13) (undo-tree-id2502 . -13) (undo-tree-id2503 . -13) (undo-tree-id2504 . -13) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -2) (undo-tree-id2510 . -2) (undo-tree-id2511 . -2) (undo-tree-id2512 . -2) (undo-tree-id2513 . -3) (undo-tree-id2514 . -4) (undo-tree-id2515 . -4) (undo-tree-id2516 . -4) (undo-tree-id2517 . -4) (undo-tree-id2518 . -5) (undo-tree-id2519 . -5) (undo-tree-id2520 . -5) (undo-tree-id2521 . -5) (undo-tree-id2522 . -6) (undo-tree-id2523 . -6) (undo-tree-id2524 . -6) (undo-tree-id2525 . -6) (undo-tree-id2526 . -7) (undo-tree-id2527 . -7) (undo-tree-id2528 . -7) (undo-tree-id2529 . -7) (undo-tree-id2530 . -8) (undo-tree-id2531 . -8) (undo-tree-id2532 . -8) (undo-tree-id2533 . -8) (undo-tree-id2534 . -9) (undo-tree-id2535 . -9) (undo-tree-id2536 . -9) (undo-tree-id2537 . -9) (undo-tree-id2538 . -10) (undo-tree-id2539 . -10) (undo-tree-id2540 . -10) (undo-tree-id2541 . -10) (undo-tree-id2542 . -11) (undo-tree-id2543 . -11) (undo-tree-id2544 . -11) (undo-tree-id2545 . -11) (undo-tree-id2546 . -12) (undo-tree-id2547 . -12) (undo-tree-id2548 . -12) (undo-tree-id2549 . -12) (undo-tree-id2550 . -13) (undo-tree-id2551 . -13) (undo-tree-id2552 . -13) (undo-tree-id2553 . -13) (undo-tree-id2554 . -13) (undo-tree-id2555 . -13) (undo-tree-id2556 . -13) (undo-tree-id2557 . -13) (undo-tree-id2558 . -13) (undo-tree-id2559 . -13) (undo-tree-id2560 . -13) (undo-tree-id2561 . -13) (undo-tree-id2562 . -13) (undo-tree-id2563 . -13) (undo-tree-id2564 . -13) (undo-tree-id2565 . -13) (undo-tree-id2566 . -13) (undo-tree-id2567 . -13) (undo-tree-id2568 . -13) (undo-tree-id2569 . -13) (undo-tree-id2570 . -13) (undo-tree-id2571 . -13) (undo-tree-id2572 . -13) (undo-tree-id2573 . -13) (undo-tree-id2574 . -13) (undo-tree-id2575 . -13) (undo-tree-id2576 . -13) (undo-tree-id2577 . -13) (undo-tree-id2578 . -13) (undo-tree-id2579 . -13) (undo-tree-id2580 . -13) (undo-tree-id2581 . -13) (undo-tree-id2582 . -13) (undo-tree-id2583 . -13) (undo-tree-id2584 . -13) 11429) nil (26619 19232 305074 0) 0 nil])
([nil nil ((11416 . 11432)) nil (26619 19232 304876 0) 0 nil])
([nil nil ((11432 . 11438) (t 26619 19232 331408 170000)) nil (26619 19300 988851 0) 0 nil])
([nil nil ((11438 . 11458)) nil (26619 19300 988849 0) 0 nil])
([nil nil ((#("th" 0 2 (fontified t)) . -11456) (undo-tree-id3085 . -2) (undo-tree-id3086 . -2) (undo-tree-id3087 . -2) (undo-tree-id3088 . -2) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -2) (undo-tree-id3094 . -2) (undo-tree-id3095 . -2) (undo-tree-id3096 . -2) (undo-tree-id3097 . -2) (undo-tree-id3098 . -2) (undo-tree-id3099 . -2) (undo-tree-id3100 . -2) 11458) nil (26619 19300 988845 0) 0 nil])
([nil nil ((#("with " 0 5 (fontified t)) . -11451) (undo-tree-id3045 . -5) (undo-tree-id3046 . -5) (undo-tree-id3047 . -5) (undo-tree-id3048 . -5) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -2) (undo-tree-id3054 . -2) (undo-tree-id3055 . -2) (undo-tree-id3056 . -2) (undo-tree-id3057 . -3) (undo-tree-id3058 . -3) (undo-tree-id3059 . -3) (undo-tree-id3060 . -3) (undo-tree-id3061 . -4) (undo-tree-id3062 . -4) (undo-tree-id3063 . -4) (undo-tree-id3064 . -4) (undo-tree-id3065 . -5) (undo-tree-id3066 . -5) (undo-tree-id3067 . -5) (undo-tree-id3068 . -5) (undo-tree-id3069 . -5) (undo-tree-id3070 . -5) (undo-tree-id3071 . -5) (undo-tree-id3072 . -5) (undo-tree-id3073 . -5) (undo-tree-id3074 . -5) (undo-tree-id3075 . -5) (undo-tree-id3076 . -5) (undo-tree-id3077 . -5) (undo-tree-id3078 . -5) (undo-tree-id3079 . -5) (undo-tree-id3080 . -5) (undo-tree-id3081 . -5) (undo-tree-id3082 . -5) (undo-tree-id3083 . -5) (undo-tree-id3084 . -5) 11456) nil (26619 19300 988809 0) 0 nil])
([nil nil ((#("neighbour " 0 10 (fontified t)) . -11441) (undo-tree-id2961 . -10) (undo-tree-id2962 . -10) (undo-tree-id2963 . -10) (undo-tree-id2964 . -10) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -2) (undo-tree-id2970 . -2) (undo-tree-id2971 . -2) (undo-tree-id2972 . -2) (undo-tree-id2973 . -3) (undo-tree-id2974 . -3) (undo-tree-id2975 . -3) (undo-tree-id2976 . -3) (undo-tree-id2977 . -4) (undo-tree-id2978 . -4) (undo-tree-id2979 . -4) (undo-tree-id2980 . -4) (undo-tree-id2981 . -5) (undo-tree-id2982 . -5) (undo-tree-id2983 . -5) (undo-tree-id2984 . -5) (undo-tree-id2985 . -6) (undo-tree-id2986 . -6) (undo-tree-id2987 . -6) (undo-tree-id2988 . -6) (undo-tree-id2989 . -7) (undo-tree-id2990 . -7) (undo-tree-id2991 . -7) (undo-tree-id2992 . -7) (undo-tree-id2993 . -8) (undo-tree-id2994 . -8) (undo-tree-id2995 . -8) (undo-tree-id2996 . -8) (undo-tree-id2997 . -9) (undo-tree-id2998 . -9) (undo-tree-id2999 . -9) (undo-tree-id3000 . -9) (undo-tree-id3001 . -10) (undo-tree-id3002 . -10) (undo-tree-id3003 . -10) (undo-tree-id3004 . -10) (undo-tree-id3005 . -10) (undo-tree-id3006 . -10) (undo-tree-id3007 . -10) (undo-tree-id3008 . -10) (undo-tree-id3009 . -10) (undo-tree-id3010 . -10) (undo-tree-id3011 . -10) (undo-tree-id3012 . -10) (undo-tree-id3013 . -10) (undo-tree-id3014 . -10) (undo-tree-id3015 . -10) (undo-tree-id3016 . -10) (undo-tree-id3017 . -10) (undo-tree-id3018 . -10) (undo-tree-id3019 . -10) (undo-tree-id3020 . -10) (undo-tree-id3021 . -10) (undo-tree-id3022 . -10) (undo-tree-id3023 . -10) (undo-tree-id3024 . -10) (undo-tree-id3025 . -10) (undo-tree-id3026 . -10) (undo-tree-id3027 . -10) (undo-tree-id3028 . -10) (undo-tree-id3029 . -10) (undo-tree-id3030 . -10) (undo-tree-id3031 . -10) (undo-tree-id3032 . -10) (undo-tree-id3033 . -10) (undo-tree-id3034 . -10) (undo-tree-id3035 . -10) (undo-tree-id3036 . -10) (undo-tree-id3037 . -10) (undo-tree-id3038 . -10) (undo-tree-id3039 . -10) (undo-tree-id3040 . -10) (undo-tree-id3041 . -10) (undo-tree-id3042 . -10) (undo-tree-id3043 . -10) (undo-tree-id3044 . -10) 11451) nil (26619 19300 988652 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -11437) (undo-tree-id2860 . -4) (undo-tree-id2861 . -4) (undo-tree-id2862 . -4) (undo-tree-id2863 . -4) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -2) (undo-tree-id2869 . -3) (undo-tree-id2870 . -3) (undo-tree-id2871 . -3) (undo-tree-id2872 . -3) (undo-tree-id2873 . -4) (undo-tree-id2874 . -4) (undo-tree-id2875 . -4) (undo-tree-id2876 . -4) (undo-tree-id2877 . -4) (undo-tree-id2878 . -4) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (undo-tree-id2881 . -4) (undo-tree-id2882 . -4) (undo-tree-id2883 . -4) (undo-tree-id2884 . -4) (undo-tree-id2885 . -4) (undo-tree-id2886 . -4) (undo-tree-id2887 . -4) (undo-tree-id2888 . -4) (undo-tree-id2889 . -4) (undo-tree-id2890 . -4) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (undo-tree-id2893 . -4) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) (undo-tree-id2897 . -4) (undo-tree-id2898 . -4) (undo-tree-id2899 . -4) (undo-tree-id2900 . -4) (undo-tree-id2901 . -4) (undo-tree-id2902 . -4) (undo-tree-id2903 . -4) (undo-tree-id2904 . -4) (undo-tree-id2905 . -4) (undo-tree-id2906 . -4) (undo-tree-id2907 . -4) (undo-tree-id2908 . -4) (undo-tree-id2909 . -4) (undo-tree-id2910 . -4) (undo-tree-id2911 . -4) (undo-tree-id2912 . -4) (undo-tree-id2913 . -4) (undo-tree-id2914 . -4) (undo-tree-id2915 . -4) (undo-tree-id2916 . -4) (undo-tree-id2917 . -4) (undo-tree-id2918 . -4) (undo-tree-id2919 . -4) (undo-tree-id2920 . -4) (undo-tree-id2921 . -4) (undo-tree-id2922 . -4) (undo-tree-id2923 . -4) (undo-tree-id2924 . -4) (undo-tree-id2925 . -4) (undo-tree-id2926 . -4) (undo-tree-id2927 . -4) (undo-tree-id2928 . -4) (undo-tree-id2929 . -4) (undo-tree-id2930 . -4) (undo-tree-id2931 . -4) (undo-tree-id2932 . -4) (undo-tree-id2933 . -4) (undo-tree-id2934 . -4) (undo-tree-id2935 . -4) (undo-tree-id2936 . -4) (undo-tree-id2937 . -4) (undo-tree-id2938 . -4) (undo-tree-id2939 . -4) (undo-tree-id2940 . -4) (undo-tree-id2941 . -4) (undo-tree-id2942 . -4) (undo-tree-id2943 . -4) (undo-tree-id2944 . -4) (undo-tree-id2945 . -4) (undo-tree-id2946 . -4) (undo-tree-id2947 . -4) (undo-tree-id2948 . -4) (undo-tree-id2949 . -4) (undo-tree-id2950 . -4) (undo-tree-id2951 . -4) (undo-tree-id2952 . -4) (undo-tree-id2953 . -4) (undo-tree-id2954 . -4) (undo-tree-id2955 . -4) (undo-tree-id2956 . -4) (undo-tree-id2957 . -4) (undo-tree-id2958 . -4) (undo-tree-id2959 . -4) (undo-tree-id2960 . -4) 11441) nil (26619 19300 988467 0) 0 nil])
([nil nil ((#("Pick " 0 5 (fontified t)) . -11432) (undo-tree-id2732 . -5) (undo-tree-id2733 . -5) (undo-tree-id2734 . -5) (undo-tree-id2735 . -5) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -2) (undo-tree-id2741 . -2) (undo-tree-id2742 . -2) (undo-tree-id2743 . -2) (undo-tree-id2744 . -3) (undo-tree-id2745 . -3) (undo-tree-id2746 . -3) (undo-tree-id2747 . -3) (undo-tree-id2748 . -4) (undo-tree-id2749 . -4) (undo-tree-id2750 . -4) (undo-tree-id2751 . -4) (undo-tree-id2752 . -5) (undo-tree-id2753 . -5) (undo-tree-id2754 . -5) (undo-tree-id2755 . -5) (undo-tree-id2756 . -5) (undo-tree-id2757 . -5) (undo-tree-id2758 . -5) (undo-tree-id2759 . -5) (undo-tree-id2760 . -5) (undo-tree-id2761 . -5) (undo-tree-id2762 . -5) (undo-tree-id2763 . -5) (undo-tree-id2764 . -5) (undo-tree-id2765 . -5) (undo-tree-id2766 . -5) (undo-tree-id2767 . -5) (undo-tree-id2768 . -5) (undo-tree-id2769 . -5) (undo-tree-id2770 . -5) (undo-tree-id2771 . -5) (undo-tree-id2772 . -5) (undo-tree-id2773 . -5) (undo-tree-id2774 . -5) (undo-tree-id2775 . -5) (undo-tree-id2776 . -5) (undo-tree-id2777 . -5) (undo-tree-id2778 . -5) (undo-tree-id2779 . -5) (undo-tree-id2780 . -5) (undo-tree-id2781 . -5) (undo-tree-id2782 . -5) (undo-tree-id2783 . -5) (undo-tree-id2784 . -5) (undo-tree-id2785 . -5) (undo-tree-id2786 . -5) (undo-tree-id2787 . -5) (undo-tree-id2788 . -5) (undo-tree-id2789 . -5) (undo-tree-id2790 . -5) (undo-tree-id2791 . -5) (undo-tree-id2792 . -5) (undo-tree-id2793 . -5) (undo-tree-id2794 . -5) (undo-tree-id2795 . -5) (undo-tree-id2796 . -5) (undo-tree-id2797 . -5) (undo-tree-id2798 . -5) (undo-tree-id2799 . -5) (undo-tree-id2800 . -5) (undo-tree-id2801 . -5) (undo-tree-id2802 . -5) (undo-tree-id2803 . -5) (undo-tree-id2804 . -5) (undo-tree-id2805 . -5) (undo-tree-id2806 . -5) (undo-tree-id2807 . -5) (undo-tree-id2808 . -5) (undo-tree-id2809 . -5) (undo-tree-id2810 . -5) (undo-tree-id2811 . -5) (undo-tree-id2812 . -5) (undo-tree-id2813 . -5) (undo-tree-id2814 . -5) (undo-tree-id2815 . -5) (undo-tree-id2816 . -5) (undo-tree-id2817 . -5) (undo-tree-id2818 . -5) (undo-tree-id2819 . -5) (undo-tree-id2820 . -5) (undo-tree-id2821 . -5) (undo-tree-id2822 . -5) (undo-tree-id2823 . -5) (undo-tree-id2824 . -5) (undo-tree-id2825 . -5) (undo-tree-id2826 . -5) (undo-tree-id2827 . -5) (undo-tree-id2828 . -5) (undo-tree-id2829 . -5) (undo-tree-id2830 . -5) (undo-tree-id2831 . -5) (undo-tree-id2832 . -5) (undo-tree-id2833 . -5) (undo-tree-id2834 . -5) (undo-tree-id2835 . -5) (undo-tree-id2836 . -5) (undo-tree-id2837 . -5) (undo-tree-id2838 . -5) (undo-tree-id2839 . -5) (undo-tree-id2840 . -5) (undo-tree-id2841 . -5) (undo-tree-id2842 . -5) (undo-tree-id2843 . -5) (undo-tree-id2844 . -5) (undo-tree-id2845 . -5) (undo-tree-id2846 . -5) (undo-tree-id2847 . -5) (undo-tree-id2848 . -5) (undo-tree-id2849 . -5) (undo-tree-id2850 . -5) (undo-tree-id2851 . -5) (undo-tree-id2852 . -5) (undo-tree-id2853 . -5) (undo-tree-id2854 . -5) (undo-tree-id2855 . -5) (undo-tree-id2856 . -5) (undo-tree-id2857 . -5) (undo-tree-id2858 . -5) (undo-tree-id2859 . -5) 11437) nil (26619 19300 988292 0) 0 nil])
([nil nil ((11432 . 11434)) nil (26619 19300 988075 0) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -11432) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (#("h" 0 1 (fontified t)) . -11433) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) 11434) nil (26619 19300 988070 0) 0 nil])
([nil nil ((11432 . 11452)) nil (26619 19300 987996 0) 0 nil])
([nil nil ((11470 . 11477) (11461 . 11465) (#(" " 0 1 (fontified nil)) . 11461) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (11460 . 11461) (11452 . 11466) (t 26619 19301 13775 57000)) nil (26619 19312 616560 0) 0 nil])
([nil nil ((11477 . 11486)) nil (26619 19312 616539 0) 0 nil])
([nil nil ((11459 . 11460) (#(";" 0 1 (fontified t)) . -11459) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (#("
" 0 1 (fontified t)) . -11460) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (#(" " 0 1 (fontified t)) . -11461) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (#(" " 0 1 (fontified t)) . -11462) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (#(" " 0 1 (fontified t)) . -11463) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (#(" " 0 1 (fontified t)) . -11464) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) 11465 (#("this " 0 5 (fontified t)) . -11465) (undo-tree-id3897 . -5) (undo-tree-id3898 . -5) (undo-tree-id3899 . -5) (undo-tree-id3900 . -5) 11470 (#("means " 0 6 (fontified t)) . -11470) (undo-tree-id3901 . -6) (undo-tree-id3902 . -6) (undo-tree-id3903 . -6) (undo-tree-id3904 . -6) 11476 (#("it " 0 3 (fontified t)) . -11476) (undo-tree-id3905 . -3) (undo-tree-id3906 . -3) (undo-tree-id3907 . -3) (undo-tree-id3908 . -3) 11479 (#("equals " 0 7 (fontified t)) . -11479) (undo-tree-id3909 . -7) (undo-tree-id3910 . -7) (undo-tree-id3911 . -7) (undo-tree-id3912 . -7) 11486 (t 26619 19312 642431 247000)) nil (26619 19420 551780 0) 0 nil])
([nil nil ((11575 . 11576) (11554 . 11575) (11535 . 11554) (#("i" 0 1 (fontified t)) . -11535) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (#("m" 0 1 (fontified t)) . -11536) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) 11537 (11525 . 11537) (#("your " 0 5 (fontified t)) . -11525) (undo-tree-id3841 . -5) (undo-tree-id3842 . -5) (undo-tree-id3843 . -5) (undo-tree-id3844 . -5) 11530 (#("exploration " 0 12 (fontified t)) . -11530) (undo-tree-id3845 . -12) (undo-tree-id3846 . -12) (undo-tree-id3847 . -12) (undo-tree-id3848 . -12) 11542 (11541 . 11542) (11534 . 11541) (11513 . 11534) (11512 . 11513) (#("
" 0 1 (fontified t)) . -11512) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (#(" " 0 1 (fontified t)) . -11513) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (#(" " 0 1 (fontified t)) . -11514) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (#(" " 0 1 (fontified t)) . -11515) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (#(" " 0 1 (fontified t)) . -11516) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) 11517 (11513 . 11517) (#("    " 0 4 (fontified nil)) . 11512) (undo-tree-id3869 . -4) (undo-tree-id3870 . -4) (undo-tree-id3871 . -4) (undo-tree-id3872 . -4) (11512 . 11517) (11461 . 11463) (11509 . 11510)) nil (26619 19420 551704 0) 0 nil])
([nil nil ((11487 . 11492)) nil (26619 19420 551629 0) 0 nil])
([nil nil ((#("If " 0 3 (fontified t)) . -11585) (undo-tree-id3749 . -3) (undo-tree-id3750 . -3) (undo-tree-id3751 . -3) (undo-tree-id3752 . -3) 11588 (#("you " 0 4 (fontified t)) . -11588) (undo-tree-id3753 . -4) (undo-tree-id3754 . -4) (undo-tree-id3755 . -4) (undo-tree-id3756 . -4) 11592 (#("reach " 0 6 (fontified t)) . -11592) (undo-tree-id3757 . -6) (undo-tree-id3758 . -6) (undo-tree-id3759 . -6) (undo-tree-id3760 . -6) 11598 (#("a " 0 2 (fontified t)) . -11598) (undo-tree-id3761 . -2) (undo-tree-id3762 . -2) (undo-tree-id3763 . -2) (undo-tree-id3764 . -2) 11600 (#("node " 0 5 (fontified t)) . -11600) (undo-tree-id3765 . -5) (undo-tree-id3766 . -5) (undo-tree-id3767 . -5) (undo-tree-id3768 . -5) 11605 (#("that " 0 5 (fontified t)) . -11605) (undo-tree-id3769 . -5) (undo-tree-id3770 . -5) (undo-tree-id3771 . -5) (undo-tree-id3772 . -5) 11610 (#("has " 0 4 (fontified t)) . -11610) (undo-tree-id3773 . -4) (undo-tree-id3774 . -4) (undo-tree-id3775 . -4) (undo-tree-id3776 . -4) 11614 (#("al" 0 2 (fontified t)) . -11614) (undo-tree-id3777 . -2) (undo-tree-id3778 . -2) (undo-tree-id3779 . -2) (undo-tree-id3780 . -2) 11616 (11612 . 11616) (#("l" 0 1 (fontified t)) . -11612) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) 11613 (11592 . 11613) (#("r" 0 1 (fontified t)) . -11592) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (#("e" 0 1 (fontified t)) . -11593) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (#("-" 0 1 (fontified t)) . -11594) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) 11595 (11594 . 11595) (#("p" 0 1 (fontified t)) . -11594) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) 11595 (11585 . 11595) (#("Adjust " 0 7 (fontified t)) . -11585) (undo-tree-id3801 . -7) (undo-tree-id3802 . -7) (undo-tree-id3803 . -7) (undo-tree-id3804 . -7) 11592 (#("the " 0 4 (fontified t)) . -11592) (undo-tree-id3805 . -4) (undo-tree-id3806 . -4) (undo-tree-id3807 . -4) (undo-tree-id3808 . -4) 11596 (#("cost " 0 5 (fontified t)) . -11596) (undo-tree-id3809 . -5) (undo-tree-id3810 . -5) (undo-tree-id3811 . -5) (undo-tree-id3812 . -5) 11601 (11586 . 11601) (#("j" 0 1 (fontified t)) . -11586) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) 11587 (11585 . 11587) (#("Adjust " 0 7 (fontified t)) . -11585) (undo-tree-id3817 . -7) (undo-tree-id3818 . -7) (undo-tree-id3819 . -7) (undo-tree-id3820 . -7) 11592 (11575 . 11577) (#(" " 0 1 (fontified nil)) . 11575) (11574 . 11575) (11583 . 11590) (#("A" 0 1 (fontified t)) . -11583) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (#("d" 0 1 (fontified t)) . -11584) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) 11585 (11581 . 11585) (#(" " 0 1 (fontified t)) . -11581) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) 11582 (11581 . 11582)) nil (26619 19420 551617 0) 0 nil])
([nil nil ((11392 . 11393)) nil (26619 19420 551446 0) 0 nil])
([nil nil ((11393 . 11394)) nil (26619 19420 551444 0) 0 nil])
([nil nil ((11394 . 11398)) nil (26619 19420 551443 0) 0 nil])
([nil nil ((11398 . 11400) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -11398) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (11398 . 11399)) nil (26619 19420 551440 0) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -11398) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 11399)) nil (26619 19420 551432 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -11393) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (#("c" 0 1 (face (font-latex-sedate-face) fontified t)) . -11394) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (#("o" 0 1 (face (font-latex-sedate-face) fontified t)) . -11395) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (#("d" 0 1 (face (font-latex-sedate-face) fontified t)) . -11396) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (#("e" 0 1 (face (font-latex-sedate-face) fontified t)) . -11397) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) 11398) nil (26619 19420 551380 0) 0 nil])
([nil nil ((11403 . 11410) (11393 . 11395) (#(" " 0 1 (fontified nil)) . 11393) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (11392 . 11393) (11393 . 11401)) nil (26619 19420 550877 0) 0 nil])
([nil nil ((#("to" 0 2 (fontified t)) . -11408) (undo-tree-id3391 . -2) (undo-tree-id3392 . -2) (undo-tree-id3393 . -2) (undo-tree-id3394 . -2) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -2) (undo-tree-id3400 . -2) (undo-tree-id3401 . -2) (undo-tree-id3402 . -2) (undo-tree-id3403 . -2) (undo-tree-id3404 . -2) (undo-tree-id3405 . -2) (undo-tree-id3406 . -2) 11410) nil (26619 19420 550719 0) 0 nil])
([nil nil ((#("cost " 0 5 (fontified t)) . -11403) (undo-tree-id3351 . -5) (undo-tree-id3352 . -5) (undo-tree-id3353 . -5) (undo-tree-id3354 . -5) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -2) (undo-tree-id3360 . -2) (undo-tree-id3361 . -2) (undo-tree-id3362 . -2) (undo-tree-id3363 . -3) (undo-tree-id3364 . -3) (undo-tree-id3365 . -3) (undo-tree-id3366 . -3) (undo-tree-id3367 . -4) (undo-tree-id3368 . -4) (undo-tree-id3369 . -4) (undo-tree-id3370 . -4) (undo-tree-id3371 . -5) (undo-tree-id3372 . -5) (undo-tree-id3373 . -5) (undo-tree-id3374 . -5) (undo-tree-id3375 . -5) (undo-tree-id3376 . -5) (undo-tree-id3377 . -5) (undo-tree-id3378 . -5) (undo-tree-id3379 . -5) (undo-tree-id3380 . -5) (undo-tree-id3381 . -5) (undo-tree-id3382 . -5) (undo-tree-id3383 . -5) (undo-tree-id3384 . -5) (undo-tree-id3385 . -5) (undo-tree-id3386 . -5) (undo-tree-id3387 . -5) (undo-tree-id3388 . -5) (undo-tree-id3389 . -5) (undo-tree-id3390 . -5) 11408) nil (26619 19420 550681 0) 0 nil])
([nil nil ((#("minimum " 0 8 (fontified t)) . -11395) (undo-tree-id3275 . -8) (undo-tree-id3276 . -8) (undo-tree-id3277 . -8) (undo-tree-id3278 . -8) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -2) (undo-tree-id3284 . -2) (undo-tree-id3285 . -2) (undo-tree-id3286 . -2) (undo-tree-id3287 . -3) (undo-tree-id3288 . -3) (undo-tree-id3289 . -3) (undo-tree-id3290 . -3) (undo-tree-id3291 . -4) (undo-tree-id3292 . -4) (undo-tree-id3293 . -4) (undo-tree-id3294 . -4) (undo-tree-id3295 . -5) (undo-tree-id3296 . -5) (undo-tree-id3297 . -5) (undo-tree-id3298 . -5) (undo-tree-id3299 . -6) (undo-tree-id3300 . -6) (undo-tree-id3301 . -6) (undo-tree-id3302 . -6) (undo-tree-id3303 . -7) (undo-tree-id3304 . -7) (undo-tree-id3305 . -7) (undo-tree-id3306 . -7) (undo-tree-id3307 . -8) (undo-tree-id3308 . -8) (undo-tree-id3309 . -8) (undo-tree-id3310 . -8) (undo-tree-id3311 . -8) (undo-tree-id3312 . -8) (undo-tree-id3313 . -8) (undo-tree-id3314 . -8) (undo-tree-id3315 . -8) (undo-tree-id3316 . -8) (undo-tree-id3317 . -8) (undo-tree-id3318 . -8) (undo-tree-id3319 . -8) (undo-tree-id3320 . -8) (undo-tree-id3321 . -8) (undo-tree-id3322 . -8) (undo-tree-id3323 . -8) (undo-tree-id3324 . -8) (undo-tree-id3325 . -8) (undo-tree-id3326 . -8) (undo-tree-id3327 . -8) (undo-tree-id3328 . -8) (undo-tree-id3329 . -8) (undo-tree-id3330 . -8) (undo-tree-id3331 . -8) (undo-tree-id3332 . -8) (undo-tree-id3333 . -8) (undo-tree-id3334 . -8) (undo-tree-id3335 . -8) (undo-tree-id3336 . -8) (undo-tree-id3337 . -8) (undo-tree-id3338 . -8) (undo-tree-id3339 . -8) (undo-tree-id3340 . -8) (undo-tree-id3341 . -8) (undo-tree-id3342 . -8) (undo-tree-id3343 . -8) (undo-tree-id3344 . -8) (undo-tree-id3345 . -8) (undo-tree-id3346 . -8) (undo-tree-id3347 . -8) (undo-tree-id3348 . -8) (undo-tree-id3349 . -8) (undo-tree-id3350 . -8) 11403) nil (26619 19420 550594 0) 0 nil])
([nil nil ((#("the
  " 0 4 (fontified t) 4 6 (fontified t)) . -11389) (undo-tree-id3109 . -6) (undo-tree-id3110 . -6) (undo-tree-id3111 . -6) (undo-tree-id3112 . -6) (undo-tree-id3113 . -2) (undo-tree-id3114 . -2) (undo-tree-id3115 . -2) (undo-tree-id3116 . -2) (undo-tree-id3117 . -3) (undo-tree-id3118 . -3) (undo-tree-id3119 . -3) (undo-tree-id3120 . -3) (undo-tree-id3121 . -4) (undo-tree-id3122 . -4) (undo-tree-id3123 . -4) (undo-tree-id3124 . -4) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (undo-tree-id3127 . -4) (undo-tree-id3128 . -4) (undo-tree-id3129 . -4) (undo-tree-id3130 . -4) (undo-tree-id3131 . -4) (undo-tree-id3132 . -4) (undo-tree-id3133 . -4) (undo-tree-id3134 . -4) (undo-tree-id3135 . -4) (undo-tree-id3136 . -4) (undo-tree-id3137 . -4) (undo-tree-id3138 . -4) (undo-tree-id3139 . -4) (undo-tree-id3140 . -4) (undo-tree-id3141 . -4) (undo-tree-id3142 . -4) (undo-tree-id3143 . -4) (undo-tree-id3144 . -4) (undo-tree-id3145 . -4) (undo-tree-id3146 . -4) (undo-tree-id3147 . -4) (undo-tree-id3148 . -4) (undo-tree-id3149 . -4) (undo-tree-id3150 . -4) (undo-tree-id3151 . -4) (undo-tree-id3152 . -4) (undo-tree-id3153 . -4) (undo-tree-id3154 . -4) (undo-tree-id3155 . -4) (undo-tree-id3156 . -4) (undo-tree-id3157 . -4) (undo-tree-id3158 . -4) (undo-tree-id3159 . -4) (undo-tree-id3160 . -4) (undo-tree-id3161 . -4) (undo-tree-id3162 . -4) (undo-tree-id3163 . -4) (undo-tree-id3164 . -4) (undo-tree-id3165 . -4) (undo-tree-id3166 . -4) (undo-tree-id3167 . -4) (undo-tree-id3168 . -4) (undo-tree-id3169 . -4) (undo-tree-id3170 . -4) (undo-tree-id3171 . -4) (undo-tree-id3172 . -4) (undo-tree-id3173 . -4) (undo-tree-id3174 . -4) (undo-tree-id3175 . -4) (undo-tree-id3176 . -4) (undo-tree-id3177 . -4) (undo-tree-id3178 . -4) (undo-tree-id3179 . -4) (undo-tree-id3180 . -4) (undo-tree-id3181 . -4) (undo-tree-id3182 . -4) (undo-tree-id3183 . -4) (undo-tree-id3184 . -4) (undo-tree-id3185 . -4) (undo-tree-id3186 . -4) (undo-tree-id3187 . -4) (undo-tree-id3188 . -4) (undo-tree-id3189 . -4) (undo-tree-id3190 . -4) (undo-tree-id3191 . -4) (undo-tree-id3192 . -4) (undo-tree-id3193 . -4) (undo-tree-id3194 . -4) (undo-tree-id3195 . -4) (undo-tree-id3196 . -4) (undo-tree-id3197 . -4) (undo-tree-id3198 . -6) (undo-tree-id3199 . -6) (undo-tree-id3200 . -6) (undo-tree-id3201 . -6) (undo-tree-id3202 . -6) (undo-tree-id3203 . -6) (undo-tree-id3204 . -6) (undo-tree-id3205 . -6) (undo-tree-id3206 . -6) (undo-tree-id3207 . -6) (undo-tree-id3208 . -6) (undo-tree-id3209 . -6) (undo-tree-id3210 . -6) (undo-tree-id3211 . -6) (undo-tree-id3212 . -6) (undo-tree-id3213 . -6) (undo-tree-id3214 . -6) (undo-tree-id3215 . -6) (undo-tree-id3216 . -6) (undo-tree-id3217 . -6) (undo-tree-id3218 . -6) (undo-tree-id3219 . -6) (undo-tree-id3220 . -6) (undo-tree-id3221 . -6) (undo-tree-id3222 . -6) (undo-tree-id3223 . -6) (undo-tree-id3224 . -6) (undo-tree-id3225 . -6) (undo-tree-id3226 . -6) (undo-tree-id3227 . -6) (undo-tree-id3228 . -6) (undo-tree-id3229 . -6) (undo-tree-id3230 . -6) (undo-tree-id3231 . -6) (undo-tree-id3232 . -6) (undo-tree-id3233 . -6) (undo-tree-id3234 . -6) (undo-tree-id3235 . -6) (undo-tree-id3236 . -6) (undo-tree-id3237 . -6) (undo-tree-id3238 . -6) (undo-tree-id3239 . -6) (undo-tree-id3240 . -6) (undo-tree-id3241 . -6) (undo-tree-id3242 . -6) (undo-tree-id3243 . -6) (undo-tree-id3244 . -6) (undo-tree-id3245 . -6) (undo-tree-id3246 . -6) (undo-tree-id3247 . -6) (undo-tree-id3248 . -6) (undo-tree-id3249 . -6) (undo-tree-id3250 . -6) (undo-tree-id3251 . -6) (undo-tree-id3252 . -6) (undo-tree-id3253 . -6) (undo-tree-id3254 . -6) (undo-tree-id3255 . -6) (undo-tree-id3256 . -6) (undo-tree-id3257 . -6) (undo-tree-id3258 . -6) (undo-tree-id3259 . -6) (undo-tree-id3260 . -6) (undo-tree-id3261 . -6) (undo-tree-id3262 . -6) (undo-tree-id3263 . -6) (undo-tree-id3264 . -6) (undo-tree-id3265 . -6) (undo-tree-id3266 . -6) (undo-tree-id3267 . -6) (undo-tree-id3268 . -6) (undo-tree-id3269 . -4) (undo-tree-id3270 . -6) (undo-tree-id3271 . -6) (undo-tree-id3272 . -6) (undo-tree-id3273 . -6) (undo-tree-id3274 . -6) 11395) nil (26619 19420 550426 0) 0 nil])
([nil nil ((11389 . 11390)) nil (26619 19420 550132 0) 0 nil])
([nil nil ((11390 . 11394)) nil (26619 19420 550130 0) 0 nil])
([nil nil ((11394 . 11396) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -11394) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (11394 . 11395)) nil (26619 19420 550128 0) 0 nil])
([nil nil ((11395 . 11398)) nil (26619 19420 550122 0) 0 nil])
([nil nil ((11398 . 11400) (#("(" 0 1 (fontified nil)) . -11398) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (11398 . 11399)) nil (26619 19420 550117 0) 0 nil])
([nil nil ((11422 . 11423) (11409 . 11422) (11389 . 11391) (#(" " 0 1 (fontified nil)) . 11389) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (11388 . 11389) (11399 . 11407) (#("c" 0 1 (fontified t)) . -11399) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) 11400 (11399 . 11400) (t 26619 19420 580128 775000)) nil (26619 19444 794101 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11426) (#("t" 0 1 (fontified t)) . 11426) (#("s" 0 1 (fontified t)) . 11426) (#("o" 0 1 (fontified t)) . 11426) (#("c" 0 1 (fontified t)) . 11426) (#(" " 0 1 (fontified t)) . 11426) (#(" " 0 1 (fontified t)) . 11426) (#(" " 0 1 (fontified t)) . 11426) (#(" " 0 1 (fontified t)) . 11426) (#("
" 0 1 (fontified t)) . 11426) (11425 . 11426)) nil (26619 19444 793710 0) 0 nil])
([nil nil (11609) nil (26619 19620 264429 0) 0 nil])
([nil nil ((11598 . 11599) (#("
" 0 1 (fontified t)) . -11598) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (#(" " 0 1 (fontified t)) . -11599) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (#(" " 0 1 (fontified t)) . -11600) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) 11601 (t 26619 19444 822162 871000)) nil (26619 19620 264427 0) 0 nil])
([nil nil ((11642 . 11658) (11635 . 11642) (11614 . 11635) (11613 . 11614) (11609 . 11613) (#(" " 0 1 (fontified nil)) . 11608) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (11541 . 11543) (11607 . 11608)) nil (26619 19620 264403 0) 0 nil])
([nil nil ((11257 . 11261) (#("g" 0 1 (fontified t)) . -11257) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) 11258 (11255 . 11258) (#("ending" 0 6 (fontified t)) . 11255) (undo-tree-id4213 . -5)) nil (26619 19620 264391 0) 0 nil])
([nil nil ((11646 . 11652) (#("ending" 0 6 (fontified t)) . 11646) (undo-tree-id4208 . -5)) nil (26619 19620 264379 0) 0 nil])
([nil nil ((#("    
  
" 0 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t) 7 8 (fontified t)) . 11659) (undo-tree-id4200 . -7) (undo-tree-id4201 . -2) (undo-tree-id4202 . -7) (undo-tree-id4203 . -2) (undo-tree-id4204 . -7) (undo-tree-id4205 . -2) (undo-tree-id4206 . -2) (undo-tree-id4207 . -2) 11661) nil (26619 19620 264375 0) 0 nil])
([nil nil ((11709 . 11720) (11708 . 11710) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11708) (11708 . 11709) (11703 . 11708) (11702 . 11703) (11701 . 11702) (11700 . 11701) (#(" " 0 1 (fontified t)) . -11700) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (#(":" 0 1 (fontified t)) . -11701) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (#("
" 0 1 (fontified t)) . -11702) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) 11703 (11702 . 11703) (11684 . 11702) (11678 . 11684) (11677 . 11678) (11676 . 11677) 11659) nil (26619 19620 264358 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -11326) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) 11327 (11326 . 11327) (11730 . 11740) (11729 . 11731) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11729) (11729 . 11730) (11726 . 11729) (11725 . 11726) (11723 . 11725) (#("  " 0 2 (fontified nil)) . 11722) (undo-tree-id4184 . -2) (undo-tree-id4185 . -2) (undo-tree-id4186 . -2) (undo-tree-id4187 . -2) (11724 . 11725) (11721 . 11724) 11721) nil (26619 19620 264329 0) 0 nil])
([nil nil ((11730 . 11741) (#("listlingis" 0 10 (face (font-lock-function-name-face) fontified t)) . 11730) (undo-tree-id4119 . -9) (undo-tree-id4120 . -10) (undo-tree-id4121 . -10) (undo-tree-id4122 . -10) (undo-tree-id4123 . -10) (undo-tree-id4124 . -10) (undo-tree-id4125 . -10) (undo-tree-id4126 . -10) (undo-tree-id4127 . -10) (undo-tree-id4128 . -10) (undo-tree-id4129 . -10) (undo-tree-id4130 . -10) (undo-tree-id4131 . -10) (undo-tree-id4132 . -10) (undo-tree-id4133 . -10) (undo-tree-id4134 . -10) (undo-tree-id4135 . -10) (undo-tree-id4136 . -10) (undo-tree-id4137 . -10) (undo-tree-id4138 . -10) (undo-tree-id4139 . -10) (undo-tree-id4140 . -10) (undo-tree-id4141 . -10) (undo-tree-id4142 . -10) (undo-tree-id4143 . -10) (undo-tree-id4144 . -10) (undo-tree-id4145 . -10) (undo-tree-id4146 . -10) (undo-tree-id4147 . -10) (undo-tree-id4148 . -10) (undo-tree-id4149 . -10) (undo-tree-id4150 . -10) (undo-tree-id4151 . -10) (undo-tree-id4152 . -10) (undo-tree-id4153 . -10) (undo-tree-id4154 . -10) (undo-tree-id4155 . -10) (undo-tree-id4156 . -10) (undo-tree-id4157 . -10) (undo-tree-id4158 . -10) (undo-tree-id4159 . -10) (undo-tree-id4160 . -10) (undo-tree-id4161 . -10) (undo-tree-id4162 . -10) (undo-tree-id4163 . -10) (undo-tree-id4164 . -10) (undo-tree-id4165 . -10) (undo-tree-id4166 . -10) (undo-tree-id4167 . -10) (undo-tree-id4168 . -10) (undo-tree-id4169 . -10) (undo-tree-id4170 . -9) (undo-tree-id4171 . -9) (undo-tree-id4172 . -9) (undo-tree-id4173 . -9) (undo-tree-id4174 . -8) (undo-tree-id4175 . -8) (undo-tree-id4176 . -8) (undo-tree-id4177 . -8) (undo-tree-id4178 . -10) (undo-tree-id4179 . -10)) nil (26619 19620 264305 0) 0 nil])
([nil nil (11741) nil (26619 19620 264205 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11723) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (#(" " 0 1 (fontified t)) . -11724) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) 11725) nil (26619 19620 264201 0) 0 nil])
([nil nil ((11721 . 11724) 11721) nil (26619 19620 264133 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11847) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) 11848 (#("source " 0 7 (fontified t)) . -11848) (undo-tree-id4251 . -7) (undo-tree-id4252 . -7) (undo-tree-id4253 . -7) (undo-tree-id4254 . -7) 11855 (#("to " 0 3 (fontified t)) . -11855) (undo-tree-id4255 . -3) (undo-tree-id4256 . -3) (undo-tree-id4257 . -3) (undo-tree-id4258 . -3) 11858 (#("v" 0 1 (fontified t)) . -11858) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) 11859 (11847 . 11859) (#("#" 0 1 (fontified t)) . -11847) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) 11848 (11839 . 11848) (11819 . 11839) (#(")" 0 1 (fontified nil)) . -11819) (#(")" 0 1 (fontified nil)) . 11820) (11818 . 11820) (11817 . 11819) (#("(" 0 1 (fontified nil)) . -11817) (11817 . 11818) (11809 . 11817) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -11808) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 11809) (11808 . 11810) (#("{" 0 1 (fontified nil)) . -11808) (11808 . 11809) (11802 . 11808) (11801 . 11803) (#("(" 0 1 (fontified nil)) . -11801) (11801 . 11802) (11800 . 11801) (#("dCsourc" 0 7 (fontified t)) . -11800) (undo-tree-id4271 . -7) (undo-tree-id4272 . -7) (undo-tree-id4273 . -7) (undo-tree-id4274 . -7) 11807 (#("e" 0 1 (fontified t)) . -11807) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) 11808 (11800 . 11808) (11798 . 11800) (11752 . 11754) (#("    " 0 4 (fontified nil)) . -11752) (11799 . 11800) (11798 . 11799) (11777 . 11798) (11756 . 11777) (11752 . 11756) (#("  " 0 2 (fontified t)) . 11752) (undo-tree-id4279 . -2) (undo-tree-id4280 . -2) (undo-tree-id4281 . -2) (undo-tree-id4282 . -2) 11754 (11752 . 11754) (11722 . 11724) (11749 . 11750) (11740 . 11748) (11736 . 11739) (11735 . 11737) (#("(" 0 1 (fontified nil)) . -11735) (11735 . 11736) (11731 . 11735) (11730 . 11732) (#("(" 0 1 (fontified nil)) . -11730) (11730 . 11731) (11724 . 11730) (#("k" 0 1 (fontified t)) . -11724) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) 11725 (11722 . 11725) (#("Dijkstra" 0 8 (fontified t)) . -11722) (undo-tree-id4287 . -8) (undo-tree-id4288 . -8) (undo-tree-id4289 . -8) (undo-tree-id4290 . -8) 11730 (11724 . 11730) (#("k" 0 1 (fontified t)) . -11724) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) 11725 (11722 . 11725) (#(" " 0 1 (fontified t)) . -11722) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (#(" " 0 1 (fontified t)) . -11723) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) 11724 (t 26619 19620 292451 557000)) nil (26619 19746 760422 0) 0 nil])
([nil nil ((11744 . 11749) (#("source" 0 6 (fontified t)) . 11744) (undo-tree-id4246 . -5)) nil (26619 19746 760303 0) 0 nil])
([nil nil ((11757 . 11762) (#("source" 0 6 (fontified t)) . 11757) (undo-tree-id4245 . -5)) nil (26619 19746 760300 0) 0 nil])
([nil nil ((11749 . 11753)) nil (26619 19746 760296 0) 0 nil])
([nil nil ((11766 . 11770)) nil (26619 19746 760295 0) 0 nil])
([nil nil ((11808 . 11817) (#("source" 0 6 (fontified t)) . 11808) (undo-tree-id4242 . -5) (undo-tree-id4243 . -6) (undo-tree-id4244 . -6)) nil (26619 19746 760293 0) 0 nil])
([nil nil ((11856 . 11870)) nil (26619 19746 760286 0) 0 nil])
([nil nil ((11872 . 11874) (#("  " 0 2 (fontified nil)) . 11871) (undo-tree-id4230 . -2) (undo-tree-id4231 . -2) (undo-tree-id4232 . -2) (undo-tree-id4233 . -2) (undo-tree-id4234 . -2) (undo-tree-id4235 . -2) (undo-tree-id4236 . -2) (undo-tree-id4237 . -2) (undo-tree-id4238 . -2) (undo-tree-id4239 . -2) (undo-tree-id4240 . -2) (undo-tree-id4241 . -2) (11870 . 11874)) nil (26619 19746 760283 0) 0 nil])
([nil nil ((11874 . 11885)) nil (26619 19746 760254 0) 0 nil])
([nil nil ((11885 . 11886)) nil (26619 19746 760248 0) 0 nil])
([nil nil ((11886 . 11889) (t 26619 19746 787223 722000)) nil (26619 19777 970610 0) 0 nil])
([nil nil ((11887 . 11891) (#("  " 0 2 (fontified t)) . 11887) (undo-tree-id4323 . -2) (undo-tree-id4324 . -2) (undo-tree-id4325 . -2) (undo-tree-id4326 . -2) 11889) nil (26619 19777 970607 0) 0 nil])
([nil nil ((11891 . 11896)) nil (26619 19777 970598 0) 0 nil])
([nil nil ((11896 . 11903)) nil (26619 19777 970597 0) 0 nil])
([nil nil ((11903 . 11905) (#("(" 0 1 (fontified nil)) . -11903) (11903 . 11904)) nil (26619 19777 970595 0) 0 nil])
([nil nil ((11904 . 11907)) nil (26619 19777 970593 0) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -11906) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) 11907) nil (26619 19777 970591 0) 0 nil])
([nil nil ((11906 . 11907)) nil (26619 19777 970582 0) 0 nil])
([nil nil ((11909 . 11914) (#(")" 0 1 (fontified nil)) . -11909) (#(")" 0 1 (fontified nil)) . 11910) (11909 . 11910) (#(")" 0 1 (fontified nil)) . -11909) (11907 . 11910)) nil (26619 19777 970580 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11912) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (#("t" 0 1 (fontified t)) . -11913) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) 11914) nil (26619 19777 970576 0) 0 nil])
([nil nil ((11912 . 11922)) nil (26619 19777 970560 0) 0 nil])
([nil nil ((11922 . 11924) (#("(" 0 1 (fontified nil)) . -11922) (11922 . 11923)) nil (26619 19777 970558 0) 0 nil])
([nil nil ((11924 . 11927) (#(")" 0 1 (fontified nil)) . -11924) (#(")" 0 1 (fontified nil)) . 11925) (11923 . 11925)) nil (26619 19777 970556 0) 0 nil])
([nil nil ((11927 . 11931)) nil (26619 19777 970553 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -11930) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) 11931) nil (26619 19777 970551 0) 0 nil])
([nil nil ((#("u," 0 2 (fontified t)) . -11928) (undo-tree-id4303 . -2) (undo-tree-id4304 . -2) (undo-tree-id4305 . -2) (undo-tree-id4306 . -2) 11930) nil (26619 19777 970541 0) 0 nil])
([nil nil ((11928 . 11930) (#("(" 0 1 (fontified nil)) . -11928) (11928 . 11929)) nil (26619 19777 970526 0) 0 nil])
([nil nil ((11932 . 11946) (#(")" 0 1 (fontified nil)) . -11932) (#(")" 0 1 (fontified nil)) . 11933) (11929 . 11933)) nil (26619 19777 970522 0) 0 nil])
([nil nil ((11946 . 11953)) nil (26619 19777 970516 0) 0 nil])
([nil nil ((11953 . 11956) (t 26619 19777 999763 483000)) nil (26619 19786 709347 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11955) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) 11956) nil (26619 19786 709343 0) 0 nil])
([nil nil ((11963 . 11967) (11956 . 11960) (#(" " 0 1 (fontified nil)) . 11956) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (11955 . 11956) (11955 . 11959)) nil (26619 19786 709317 0) 0 nil])
([nil nil ((12009 . 12011) (#(")" 0 1 (fontified nil)) . -12009) (#(")" 0 1 (fontified nil)) . 12010) (12006 . 12010) (12005 . 12007) (#("(" 0 1 (fontified nil)) . -12005) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (12005 . 12006) (12004 . 12005) (12003 . 12004) (12001 . 12003) (#(")" 0 1 (fontified nil)) . -12001) (#(")" 0 1 (fontified nil)) . 12002) (12000 . 12002) (11999 . 12001) (#("(" 0 1 (fontified nil)) . -11999) (11999 . 12000) (11994 . 11999) (#(")" 0 1 (fontified nil)) . -11994) (#(")" 0 1 (fontified nil)) . 11995) (11993 . 11995) (11992 . 11994) (#("(" 0 1 (fontified nil)) . -11992) (11992 . 11993) (11988 . 11992) (#("t" 0 1 (fontified t)) . -11988) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (#("e" 0 1 (fontified t)) . -11989) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (#(" " 0 1 (fontified t)) . -11990) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (#("d" 0 1 (fontified t)) . -11991) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) 11992 (11987 . 11992) (11982 . 11987) (11972 . 11982) (11967 . 11972) (t 26619 19786 731431 922000)) nil (26619 19842 214279 0) 0 nil])
([nil nil ((12004 . 12005)) nil (26619 19842 214227 0) 0 nil])
([nil nil ((11672 . 11673) (#("ion" 0 3 (face (font-lock-function-name-face) fontified t)) . 11672) (undo-tree-id4361 . -2) (undo-tree-id4362 . -3) (undo-tree-id4363 . -3) (undo-tree-id4364 . -3) (undo-tree-id4365 . -3) (undo-tree-id4366 . -3) (undo-tree-id4367 . -3) (undo-tree-id4368 . -3) (undo-tree-id4369 . -3) (undo-tree-id4370 . -3) (undo-tree-id4371 . -3) (undo-tree-id4372 . -3) (undo-tree-id4373 . -3) (undo-tree-id4374 . -3) (undo-tree-id4375 . -3) (undo-tree-id4376 . -3) (undo-tree-id4377 . -3) (undo-tree-id4378 . -3) (undo-tree-id4379 . -2) (undo-tree-id4380 . -2) (undo-tree-id4381 . -2) (undo-tree-id4382 . -2) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -3) (undo-tree-id4391 . -3) (t 26619 19842 242626 562000)) nil (26619 19857 438771 0) 0 nil])
([nil nil ((#("s" 0 1 (face (font-lock-function-name-face) fontified t)) . 11717) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (t 26619 19857 466816 620000)) nil (26619 19876 227837 0) 0 nil])
([nil nil ((#("s" 0 1 (face (font-lock-function-name-face) fontified t)) . 12026) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1)) nil (26619 19876 227805 0) 0 nil])
([nil nil (12605) nil (26619 19896 143760 0) 0 nil])
([nil nil ((12605 . 12607) (t 26619 19876 256151 455000)) nil (26619 19896 143756 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -12006) (11998 . 12006) (#("    " 0 4 (fontified nil)) . -11987) (11979 . 11987) (#("    " 0 4 (fontified nil)) . -11971) (11963 . 11971) (#("    " 0 4 (fontified nil)) . -11898) (11890 . 11898) (#("  " 0 2 (fontified nil)) . -11877) (11873 . 11877) (#("  " 0 2 (fontified nil)) . -11807) (11803 . 11807) (#("  " 0 2 (fontified nil)) . -11756) (11752 . 11756) 12009 (t 26619 19896 172139 823000)) nil (26619 19965 102847 0) 0 nil])
([nil nil (11748) nil (26619 19965 102839 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11719) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (#(" " 0 1 (fontified t)) . -11720) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -11721) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) 11722 (11721 . 11722) (#("]" 0 1 (fontified nil)) . -11721) (11721 . 11722)) nil (26619 19965 102829 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -11976) (11972 . 11976) (#("        " 0 8 (fontified nil)) . -11961) (11957 . 11961) (#("        " 0 8 (fontified nil)) . -11949) (11945 . 11949) (#("        " 0 8 (fontified nil)) . -11880) (11876 . 11880) (#("    " 0 4 (fontified t)) . -11863) (#("    " 0 4 (fontified t)) . -11797) (#("    " 0 4 (fontified t)) . -11750) 11996 (t 26619 19965 131575 926000)) nil (26619 19977 422914 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -12004) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (11996 . 12004) (#("    " 0 4 (fontified nil)) . -11985) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (11977 . 11985) (#("    " 0 4 (fontified nil)) . -11969) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (11961 . 11969) (#("    " 0 4 (fontified nil)) . -11896) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (11888 . 11896) (11871 . 11875) (11801 . 11805) (11750 . 11754) 11973) nil (26619 19977 422903 0) 0 nil])
([nil nil ((12062 . 12079) (12050 . 12062) (12048 . 12050) (12030 . 12048) (t 26619 19977 450501 876000)) nil (26619 20095 875665 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11718) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) 11719 (#("Notes " 0 6 (fontified t)) . -11719) (undo-tree-id4956 . -6) (undo-tree-id4957 . -6) (undo-tree-id4958 . -6) (undo-tree-id4959 . -6) 11725 (#("o" 0 1 (fontified t)) . -11725) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) 11726 (11720 . 11726) (11719 . 11720) (#(" " 0 1 (fontified t)) . -11719) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (#(" " 0 1 (fontified t)) . -11720) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) 11721 (11718 . 11721) 11718) nil (26619 20095 875660 0) 0 nil])
([nil nil ((11738 . 11739) (11729 . 11736) (11729 . 11730) 11730 (11723 . 11730) (11722 . 11723) (11720 . 11722) (11714 . 11720) (11693 . 11714) (#("notes " 0 6 (fontified t)) . -11693) (undo-tree-id4892 . -6) (undo-tree-id4893 . -6) (undo-tree-id4894 . -6) (undo-tree-id4895 . -6) 11699 (11696 . 11699) (11686 . 11696) (#("h" 0 1 (fontified t)) . -11686) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (#("a" 0 1 (fontified t)) . -11687) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) 11688 (11686 . 11688) (#("(" 0 1 (fontified nil)) . -11686) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (#(")" 0 1 (fontified t)) . 11687) (#("my " 0 3 (fontified t)) . -11687) (undo-tree-id4908 . -3) (undo-tree-id4909 . -3) (undo-tree-id4910 . -3) (undo-tree-id4911 . -3) 11690 (#("hero" 0 4 (fontified t)) . -11690) (undo-tree-id4912 . -4) (undo-tree-id4913 . -4) (undo-tree-id4914 . -4) (undo-tree-id4915 . -4) 11694 (11693 . 11694) (#("e" 0 1 (fontified t)) . -11693) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) 11694 (11687 . 11694) (11686 . 11688) (#("(" 0 1 (fontified nil)) . -11686) (11686 . 11687) (11681 . 11686) (11676 . 11681) (#("Before " 0 7 (fontified t)) . -11676) (undo-tree-id4920 . -7) (undo-tree-id4921 . -7) (undo-tree-id4922 . -7) (undo-tree-id4923 . -7) 11683 (#("we " 0 3 (fontified t)) . -11683) (undo-tree-id4924 . -3) (undo-tree-id4925 . -3) (undo-tree-id4926 . -3) (undo-tree-id4927 . -3) 11686 (#("show " 0 5 (fontified t)) . -11686) (undo-tree-id4928 . -5) (undo-tree-id4929 . -5) (undo-tree-id4930 . -5) (undo-tree-id4931 . -5) 11691 (#("the " 0 4 (fontified t)) . -11691) (undo-tree-id4932 . -4) (undo-tree-id4933 . -4) (undo-tree-id4934 . -4) (undo-tree-id4935 . -4) 11695 (#("pseudocode, " 0 12 (fontified t)) . -11695) (undo-tree-id4936 . -12) (undo-tree-id4937 . -12) (undo-tree-id4938 . -12) (undo-tree-id4939 . -12) 11707 (#("we " 0 3 (fontified t)) . -11707) (undo-tree-id4940 . -3) (undo-tree-id4941 . -3) (undo-tree-id4942 . -3) (undo-tree-id4943 . -3) 11710 (11707 . 11710) (#("he" 0 2 (fontified t)) . -11707) (undo-tree-id4944 . -2) (undo-tree-id4945 . -2) (undo-tree-id4946 . -2) (undo-tree-id4947 . -2) 11709 (#("e" 0 1 (fontified t)) . -11709) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) 11710 (11695 . 11710) (11676 . 11695) (11675 . 11676) 11675) nil (26619 20095 875616 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11739) (undo-tree-id4889 . 1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1)) nil (26619 20095 875504 0) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . 11739) (undo-tree-id4886 . 1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1)) nil (26619 20095 875498 0) 0 nil])
([nil nil ((11723 . 11724) (#(" " 0 1 (fontified nil)) . 11722) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (11723 . 11724) (#("which \\" 0 6 (fontified t) 6 7 (face (font-latex-sedate-face) fontified t)) . -11723) (undo-tree-id4868 . -7) (undo-tree-id4869 . -7) (undo-tree-id4870 . -7) (undo-tree-id4871 . -7) (undo-tree-id4872 . -7) (undo-tree-id4873 . -7) 11730 (#("textsl{" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face font-latex-warning-face) fontified t)) . -11730) (undo-tree-id4874 . -7) (undo-tree-id4875 . -7) (undo-tree-id4876 . -7) (undo-tree-id4877 . -7) (undo-tree-id4878 . -7) (undo-tree-id4879 . -7) 11737 (#("I}" 0 1 (face (font-latex-italic-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11737) (undo-tree-id4880 . -2) (undo-tree-id4881 . -2) (undo-tree-id4882 . -2) (undo-tree-id4883 . -2) (undo-tree-id4884 . -2) (undo-tree-id4885 . -2) 11739) nil (26619 20095 875489 0) 0 nil])
([nil nil ((11722 . 11723)) nil (26619 20095 875449 0) 0 nil])
([nil nil ((11723 . 11726)) nil (26619 20095 875448 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -11725) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) 11726) nil (26619 20095 875446 0) 0 nil])
([nil nil ((11725 . 11730)) nil (26619 20095 875438 0) 0 nil])
([nil nil ((11730 . 11737)) nil (26619 20095 875437 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11730) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (#("e" 0 1 (fontified t)) . -11731) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (#("f" 0 1 (fontified t)) . -11732) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (#("e" 0 1 (fontified t)) . -11733) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (#("r" 0 1 (fontified t)) . -11734) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (#(" " 0 1 (fontified t)) . -11735) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (#("t" 0 1 (fontified t)) . -11736) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) 11737) nil (26619 20095 875433 0) 0 nil])
([nil nil ((11738 . 11739) (11729 . 11736) (11729 . 11730) 11730) nil (26619 20095 875385 0) 0 nil])
([nil nil ((11739 . 11743)) nil (26619 20095 875382 0) 0 nil])
([nil nil ((#("in" 0 2 (fontified t)) . -11741) (undo-tree-id4813 . -2) (undo-tree-id4814 . -2) (undo-tree-id4815 . -2) (undo-tree-id4816 . -2) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -2) (undo-tree-id4822 . -2) (undo-tree-id4823 . -2) (undo-tree-id4824 . -2) (undo-tree-id4825 . -2) (undo-tree-id4826 . -2) (undo-tree-id4827 . -2) (undo-tree-id4828 . -2) 11743) nil (26619 20095 875379 0) 0 nil])
([nil nil ((#("l " 0 2 (fontified t)) . -11739) (undo-tree-id4785 . -2) (undo-tree-id4786 . -2) (undo-tree-id4787 . -2) (undo-tree-id4788 . -2) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -2) (undo-tree-id4794 . -2) (undo-tree-id4795 . -2) (undo-tree-id4796 . -2) (undo-tree-id4797 . -2) (undo-tree-id4798 . -2) (undo-tree-id4799 . -2) (undo-tree-id4800 . -2) (undo-tree-id4801 . -2) (undo-tree-id4802 . -2) (undo-tree-id4803 . -2) (undo-tree-id4804 . -2) (undo-tree-id4805 . -2) (undo-tree-id4806 . -2) (undo-tree-id4807 . -2) (undo-tree-id4808 . -2) (undo-tree-id4809 . -2) (undo-tree-id4810 . -2) (undo-tree-id4811 . -2) (undo-tree-id4812 . -2) 11741) nil (26619 20095 875352 0) 0 nil])
([nil nil ((#("I}" 0 1 (face (font-latex-italic-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11737) (undo-tree-id4744 . -2) (undo-tree-id4745 . -2) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -2) (undo-tree-id4751 . -2) (undo-tree-id4752 . -1) (undo-tree-id4753 . -2) (undo-tree-id4754 . -2) (undo-tree-id4755 . -2) (undo-tree-id4756 . -2) (undo-tree-id4757 . -2) (undo-tree-id4758 . -2) (undo-tree-id4759 . -2) (undo-tree-id4760 . -2) (undo-tree-id4761 . -2) (undo-tree-id4762 . -2) (undo-tree-id4763 . -2) (undo-tree-id4764 . -2) (undo-tree-id4765 . -2) (undo-tree-id4766 . -2) (undo-tree-id4767 . -2) (undo-tree-id4768 . -2) (undo-tree-id4769 . -2) (undo-tree-id4770 . -2) (undo-tree-id4771 . -2) (undo-tree-id4772 . -2) (undo-tree-id4773 . -2) (undo-tree-id4774 . -2) (undo-tree-id4775 . -2) (undo-tree-id4776 . -2) (undo-tree-id4777 . -2) (undo-tree-id4778 . -2) (undo-tree-id4779 . -2) (undo-tree-id4780 . -2) (undo-tree-id4781 . -2) (undo-tree-id4782 . -2) (undo-tree-id4783 . -2) (undo-tree-id4784 . -2) 11739) nil (26619 20095 875306 0) 0 nil])
([nil nil ((#("textsl{" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face font-latex-warning-face) fontified t)) . -11730) (undo-tree-id4699 . -7) (undo-tree-id4700 . -7) (undo-tree-id4701 . -7) (undo-tree-id4702 . -7) (undo-tree-id4703 . -7) (undo-tree-id4704 . -7) (undo-tree-id4705 . -7) (undo-tree-id4706 . -7) (undo-tree-id4707 . -7) (undo-tree-id4708 . -7) (undo-tree-id4709 . -7) (undo-tree-id4710 . -7) (undo-tree-id4711 . -7) (undo-tree-id4712 . -7) (undo-tree-id4713 . -7) (undo-tree-id4714 . -7) (undo-tree-id4715 . -7) (undo-tree-id4716 . -7) (undo-tree-id4717 . -7) (undo-tree-id4718 . -7) (undo-tree-id4719 . -7) (undo-tree-id4720 . -7) (undo-tree-id4721 . -7) (undo-tree-id4722 . -7) (undo-tree-id4723 . -7) (undo-tree-id4724 . -7) (undo-tree-id4725 . -7) (undo-tree-id4726 . -7) (undo-tree-id4727 . -7) (undo-tree-id4728 . -7) (undo-tree-id4729 . -7) (undo-tree-id4730 . -7) (undo-tree-id4731 . -7) (undo-tree-id4732 . -7) (undo-tree-id4733 . -7) (undo-tree-id4734 . -7) (undo-tree-id4735 . -7) (undo-tree-id4736 . -7) (undo-tree-id4737 . -7) (undo-tree-id4738 . -7) (undo-tree-id4739 . -7) (undo-tree-id4740 . -7) (undo-tree-id4741 . -7) (undo-tree-id4742 . -7) (undo-tree-id4743 . -7) 11737) nil (26619 20095 875238 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -11729) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) 11730) nil (26619 20095 875163 0) 0 nil])
([nil nil ((11729 . 11730)) nil (26619 20095 875084 0) 0 nil])
([nil nil ((11730 . 11732)) nil (26619 20095 875083 0) 0 nil])
([nil nil ((#("" 0 1 (fontified t)) . -11731) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) 11732) nil (26619 20095 875080 0) 0 nil])
([nil nil ((11748 . 11752) (#(" " 0 1 (fontified nil)) . 11734) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (11733 . 11734) (11731 . 11748)) nil (26619 20095 875059 0) 0 nil])
([nil nil ((11752 . 11753)) nil (26619 20095 875041 0) 0 nil])
([nil nil ((#("some " 0 5 (fontified t)) . -11748) (undo-tree-id4600 . -5) (undo-tree-id4601 . -5) (undo-tree-id4602 . -5) (undo-tree-id4603 . -5) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -2) (undo-tree-id4609 . -2) (undo-tree-id4610 . -2) (undo-tree-id4611 . -2) (undo-tree-id4612 . -3) (undo-tree-id4613 . -3) (undo-tree-id4614 . -3) (undo-tree-id4615 . -3) (undo-tree-id4616 . -4) (undo-tree-id4617 . -4) (undo-tree-id4618 . -4) (undo-tree-id4619 . -4) (undo-tree-id4620 . -5) (undo-tree-id4621 . -5) (undo-tree-id4622 . -5) (undo-tree-id4623 . -5) (undo-tree-id4624 . -5) (undo-tree-id4625 . -5) (undo-tree-id4626 . -5) (undo-tree-id4627 . -5) 11753) nil (26619 20095 875037 0) 0 nil])
([nil nil ((#("Just " 0 5 (fontified t)) . -11743) (undo-tree-id4548 . -5) (undo-tree-id4549 . -5) (undo-tree-id4550 . -5) (undo-tree-id4551 . -5) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -2) (undo-tree-id4557 . -2) (undo-tree-id4558 . -2) (undo-tree-id4559 . -2) (undo-tree-id4560 . -3) (undo-tree-id4561 . -3) (undo-tree-id4562 . -3) (undo-tree-id4563 . -3) (undo-tree-id4564 . -4) (undo-tree-id4565 . -4) (undo-tree-id4566 . -4) (undo-tree-id4567 . -4) (undo-tree-id4568 . -5) (undo-tree-id4569 . -5) (undo-tree-id4570 . -5) (undo-tree-id4571 . -5) (undo-tree-id4572 . -5) (undo-tree-id4573 . -5) (undo-tree-id4574 . -5) (undo-tree-id4575 . -5) (undo-tree-id4576 . -5) (undo-tree-id4577 . -5) (undo-tree-id4578 . -5) (undo-tree-id4579 . -5) (undo-tree-id4580 . -5) (undo-tree-id4581 . -5) (undo-tree-id4582 . -5) (undo-tree-id4583 . -5) (undo-tree-id4584 . -5) (undo-tree-id4585 . -5) (undo-tree-id4586 . -5) (undo-tree-id4587 . -5) (undo-tree-id4588 . -5) (undo-tree-id4589 . -5) (undo-tree-id4590 . -5) (undo-tree-id4591 . -5) (undo-tree-id4592 . -5) (undo-tree-id4593 . -5) (undo-tree-id4594 . -5) (undo-tree-id4595 . -5) (undo-tree-id4596 . -5) (undo-tree-id4597 . -5) (undo-tree-id4598 . -5) (undo-tree-id4599 . -5) 11748) nil (26619 20095 874983 0) 0 nil])
([nil nil ((11743 . 11744)) nil (26619 20095 874898 0) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -11743) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) 11744) nil (26619 20095 874893 0) 0 nil])
([nil nil ((11762 . 11765) (11761 . 11763) (#("(" 0 1 (face font-latex-math-face fontified nil)) . -11761) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (11761 . 11762) (11759 . 11761) (#("$" 0 1 (fontified nil)) . 11760) (11758 . 11760) (#("$" 0 1 (fontified nil)) . -11758) (undo-tree-id5373 . -1) (11758 . 11760) (#("$" 0 1 (fontified nil)) . -11758) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (11758 . 11759) (11757 . 11758) (11756 . 11757) (#(" " 0 1 (fontified t)) . -11756) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) 11757 (#("stuff" 0 5 (fontified t)) . -11757) (undo-tree-id5398 . -5) (undo-tree-id5399 . -5) (undo-tree-id5400 . -5) (undo-tree-id5401 . -5) (undo-tree-id5402 . -5) (undo-tree-id5403 . -5) (undo-tree-id5404 . -5) (undo-tree-id5405 . -5) (undo-tree-id5406 . -5) (undo-tree-id5407 . -5) (undo-tree-id5408 . -5) (undo-tree-id5409 . -5) (undo-tree-id5410 . -5) (undo-tree-id5411 . -5) (undo-tree-id5412 . -5) 11762 (#("s" 0 1 (fontified t)) . -11762) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) 11763 (11748 . 11763) (#("notational " 0 11 (fontified t)) . -11748) (undo-tree-id5426 . -11) (undo-tree-id5427 . -11) (undo-tree-id5428 . -11) (undo-tree-id5429 . -11) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -2) (undo-tree-id5435 . -2) (undo-tree-id5436 . -2) (undo-tree-id5437 . -2) (undo-tree-id5438 . -3) (undo-tree-id5439 . -3) (undo-tree-id5440 . -3) (undo-tree-id5441 . -3) (undo-tree-id5442 . -4) (undo-tree-id5443 . -4) (undo-tree-id5444 . -4) (undo-tree-id5445 . -4) (undo-tree-id5446 . -5) (undo-tree-id5447 . -5) (undo-tree-id5448 . -5) (undo-tree-id5449 . -5) (undo-tree-id5450 . -6) (undo-tree-id5451 . -6) (undo-tree-id5452 . -6) (undo-tree-id5453 . -6) (undo-tree-id5454 . -7) (undo-tree-id5455 . -7) (undo-tree-id5456 . -7) (undo-tree-id5457 . -7) (undo-tree-id5458 . -8) (undo-tree-id5459 . -8) (undo-tree-id5460 . -8) (undo-tree-id5461 . -8) (undo-tree-id5462 . -9) (undo-tree-id5463 . -9) (undo-tree-id5464 . -9) (undo-tree-id5465 . -9) (undo-tree-id5466 . -10) (undo-tree-id5467 . -10) (undo-tree-id5468 . -10) (undo-tree-id5469 . -10) (undo-tree-id5470 . -11) (undo-tree-id5471 . -11) (undo-tree-id5472 . -11) (undo-tree-id5473 . -11) (undo-tree-id5474 . -11) (undo-tree-id5475 . -11) (undo-tree-id5476 . -11) (undo-tree-id5477 . -11) (undo-tree-id5478 . -11) (undo-tree-id5479 . -11) (undo-tree-id5480 . -11) (undo-tree-id5481 . -11) (undo-tree-id5482 . -11) (undo-tree-id5483 . -11) (undo-tree-id5484 . -11) (undo-tree-id5485 . -11) (undo-tree-id5486 . -11) (undo-tree-id5487 . -11) (undo-tree-id5488 . -11) (undo-tree-id5489 . -11) (undo-tree-id5490 . -11) (undo-tree-id5491 . -11) (undo-tree-id5492 . -11) (undo-tree-id5493 . -11) (undo-tree-id5494 . -11) (undo-tree-id5495 . -11) (undo-tree-id5496 . -11) (undo-tree-id5497 . -11) (undo-tree-id5498 . -11) (undo-tree-id5499 . -11) (undo-tree-id5500 . -11) (undo-tree-id5501 . -11) (undo-tree-id5502 . -11) (undo-tree-id5503 . -11) (undo-tree-id5504 . -11) (undo-tree-id5505 . -11) (undo-tree-id5506 . -11) 11759 (#("cl" 0 2 (fontified t)) . -11759) (undo-tree-id5507 . -2) (undo-tree-id5508 . -2) (undo-tree-id5509 . -2) (undo-tree-id5510 . -2) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -2) (undo-tree-id5516 . -2) (undo-tree-id5517 . -2) (undo-tree-id5518 . -2) (undo-tree-id5519 . -2) (undo-tree-id5520 . -2) (undo-tree-id5521 . -2) (undo-tree-id5522 . -2) (undo-tree-id5523 . -2) (undo-tree-id5524 . -2) (undo-tree-id5525 . -2) (undo-tree-id5526 . -2) (undo-tree-id5527 . -2) (undo-tree-id5528 . -2) (undo-tree-id5529 . -2) (undo-tree-id5530 . -2) (undo-tree-id5531 . -2) (undo-tree-id5532 . -2) (undo-tree-id5533 . -2) (undo-tree-id5534 . -2) (undo-tree-id5535 . -2) (undo-tree-id5536 . -2) 11761 (11741 . 11761) (#(";" 0 1 (fontified t)) . -11741) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (#(" " 0 1 (fontified t)) . -11742) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) 11743 (11742 . 11743) (11741 . 11742) (#("," 0 1 (fontified t)) . -11741) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) 11742 (11741 . 11742) (#("." 0 1 (fontified t)) . -11741) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (#(" " 0 1 (fontified t)) . -11742) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) 11743 (t 26619 20095 905991 241000)) nil (26619 20173 110857 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face fontified nil)) . -11836) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 11837) (undo-tree-id5023 . -1) (#("$" 0 1 (fontified nil)) . 11837) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (11836 . 11837) (#("$" 0 1 (fontified nil)) . -11836) (11836 . 11837) (#("$" 0 1 (face font-latex-math-face fontified t)) . -11836) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (11837 . 11839) (#("$" 0 1 (fontified nil)) . -11837) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (11836 . 11838) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -11836) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 11837) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (11836 . 11837) (11835 . 11836) (#("$" 0 1 (fontified nil)) . 11836) (11834 . 11836) (#("$" 0 1 (fontified nil)) . -11834) (undo-tree-id5046 . -1) (11834 . 11836) (#("$" 0 1 (fontified nil)) . -11834) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (11834 . 11835) (11818 . 11834) (11806 . 11818) (#(" " 0 1 (fontified nil)) . 11801) (11800 . 11801) (11800 . 11806) (#("
" 0 1 (fontified t)) . -11800) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (#("t" 0 1 (fontified t)) . -11801) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (#("h" 0 1 (fontified t)) . -11802) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (#("t" 0 1 (fontified t)) . -11803) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (#("a" 0 1 (fontified t)) . -11804) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (#(" " 0 1 (fontified t)) . -11805) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (#("h" 0 1 (fontified t)) . -11806) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) 11807 (11806 . 11807) (#(" " 0 1 (fontified nil)) . 11801) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (11800 . 11801) (11800 . 11806) (#("a" 0 1 (fontified t)) . -11800) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (#(" " 0 1 (fontified t)) . -11801) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) 11802 (11800 . 11802) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 11800) (undo-tree-id5332 . -1) (#("$" 0 1 (fontified nil)) . 11800) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (11799 . 11800) (#("$" 0 1 (fontified nil)) . -11799) (11799 . 11800) (#("$" 0 1 (face font-latex-math-face fontified t)) . -11799) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (11800 . 11802) (#("$" 0 1 (fontified nil)) . -11800) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (11799 . 11801) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -11799) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 11800) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (11799 . 11800) (11798 . 11799) (#("$" 0 1 (fontified nil)) . 11799) (11797 . 11799) (#("$" 0 1 (fontified nil)) . -11797) (undo-tree-id5355 . -1) (11797 . 11799) (#("$" 0 1 (fontified nil)) . -11797) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (11797 . 11798) (11789 . 11797) (#(" " 0 1 (fontified t)) . -11789) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) 11790 (11781 . 11790) (#("graph " 0 6 (fontified t)) . -11781) (undo-tree-id5367 . -6) (undo-tree-id5368 . -6) (undo-tree-id5369 . -6) (undo-tree-id5370 . -6) 11787 (11786 . 11787) (11767 . 11786)) nil (26619 20173 110266 0) 0 nil])
([nil nil ((11849 . 11850) (#("$" 0 1 (fontified nil)) . 11850) (11848 . 11850) (#("$" 0 1 (fontified nil)) . -11848) (undo-tree-id4981 . -1) (11848 . 11850) (#("$" 0 1 (fontified nil)) . -11848) (11848 . 11849) (#("$" 0 1 (fontified nil)) . -11848) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (11848 . 11849) (#("E" 0 1 (fontified t)) . -11848) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) 11849 (11837 . 11849) (#("$" 0 1 (fontified nil)) . 11838) (11836 . 11838) (#("$" 0 1 (fontified nil)) . -11836) (11836 . 11838) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . -11836) (11836 . 11837)) nil (26619 20173 109669 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face fontified t)) . 11850) (undo-tree-id4972 . 1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1)) nil (26619 20173 109630 0) 0 nil])
([nil nil ((11851 . 11852)) nil (26619 20173 109602 0) 0 nil])
([nil nil ((11852 . 11858) (t 26619 20173 142414 555000)) nil (26619 20203 492242 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11856) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (#("n" 0 1 (fontified t)) . -11857) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) 11858) nil (26619 20203 492240 0) 0 nil])
([nil nil ((11856 . 11866)) nil (26619 20203 492224 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 11868) (11866 . 11868) (#("$" 0 1 (fontified nil)) . -11866) (11866 . 11868) (#("$" 0 1 (fontified nil)) . -11866) (11866 . 11867)) nil (26619 20203 492222 0) 0 nil])
([nil nil ((11867 . 11869)) nil (26619 20203 492218 0) 0 nil])
([nil nil ((#("|" 0 1 (face font-latex-math-face fontified t)) . -11868) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) 11869) nil (26619 20203 492216 0) 0 nil])
([nil nil ((11868 . 11869)) nil (26619 20203 492208 0) 0 nil])
([nil nil ((11869 . 11870)) nil (26619 20203 492207 0) 0 nil])
([nil nil ((#("s" 0 1 (face (font-latex-math-face font-latex-sedate-face) fontified t)) . -11869) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) 11870) nil (26619 20203 492205 0) 0 nil])
([nil nil ((11869 . 11870)) nil (26619 20203 492196 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 11871) (11870 . 11871) (#("$" 0 1 (fontified nil)) . -11870) (11870 . 11871) (#("$" 0 1 (face font-latex-math-face fontified t)) . -11870) (11871 . 11873) (#("$" 0 1 (fontified nil)) . -11871) (11870 . 11872) (#("$" 0 1 (fontified nil)) . -11870) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 11871) (11870 . 11871) (#("$" 0 1 (fontified nil)) . -11870) (11870 . 11871) (#("$" 0 1 (face (font-latex-math-face font-latex-sedate-face) fontified nil)) . -11870) (11870 . 11871)) nil (26619 20203 492193 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face fontified nil)) . -11870) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 11871)) nil (26619 20203 492185 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 11872) (11870 . 11872) (#("$" 0 1 (fontified nil)) . -11870) (undo-tree-id5722 . -1) (11870 . 11872) (#("$" 0 1 (face (font-latex-math-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11870) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (11870 . 11871)) nil (26619 20203 492162 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 11871) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1)) nil (26619 20203 492153 0) 0 nil])
([nil nil ((11878 . 11889) (#(" " 0 1 (fontified nil)) . 11872) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (11871 . 11872) (11871 . 11878)) nil (26619 20203 492143 0) 0 nil])
([nil nil ((#("of " 0 3 (fontified t)) . -11886) (undo-tree-id5865 . -3) (undo-tree-id5866 . -3) (undo-tree-id5867 . -3) (undo-tree-id5868 . -3) 11889 (t 26619 20203 524376 139000)) nil (26619 20230 524875 0) 0 nil])
([nil nil ((#("set " 0 4 (fontified t)) . -11882) (undo-tree-id5861 . -4) (undo-tree-id5862 . -4) (undo-tree-id5863 . -4) (undo-tree-id5864 . -4) 11886) nil (26619 20230 524866 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -11878) (undo-tree-id5857 . -4) (undo-tree-id5858 . -4) (undo-tree-id5859 . -4) (undo-tree-id5860 . -4) 11882) nil (26619 20230 524858 0) 0 nil])
([nil nil ((#("means " 0 6 (fontified t)) . -11872) (undo-tree-id5853 . -6) (undo-tree-id5854 . -6) (undo-tree-id5855 . -6) (undo-tree-id5856 . -6) 11878) nil (26619 20230 524848 0) 0 nil])
([nil nil ((11872 . 11884)) nil (26619 20230 524840 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -11882) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (#("l" 0 1 (fontified t)) . -11883) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) 11884) nil (26619 20230 524837 0) 0 nil])
([nil nil ((11882 . 11902)) nil (26619 20230 524823 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 11904) (11902 . 11904) (#("$" 0 1 (fontified nil)) . -11902) (11902 . 11904) (#("$" 0 1 (fontified nil)) . -11902) (11902 . 11903)) nil (26619 20230 524821 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . -11902) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (#("$" 0 1 (fontified t)) . 11903)) nil (26619 20230 524817 0) 0 nil])
([nil nil ((11902 . 11914)) nil (26619 20230 524809 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 11916) (11914 . 11916) (#("$" 0 1 (fontified nil)) . -11914) (undo-tree-id5838 . -1) (11914 . 11916) (#("$" 0 1 (fontified nil)) . -11914) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (11914 . 11915)) nil (26619 20230 524807 0) 0 nil])
([nil nil ((11915 . 11916)) nil (26619 20230 524798 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 11917) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (11916 . 11917) (#("$" 0 1 (fontified nil)) . -11916) (11916 . 11917) (#("$" 0 1 (face font-latex-math-face fontified t)) . -11916) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (11917 . 11919) (#("$" 0 1 (fontified nil)) . -11917) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (11916 . 11918) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -11916) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 11917) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (11916 . 11917)) nil (26619 20230 524794 0) 0 nil])
([nil nil ((11917 . 11926)) nil (26619 20230 524756 0) 0 nil])
([nil nil ((#("not " 0 4 (fontified t)) . -11922) (undo-tree-id5796 . -4) (undo-tree-id5797 . -4) (undo-tree-id5798 . -4) (undo-tree-id5799 . -4) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -2) (undo-tree-id5805 . -2) (undo-tree-id5806 . -2) (undo-tree-id5807 . -2) (undo-tree-id5808 . -3) (undo-tree-id5809 . -3) (undo-tree-id5810 . -3) (undo-tree-id5811 . -3) (undo-tree-id5812 . -4) (undo-tree-id5813 . -4) (undo-tree-id5814 . -4) (undo-tree-id5815 . -4) (undo-tree-id5816 . -4) (undo-tree-id5817 . -4) 11926) nil (26619 20230 524753 0) 0 nil])
([nil nil ((#("but " 0 4 (fontified t)) . -11918) (undo-tree-id5753 . -4) (undo-tree-id5754 . -4) (undo-tree-id5755 . -4) (undo-tree-id5756 . -4) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -2) (undo-tree-id5762 . -2) (undo-tree-id5763 . -2) (undo-tree-id5764 . -2) (undo-tree-id5765 . -3) (undo-tree-id5766 . -3) (undo-tree-id5767 . -3) (undo-tree-id5768 . -3) (undo-tree-id5769 . -4) (undo-tree-id5770 . -4) (undo-tree-id5771 . -4) (undo-tree-id5772 . -4) (undo-tree-id5773 . -4) (undo-tree-id5774 . -4) (undo-tree-id5775 . -4) (undo-tree-id5776 . -4) (undo-tree-id5777 . -4) (undo-tree-id5778 . -4) (undo-tree-id5779 . -4) (undo-tree-id5780 . -4) (undo-tree-id5781 . -4) (undo-tree-id5782 . -4) (undo-tree-id5783 . -4) (undo-tree-id5784 . -4) (undo-tree-id5785 . -4) (undo-tree-id5786 . -4) (undo-tree-id5787 . -4) (undo-tree-id5788 . -4) (undo-tree-id5789 . -4) (undo-tree-id5790 . -4) (undo-tree-id5791 . -4) (undo-tree-id5792 . -4) (undo-tree-id5793 . -4) (undo-tree-id5794 . -4) (undo-tree-id5795 . -4) 11922) nil (26619 20230 524711 0) 0 nil])
([nil nil ((11918 . 11930) (t 26619 20230 550374 295000)) nil (26619 20243 768797 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 11930) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1)) nil (26619 20243 768794 0) 0 nil])
([nil nil ((11930 . 11931)) nil (26619 20243 768777 0) 0 nil])
([nil nil ((11931 . 11932) (t 26619 20243 794648 551000)) nil (26619 20260 356055 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12313) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) 12314 (#("with " 0 5 (fontified t)) . -12314) (undo-tree-id5912 . -5) (undo-tree-id5913 . -5) (undo-tree-id5914 . -5) (undo-tree-id5915 . -5) (undo-tree-id5916 . -5) (undo-tree-id5917 . -5) (undo-tree-id5918 . -5) (undo-tree-id5919 . -5) (undo-tree-id5920 . -5) (undo-tree-id5921 . -5) 12319 (#("some " 0 5 (fontified t)) . -12319) (undo-tree-id5922 . -5) (undo-tree-id5923 . -5) (undo-tree-id5924 . -5) (undo-tree-id5925 . -5) (undo-tree-id5926 . -5) (undo-tree-id5927 . -5) (undo-tree-id5928 . -5) (undo-tree-id5929 . -5) (undo-tree-id5930 . -5) (undo-tree-id5931 . -5) 12324 (#("modification" 0 12 (fontified t)) . -12324) (undo-tree-id5932 . -12) (undo-tree-id5933 . -12) (undo-tree-id5934 . -12) (undo-tree-id5935 . -12) (undo-tree-id5936 . -12) (undo-tree-id5937 . -12) (undo-tree-id5938 . -12) (undo-tree-id5939 . -12) (undo-tree-id5940 . -12) (undo-tree-id5941 . -12) 12336 (t 26619 20265 469213 403000)) nil (26619 20309 127688 0) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 12336) (undo-tree-id5880 . 1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1)) ((12336 . 12337)) (26619 20259 917518 0) 0 nil])
([nil nil ((#("In pseudocode, this is:
" 0 1 (fontified t) 1 2 (fontified t) 2 24 (fontified t)) . 11933) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -23) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -24) (undo-tree-id5901 . -24) 11934) nil (26619 20309 127619 0) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t)) . 12336) (undo-tree-id5877 . 1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1)) ((12336 . 12337)) (26619 20259 478011 0) 0 nil])
([nil nil ((11932 . 11933) 11872) nil (26619 20309 127578 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 12336) (undo-tree-id5874 . 1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1)) ((12336 . 12337)) (26619 20259 53674 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 11934) (11932 . 11934) (#("$" 0 1 (fontified nil)) . -11932) (11932 . 11934) (#("$" 0 1 (fontified nil)) . -11932) (11932 . 11933) (t 26619 20309 160177 57000)) nil (26619 20341 479525 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 12336) (undo-tree-id5871 . 1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1)) ((12336 . 12337)) (26619 20259 53499 0) 0 nil])
([nil nil ((11933 . 11934) (t 26619 20309 160177 57000)) nil (26619 20341 479522 0) 0 nil])
nil
([nil nil ((11934 . 11936) (#("(" 0 1 (face font-latex-math-face fontified nil)) . -11934) (11934 . 11935)) nil (26619 20341 479519 0) 0 nil])
([nil nil ((11938 . 11940) (#(")" 0 1 (face font-latex-math-face fontified nil)) . -11938) (#(")" 0 1 (face font-latex-math-face fontified nil)) . 11939) (11935 . 11939)) nil (26619 20341 479517 0) 0 nil])
([nil nil ((11945 . 11962) (#(" " 0 1 (fontified nil)) . 11942) (11941 . 11942) (11941 . 11945)) nil (26619 20341 479514 0) 0 nil])
([nil nil ((11962 . 11964)) nil (26619 20341 479511 0) 0 nil])
([nil nil ((11964 . 11965)) nil (26619 20341 479510 0) 0 nil])
([nil nil ((#("betw" 0 4 (fontified t)) . -11961) (undo-tree-id6034 . -4) (undo-tree-id6035 . -4) (undo-tree-id6036 . -4) (undo-tree-id6037 . -4) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -2) (undo-tree-id6043 . -2) (undo-tree-id6044 . -2) (undo-tree-id6045 . -2) (undo-tree-id6046 . -3) (undo-tree-id6047 . -3) (undo-tree-id6048 . -3) (undo-tree-id6049 . -3) (undo-tree-id6050 . -4) (undo-tree-id6051 . -4) (undo-tree-id6052 . -4) (undo-tree-id6053 . -4) (undo-tree-id6054 . -4) (undo-tree-id6055 . -4) (undo-tree-id6056 . -4) (undo-tree-id6057 . -4) (undo-tree-id6058 . -4) (undo-tree-id6059 . -4) (undo-tree-id6060 . -4) 11965) nil (26619 20341 479507 0) 0 nil])
([nil nil ((#("weight " 0 7 (fontified t)) . -11954) (undo-tree-id5990 . -7) (undo-tree-id5991 . -7) (undo-tree-id5992 . -7) (undo-tree-id5993 . -7) (undo-tree-id5994 . -4) (undo-tree-id5995 . -5) (undo-tree-id5996 . -5) (undo-tree-id5997 . -5) (undo-tree-id5998 . -5) (undo-tree-id5999 . -6) (undo-tree-id6000 . -6) (undo-tree-id6001 . -6) (undo-tree-id6002 . -6) (undo-tree-id6003 . -7) (undo-tree-id6004 . -7) (undo-tree-id6005 . -7) (undo-tree-id6006 . -7) (undo-tree-id6007 . -7) (undo-tree-id6008 . -7) (undo-tree-id6009 . -7) (undo-tree-id6010 . -7) (undo-tree-id6011 . -7) (undo-tree-id6012 . -7) (undo-tree-id6013 . -7) (undo-tree-id6014 . -7) (undo-tree-id6015 . -7) (undo-tree-id6016 . -7) (undo-tree-id6017 . -7) (undo-tree-id6018 . -7) (undo-tree-id6019 . -7) (undo-tree-id6020 . -7) (undo-tree-id6021 . -7) (undo-tree-id6022 . -7) (undo-tree-id6023 . -7) (undo-tree-id6024 . -7) (undo-tree-id6025 . -7) (undo-tree-id6026 . -7) (undo-tree-id6027 . -7) (undo-tree-id6028 . -7) (undo-tree-id6029 . -7) (undo-tree-id6030 . -7) (undo-tree-id6031 . -7) (undo-tree-id6032 . -7) (undo-tree-id6033 . -7) 11961) nil (26619 20341 479459 0) 0 nil])
([nil nil ((#("edge " 0 5 (fontified t)) . -11949) (undo-tree-id5942 . -5) (undo-tree-id5943 . -5) (undo-tree-id5944 . -5) (undo-tree-id5945 . -5) (undo-tree-id5946 . -5) (undo-tree-id5947 . -5) (undo-tree-id5948 . -5) (undo-tree-id5949 . -5) (undo-tree-id5950 . -5) (undo-tree-id5951 . -5) (undo-tree-id5952 . -5) (undo-tree-id5953 . -5) (undo-tree-id5954 . -5) (undo-tree-id5955 . -5) (undo-tree-id5956 . -5) (undo-tree-id5957 . -5) (undo-tree-id5958 . -5) (undo-tree-id5959 . -5) (undo-tree-id5960 . -5) (undo-tree-id5961 . -5) (undo-tree-id5962 . -5) (undo-tree-id5963 . -5) (undo-tree-id5964 . -5) (undo-tree-id5965 . -5) (undo-tree-id5966 . -5) (undo-tree-id5967 . -5) (undo-tree-id5968 . -5) (undo-tree-id5969 . -5) (undo-tree-id5970 . -5) (undo-tree-id5971 . -5) (undo-tree-id5972 . -5) (undo-tree-id5973 . -5) (undo-tree-id5974 . -5) (undo-tree-id5975 . -5) (undo-tree-id5976 . -5) (undo-tree-id5977 . -5) (undo-tree-id5978 . -5) (undo-tree-id5979 . -5) (undo-tree-id5980 . -5) (undo-tree-id5981 . -5) (undo-tree-id5982 . -5) (undo-tree-id5983 . -5) (undo-tree-id5984 . -5) (undo-tree-id5985 . -5) (undo-tree-id5986 . -5) (undo-tree-id5987 . -5) (undo-tree-id5988 . -5) (undo-tree-id5989 . -5) 11954) nil (26619 20341 479383 0) 0 nil])
([nil nil ((11949 . 11956)) nil (26619 20341 479290 0) 0 nil])
([nil nil ((11988 . 11989) (11987 . 11989) (#("$" 0 1 (fontified nil)) . -11987) (11987 . 11988) (#("$" 0 1 (fontified t)) . -11987) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (11988 . 11990) (#("$" 0 1 (fontified nil)) . -11988) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (11987 . 11989) (#("$" 0 1 (fontified nil)) . -11987) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . 11988) (undo-tree-id6081 . -1) (11987 . 11988) (11982 . 11987) (#("$" 0 1 (fontified nil)) . 11983) (11981 . 11983) (#("$" 0 1 (fontified nil)) . -11981) (11981 . 11983) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . -11981) (11981 . 11982) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -11981) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 11982) (#(" " 0 1 (fontified t)) . -11982) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) 11983 (11982 . 11983) (#("$" 0 1 (fontified nil)) . 11982) (11981 . 11982) (#("$" 0 1 (fontified nil)) . -11981) (11981 . 11982) (#("$" 0 1 (face font-latex-math-face fontified t)) . -11981) (11982 . 11984) (#("$" 0 1 (fontified nil)) . -11982) (11981 . 11983) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -11981) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 11982) (11981 . 11982) (11980 . 11981) (#("$" 0 1 (fontified nil)) . 11981) (11979 . 11981) (#("$" 0 1 (fontified nil)) . -11979) (11979 . 11981) (#("$" 0 1 (fontified nil)) . -11979) (11979 . 11980) (11971 . 11979) (11956 . 11971) (t 26619 20341 512225 0)) nil (26619 20361 580451 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . 11990) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1)) nil (26619 20361 580399 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 11990) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1)) nil (26619 20361 580388 0) 0 nil])
([nil nil ((11990 . 11991)) nil (26619 20361 580370 0) 0 nil])
([nil nil ((10120 . 10121) (t 26619 20361 613838 858000) 10120) nil (26619 20490 572240 0) 0 nil])
([nil nil ((10121 . 10142)) nil (26619 20490 572237 0) 0 nil])
([nil nil ((10142 . 10150)) nil (26619 20490 572232 0) 0 nil])
([nil nil ((#("about " 0 6 (fontified t)) . -10144) (undo-tree-id6090 . -6) (undo-tree-id6091 . -6) (undo-tree-id6092 . -6) (undo-tree-id6093 . -6) (undo-tree-id6094 . -6) (undo-tree-id6095 . -6) (undo-tree-id6096 . -6) (undo-tree-id6097 . -6) (undo-tree-id6098 . -6) (undo-tree-id6099 . -6) (undo-tree-id6100 . -6) (undo-tree-id6101 . -6) (undo-tree-id6102 . -6) (undo-tree-id6103 . -6) (undo-tree-id6104 . -6) (undo-tree-id6105 . -6) (undo-tree-id6106 . -6) (undo-tree-id6107 . -6) (undo-tree-id6108 . -6) (undo-tree-id6109 . -6) (undo-tree-id6110 . -6) (undo-tree-id6111 . -6) (undo-tree-id6112 . -6) (undo-tree-id6113 . -6) (undo-tree-id6114 . -6) (undo-tree-id6115 . -6) (undo-tree-id6116 . -6) (undo-tree-id6117 . -6) (undo-tree-id6118 . -6) (undo-tree-id6119 . -6) (undo-tree-id6120 . -6) (undo-tree-id6121 . -6) (undo-tree-id6122 . -6) (undo-tree-id6123 . -6) 10150 (t 26619 20490 610213 643000)) nil (26619 20558 751982 0) 0 nil])
([nil nil ((10144 . 10163)) nil (26619 20558 751913 0) 0 nil])
([nil nil ((#("repe" 0 4 (fontified t)) . -10159) (undo-tree-id6152 . -4) (undo-tree-id6153 . -4) (undo-tree-id6154 . -4) (undo-tree-id6155 . -4) 10163 (t 26619 20558 785333 26000)) nil (26619 20585 769829 0) 0 nil])
([nil nil ((#("reducing " 0 9 (fontified t)) . -10150) (undo-tree-id6148 . -9) (undo-tree-id6149 . -9) (undo-tree-id6150 . -9) (undo-tree-id6151 . -9) 10159) nil (26619 20585 769820 0) 0 nil])
([nil nil ((10150 . 10163)) nil (26619 20585 769812 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -10159) (undo-tree-id6144 . -4) (undo-tree-id6145 . -4) (undo-tree-id6146 . -4) (undo-tree-id6147 . -4) 10163) nil (26619 20585 769810 0) 0 nil])
([nil nil ((10159 . 10180)) nil (26619 20585 769802 0) 0 nil])
([nil nil ((#("compute" 0 7 (fontified t)) . -10173) (undo-tree-id6140 . -7) (undo-tree-id6141 . -7) (undo-tree-id6142 . -7) (undo-tree-id6143 . -7) 10180) nil (26619 20585 769800 0) 0 nil])
([nil nil ((#("of " 0 3 (fontified t)) . -10170) (undo-tree-id6136 . -3) (undo-tree-id6137 . -3) (undo-tree-id6138 . -3) (undo-tree-id6139 . -3) 10173) nil (26619 20585 769791 0) 0 nil])
([nil nil ((#("number " 0 7 (fontified t)) . -10163) (undo-tree-id6132 . -7) (undo-tree-id6133 . -7) (undo-tree-id6134 . -7) (undo-tree-id6135 . -7) 10170) nil (26619 20585 769782 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -10159) (undo-tree-id6128 . -4) (undo-tree-id6129 . -4) (undo-tree-id6130 . -4) (undo-tree-id6131 . -4) 10163) nil (26619 20585 769772 0) 0 nil])
([nil nil ((10159 . 10164)) nil (26619 20585 769764 0) 0 nil])
([nil nil ((#("compu" 0 5 (fontified t)) . -10159) (undo-tree-id6124 . -5) (undo-tree-id6125 . -5) (undo-tree-id6126 . -5) (undo-tree-id6127 . -5) 10164) nil (26619 20585 769762 0) 0 nil])
([nil nil ((10159 . 10180)) nil (26619 20585 769746 0) 0 nil])
([nil nil ((10180 . 10182)) nil (26619 20585 769740 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t)) . -13008) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (#("g" 0 1 (face font-lock-comment-face fontified t)) . -13009) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) 13010 (13008 . 13010) (t 26619 20585 799603 600000)) nil (26619 20702 411810 0) 0 nil])
([nil nil ((99 . 100) (93 . 99)) nil (26619 20702 411745 0) 0 nil])
([nil nil ((10216 . 10218) (#("Dynamic " 0 8 (fontified t)) . -10216) (undo-tree-id6190 . -8) (undo-tree-id6191 . -8) (undo-tree-id6192 . -8) 10224 (10220 . 10224) (10199 . 10220) (#("example " 0 8 (fontified t)) . -10199) (undo-tree-id6193 . -8) (undo-tree-id6194 . -8) (undo-tree-id6195 . -8) 10207 (#("is " 0 3 (fontified t)) . -10207) (undo-tree-id6196 . -3) (undo-tree-id6197 . -3) (undo-tree-id6198 . -3) 10210 (#("the " 0 4 (fontified t)) . -10210) (undo-tree-id6199 . -4) (undo-tree-id6200 . -4) (undo-tree-id6201 . -4) 10214 (10207 . 10214) (#(" " 0 1 (fontified nil)) . 10199) (10198 . 10199) (10189 . 10207) (#("Consider" 0 8 (fontified t)) . -10189) (undo-tree-id6202 . -8) (undo-tree-id6203 . -8) (undo-tree-id6204 . -8) 10197 (10189 . 10197) (t 26619 20702 446793 495000)) nil (26619 20854 559333 0) 0 nil])
([nil nil ((10151 . 10152) (#(")" 0 1 (fontified nil)) . -10151) (#(")" 0 1 (fontified nil)) . 10152) (10149 . 10152) (10148 . 10150) (#("(" 0 1 (fontified nil)) . -10148) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (10148 . 10149) (10147 . 10148)) nil (26619 20854 559297 0) 0 nil])
([nil nil ((10223 . 10242)) nil (26619 20854 559279 0) 0 nil])
([nil nil ((10242 . 10263) (t 26619 20854 596061 651000)) nil (26619 20896 586017 0) 0 nil])
([nil nil ((10263 . 10266)) nil (26619 20896 586015 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10265) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) 10266) nil (26619 20896 586013 0) 0 nil])
([nil nil ((10265 . 10279)) nil (26619 20896 586007 0) 0 nil])
([nil nil ((#("calcu" 0 5 (fontified t)) . -10274) (undo-tree-id6392 . -5) (undo-tree-id6393 . -5) (undo-tree-id6394 . -5) 10279) nil (26619 20896 586005 0) 0 nil])
([nil nil ((#("of " 0 3 (fontified t)) . -10271) (undo-tree-id6389 . -3) (undo-tree-id6390 . -3) (undo-tree-id6391 . -3) 10274) nil (26619 20896 585998 0) 0 nil])
([nil nil ((#("implementation " 0 15 (fontified t)) . -10256) (undo-tree-id6386 . -15) (undo-tree-id6387 . -15) (undo-tree-id6388 . -15) 10271) nil (26619 20896 585991 0) 0 nil])
([nil nil ((#("recursive " 0 10 (fontified t)) . -10246) (undo-tree-id6383 . -10) (undo-tree-id6384 . -10) (undo-tree-id6385 . -10) 10256) nil (26619 20896 585984 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -10242) (undo-tree-id6380 . -4) (undo-tree-id6381 . -4) (undo-tree-id6382 . -4) 10246) nil (26619 20896 585977 0) 0 nil])
([nil nil ((#("is " 0 3 (fontified t)) . -10239) (undo-tree-id6377 . -3) (undo-tree-id6378 . -3) (undo-tree-id6379 . -3) 10242) nil (26619 20896 585970 0) 0 nil])
([nil nil ((10239 . 10260)) nil (26619 20896 585963 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10259) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) 10260) nil (26619 20896 585961 0) 0 nil])
([nil nil ((10277 . 10280) (#(" " 0 1 (fontified nil)) . 10274) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (10273 . 10274) (10259 . 10277)) nil (26619 20896 585946 0) 0 nil])
([nil nil ((10280 . 10293)) nil (26619 20896 585937 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 10295) (10293 . 10295) (#("$" 0 1 (fontified nil)) . -10293) (undo-tree-id6362 . -1) (10293 . 10295) (#("$" 0 1 (fontified nil)) . -10293) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (10293 . 10294)) nil (26619 20896 585935 0) 0 nil])
([nil nil ((10294 . 10296)) nil (26619 20896 585926 0) 0 nil])
([nil nil ((#("nt" 0 2 (face font-latex-math-face fontified t)) . -10294) (undo-tree-id6342 . -2) (undo-tree-id6343 . -2) (undo-tree-id6344 . -2) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -2) (undo-tree-id6350 . -2) (undo-tree-id6351 . -2) (undo-tree-id6352 . -2) (undo-tree-id6353 . -1) (undo-tree-id6354 . -2) (undo-tree-id6355 . -2) (undo-tree-id6356 . -2) (undo-tree-id6357 . -2) (undo-tree-id6358 . -2) (undo-tree-id6359 . -2) (undo-tree-id6360 . -2) (undo-tree-id6361 . -2) 10296) nil (26619 20896 585923 0) 0 nil])
([nil nil ((#("the $" 0 4 (fontified t) 4 5 (fontified t)) . -10289) (undo-tree-id6272 . -5) (undo-tree-id6273 . -5) (undo-tree-id6274 . -5) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -2) (undo-tree-id6280 . -2) (undo-tree-id6281 . -2) (undo-tree-id6282 . -2) (undo-tree-id6283 . -3) (undo-tree-id6284 . -3) (undo-tree-id6285 . -3) (undo-tree-id6286 . -3) (undo-tree-id6287 . -4) (undo-tree-id6288 . -4) (undo-tree-id6289 . -4) (undo-tree-id6290 . -4) (undo-tree-id6291 . -4) (undo-tree-id6292 . -4) (undo-tree-id6293 . -4) (undo-tree-id6294 . -4) (undo-tree-id6295 . -4) (undo-tree-id6296 . -4) (undo-tree-id6297 . -5) (undo-tree-id6298 . -5) (undo-tree-id6299 . -5) (undo-tree-id6300 . -5) (undo-tree-id6301 . -5) (undo-tree-id6302 . -5) (undo-tree-id6303 . -5) (undo-tree-id6304 . -5) (undo-tree-id6305 . -5) (undo-tree-id6306 . -4) (undo-tree-id6307 . -5) (undo-tree-id6308 . -4) (undo-tree-id6309 . -5) (undo-tree-id6310 . -5) (undo-tree-id6311 . -5) (undo-tree-id6312 . -5) (undo-tree-id6313 . -5) (undo-tree-id6314 . -5) (undo-tree-id6315 . -5) (undo-tree-id6316 . -5) (undo-tree-id6317 . -5) (undo-tree-id6318 . -5) (undo-tree-id6319 . -3) (undo-tree-id6320 . -5) (undo-tree-id6321 . -4) (undo-tree-id6322 . -5) (undo-tree-id6323 . -5) (undo-tree-id6324 . -5) (undo-tree-id6325 . -5) (undo-tree-id6326 . -5) (undo-tree-id6327 . -5) (undo-tree-id6328 . -5) (undo-tree-id6329 . -5) (undo-tree-id6330 . -5) (undo-tree-id6331 . -5) (undo-tree-id6332 . -5) (undo-tree-id6333 . -5) (undo-tree-id6334 . -3) (undo-tree-id6335 . -4) (undo-tree-id6336 . -5) (undo-tree-id6337 . -5) (undo-tree-id6338 . -5) (undo-tree-id6339 . -5) (undo-tree-id6340 . -5) (undo-tree-id6341 . -5) 10294) nil (26619 20896 585884 0) 0 nil])
([nil nil ((10289 . 10299)) nil (26619 20896 585764 0) 0 nil])
([nil nil ((#("fibonacci " 0 10 (fontified t)) . -10289) (undo-tree-id6220 . -10) (undo-tree-id6221 . -10) (undo-tree-id6222 . -10) (undo-tree-id6223 . -10) (undo-tree-id6224 . -1) (undo-tree-id6225 . -2) (undo-tree-id6226 . -2) (undo-tree-id6227 . -2) (undo-tree-id6228 . -2) (undo-tree-id6229 . -3) (undo-tree-id6230 . -3) (undo-tree-id6231 . -3) (undo-tree-id6232 . -3) (undo-tree-id6233 . -3) (undo-tree-id6234 . -4) (undo-tree-id6235 . -4) (undo-tree-id6236 . -4) (undo-tree-id6237 . -4) (undo-tree-id6238 . -5) (undo-tree-id6239 . -5) (undo-tree-id6240 . -5) (undo-tree-id6241 . -5) (undo-tree-id6242 . -6) (undo-tree-id6243 . -6) (undo-tree-id6244 . -6) (undo-tree-id6245 . -6) (undo-tree-id6246 . -7) (undo-tree-id6247 . -7) (undo-tree-id6248 . -7) (undo-tree-id6249 . -7) (undo-tree-id6250 . -8) (undo-tree-id6251 . -8) (undo-tree-id6252 . -8) (undo-tree-id6253 . -8) (undo-tree-id6254 . -9) (undo-tree-id6255 . -9) (undo-tree-id6256 . -9) (undo-tree-id6257 . -9) (undo-tree-id6258 . -10) (undo-tree-id6259 . -10) (undo-tree-id6260 . -10) (undo-tree-id6261 . -10) (undo-tree-id6262 . -10) (undo-tree-id6263 . -10) (undo-tree-id6264 . -10) (undo-tree-id6265 . -10) (undo-tree-id6266 . -10) (undo-tree-id6267 . -10) (undo-tree-id6268 . -10) (undo-tree-id6269 . -10) (undo-tree-id6270 . -10) (undo-tree-id6271 . -10) 10299) nil (26619 20896 585759 0) 0 nil])
([nil nil ((10289 . 10310)) nil (26619 20896 585671 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 10310) (undo-tree-id6219 . -1)) nil (26619 20896 585669 0) 0 nil])
([nil nil ((10310 . 10311)) nil (26619 20896 585666 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10310) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) 10311) nil (26619 20896 585663 0) 0 nil])
([nil nil ((10310 . 10312)) nil (26619 20896 585621 0) 0 nil])
([nil nil ((10258 . 10260) (#(" " 0 1 (fontified t)) . -10258) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) 10259 (10239 . 10259) (10235 . 10239) (10214 . 10235) (10199 . 10214) (#(" " 0 1 (fontified nil)) . 10199) (#(" " 0 1 (fontified nil)) . 10198) (10193 . 10200) (10326 . 10344) (#("c" 0 1 (fontified t)) . -10326) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (#("a" 0 1 (fontified t)) . -10327) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (#("l" 0 1 (fontified t)) . -10328) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) 10329 (10313 . 10329) (#("For " 0 4 (fontified t)) . -10313) (undo-tree-id6447 . -4) (undo-tree-id6448 . -4) (undo-tree-id6449 . -4) 10317 (#("the " 0 4 (fontified t)) . -10317) (undo-tree-id6450 . -4) (undo-tree-id6451 . -4) (undo-tree-id6452 . -4) 10321 (#("function " 0 9 (fontified t)) . -10321) (undo-tree-id6453 . -9) (undo-tree-id6454 . -9) (undo-tree-id6455 . -9) 10330 (#("\\" 0 1 (fontified t)) . -10330) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) 10331 (10330 . 10331) (10312 . 10330) (t 26619 20896 622146 179000)) nil (26619 20999 686385 0) 0 nil])
([nil nil ((10421 . 10422) (10420 . 10422) (#("(" 0 1 (fontified nil)) . -10420) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (10420 . 10421) (10417 . 10420) (10416 . 10418) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -10416) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (10416 . 10417) (10412 . 10416) (#("ode" 0 3 (face (font-latex-sedate-face) fontified t)) . -10412) (undo-tree-id6411 . -3) (undo-tree-id6412 . -3) (undo-tree-id6413 . -3) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -2) (undo-tree-id6419 . -2) (undo-tree-id6420 . -2) (undo-tree-id6421 . -2) (undo-tree-id6422 . -3) (undo-tree-id6423 . -3) (undo-tree-id6424 . -3) (undo-tree-id6425 . -3) (undo-tree-id6426 . -3) (undo-tree-id6427 . -3) (undo-tree-id6428 . -3) (undo-tree-id6429 . -3) (undo-tree-id6430 . -3) (undo-tree-id6431 . -3) (undo-tree-id6432 . -3) 10415 (10412 . 10415) (10411 . 10412) (10410 . 10411)) nil (26619 20999 686329 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 10411) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (10410 . 10411) (10424 . 10426)) nil (26619 20999 686277 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10405) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) 10406 (10391 . 10406) (t 26619 20999 721866 933000)) nil (26619 21069 397382 0) 0 nil])
([nil nil ((10438 . 10439) (#("." 0 1 (fontified t)) . 10438) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1)) nil (26619 21069 397366 0) 0 nil])
([nil nil ((10447 . 10457) (10446 . 10448) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -10446) (10446 . 10447) (10441 . 10446) (10440 . 10441) (#(" " 0 1 (fontified nil)) . -10440) (10439 . 10440)) nil (26619 21069 397354 0) 0 nil])
([nil nil ((10471 . 10476) (#("n" 0 1 (face (font-lock-function-name-face) fontified t)) . -10471) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) 10472 (10467 . 10472) (#("i" 0 1 (face (font-lock-function-name-face) fontified t)) . -10467) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (#("s" 0 1 (face (font-lock-function-name-face) fontified t)) . -10468) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (#("t" 0 1 (face (font-lock-function-name-face) fontified t)) . -10469) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) 10470 (10466 . 10470) (10465 . 10467) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -10465) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (10465 . 10466) (10462 . 10465) (10461 . 10462) (10458 . 10461)) nil (26619 21069 397345 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -10459) (undo-tree-id6498 . -2) (undo-tree-id6499 . -2) (undo-tree-id6500 . -2) (undo-tree-id6501 . -2) (undo-tree-id6502 . -2) (undo-tree-id6503 . -2) (undo-tree-id6504 . -2) (undo-tree-id6505 . -2) (undo-tree-id6506 . -2) (undo-tree-id6507 . -2) (undo-tree-id6508 . -2) (undo-tree-id6509 . -2) (undo-tree-id6510 . -2) (undo-tree-id6511 . -2) 10461 (10458 . 10461) 10457) nil (26619 21069 397243 0) 0 nil])
([nil nil (10460) nil (26619 21069 397217 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10460) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (#(" " 0 1 (fontified t)) . -10461) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) 10462) nil (26619 21069 397212 0) 0 nil])
([nil nil ((10458 . 10461) 10440) nil (26619 21069 397136 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10459) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (#(" " 0 1 (fontified t)) . -10460) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) 10461 (t 26619 21069 433519 526000)) nil (26619 21177 737564 0) 0 nil])
([nil nil ((10459 . 10474) (10458 . 10460) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -10458) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (10458 . 10459) (#("a" 0 1 (fontified t)) . -10458) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) 10459 (10458 . 10459)) nil (26619 21177 737510 0) 0 nil])
([nil nil ((10503 . 10505) (10490 . 10492) (#("    " 0 4 (fontified nil)) . -10490) (undo-tree-id6954 . -4) (undo-tree-id6955 . -4) (undo-tree-id6956 . -4) (undo-tree-id6957 . -4) (undo-tree-id6958 . -4) (undo-tree-id6959 . -4) (undo-tree-id6960 . -4) (10504 . 10505) (10503 . 10504) (#(" " 0 1 (fontified t)) . -10503) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) 10504 (10502 . 10504) (#("0" 0 1 (fontified t)) . -10502) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) 10503 (10502 . 10503) (10494 . 10502) (10490 . 10494) (#("  " 0 2 (fontified t)) . 10490) (undo-tree-id6980 . -2) (undo-tree-id6981 . -2) (undo-tree-id6982 . -2) (undo-tree-id6983 . -2) (undo-tree-id6984 . -2) (undo-tree-id6985 . -2) (undo-tree-id6986 . -2) (undo-tree-id6987 . -2) (undo-tree-id6988 . -2) (undo-tree-id6989 . -2) (undo-tree-id6990 . -2) 10492 (10490 . 10492) (10476 . 10478) (#(" " 0 1 (fontified nil)) . -10476) (10488 . 10489) (10486 . 10488) (#(")" 0 1 (fontified nil)) . -10486) (#(")" 0 1 (fontified nil)) . 10487) (10485 . 10487) (10484 . 10486) (#("(" 0 1 (fontified nil)) . -10484) (10484 . 10485) (10477 . 10484) (#(" " 0 1 (fontified t)) . -10477) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) 10478 (10475 . 10478) 10474) nil (26619 21177 737477 0) 0 nil])
([nil nil (10492) nil (26619 21177 737403 0) 0 nil])
([nil nil ((10490 . 10494) (#("  " 0 2 (fontified t)) . 10490) (undo-tree-id6942 . -2) (undo-tree-id6943 . -2) (undo-tree-id6944 . -2) (undo-tree-id6945 . -2) (undo-tree-id6946 . -2) (undo-tree-id6947 . -2) (undo-tree-id6948 . -2) (undo-tree-id6949 . -2) (undo-tree-id6950 . -2) (undo-tree-id6951 . -2) (undo-tree-id6952 . -2) (undo-tree-id6953 . -2) 10492) nil (26619 21177 737401 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -10521) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) 10522 (10520 . 10522) (#("0" 0 1 (fontified t)) . -10520) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (#(";" 0 1 (fontified t)) . -10521) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) 10522 (10520 . 10522) (10513 . 10520) (10505 . 10513) (#("    " 0 4 (fontified t)) . 10505) (undo-tree-id6931 . -4) (undo-tree-id6932 . -4) (undo-tree-id6933 . -4) (undo-tree-id6934 . -4) (undo-tree-id6935 . -4) (undo-tree-id6936 . -4) (undo-tree-id6937 . -4) (undo-tree-id6938 . -4) (undo-tree-id6939 . -4) (undo-tree-id6940 . -4) (undo-tree-id6941 . -4) 10509 (10504 . 10509) 10494) nil (26619 21177 737376 0) 0 nil])
([nil nil ((10541 . 10549) (10522 . 10530) (#("    " 0 4 (fontified nil)) . -10522) (undo-tree-id6844 . -4) (undo-tree-id6845 . -4) (undo-tree-id6846 . -4) (undo-tree-id6847 . -4) (undo-tree-id6848 . -4) (undo-tree-id6849 . -4) (undo-tree-id6850 . -4) (undo-tree-id6851 . -4) (undo-tree-id6852 . -4) (undo-tree-id6853 . -4) (undo-tree-id6854 . -4) (undo-tree-id6855 . -4) (undo-tree-id6856 . -4) (undo-tree-id6857 . -4) (undo-tree-id6858 . -4) (undo-tree-id6859 . -4) (10536 . 10537) (10526 . 10536) (#(" " 0 1 (fontified t)) . -10526) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (#(" " 0 1 (fontified t)) . -10527) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (#(" " 0 1 (fontified t)) . -10528) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (#(" " 0 1 (fontified t)) . -10529) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) 10530 (10521 . 10530) 10521) nil (26619 21177 737286 0) 0 nil])
([nil nil (10530) nil (26619 21177 737208 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10526) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (#(" " 0 1 (fontified t)) . -10527) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (#(" " 0 1 (fontified t)) . -10528) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (#(" " 0 1 (fontified t)) . -10529) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) 10530) nil (26619 21177 737202 0) 0 nil])
([nil nil ((10545 . 10553) (10537 . 10545) (#("    " 0 4 (fontified t)) . 10537) (undo-tree-id6758 . -4) (undo-tree-id6759 . -4) (undo-tree-id6760 . -4) (undo-tree-id6761 . -4) (undo-tree-id6762 . -4) (undo-tree-id6763 . -4) (undo-tree-id6764 . -4) (undo-tree-id6765 . -4) (undo-tree-id6766 . -4) (undo-tree-id6767 . -4) (undo-tree-id6768 . -4) 10541 (10536 . 10541) 10526) nil (26619 21177 737042 0) 0 nil])
([nil nil ((10550 . 10554) (10537 . 10541) (#("        " 0 8 (fontified nil)) . -10537) (undo-tree-id6751 . -8) (undo-tree-id6752 . -8) (undo-tree-id6753 . -8) (undo-tree-id6754 . -8) (undo-tree-id6755 . -8) (undo-tree-id6756 . -8) (undo-tree-id6757 . -8) (10553 . 10554)) nil (26619 21177 737020 0) 0 nil])
([nil nil ((10537 . 10545) (#("    " 0 4 (fontified t)) . 10537) (undo-tree-id6739 . -4) (undo-tree-id6740 . -4) (undo-tree-id6741 . -4) (undo-tree-id6742 . -4) (undo-tree-id6743 . -4) (undo-tree-id6744 . -4) (undo-tree-id6745 . -4) (undo-tree-id6746 . -4) (undo-tree-id6747 . -4) (undo-tree-id6748 . -4) (undo-tree-id6749 . -4) (undo-tree-id6750 . -4) 10541) nil (26619 21177 737005 0) 0 nil])
([nil nil ((10568 . 10576) (10554 . 10562) (#("    " 0 4 (fontified nil)) . -10554) (10563 . 10564) (10558 . 10563)) nil (26619 21177 736975 0) 0 nil])
([nil nil (10562) nil (26619 21177 736973 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10561) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) 10562) nil (26619 21177 736970 0) 0 nil])
([nil nil ((10548 . 10552) (#(" " 0 1 (fontified nil)) . 10547) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (10537 . 10541) (#("        " 0 8 (fontified nil)) . -10537) (10552 . 10553) (#("0
       " 0 2 (fontified t) 2 9 (fontified t)) . -10552) (undo-tree-id6678 . -9) (undo-tree-id6679 . -9) (undo-tree-id6680 . -9) (undo-tree-id6681 . -9) (undo-tree-id6682 . -9) (undo-tree-id6683 . -9) (undo-tree-id6684 . -9) (undo-tree-id6685 . -9) (undo-tree-id6686 . -9) (undo-tree-id6687 . -9) (undo-tree-id6688 . -9) (undo-tree-id6689 . -9) (undo-tree-id6690 . -9) (undo-tree-id6691 . -9) (undo-tree-id6692 . -9) (undo-tree-id6693 . -9) (undo-tree-id6694 . -9) (undo-tree-id6695 . -9) (undo-tree-id6696 . -9) (undo-tree-id6697 . -9) (undo-tree-id6698 . -9) (undo-tree-id6699 . -9) (undo-tree-id6700 . -9) (undo-tree-id6701 . -9) (undo-tree-id6702 . -9) (undo-tree-id6703 . -9) (undo-tree-id6704 . -9) (undo-tree-id6705 . -9) (undo-tree-id6706 . -9) (undo-tree-id6707 . -9) (undo-tree-id6708 . -9) (undo-tree-id6709 . -9) (undo-tree-id6710 . -9) (undo-tree-id6711 . -9) (undo-tree-id6712 . -9) (undo-tree-id6713 . -9) (undo-tree-id6714 . -9) (undo-tree-id6715 . -9) (undo-tree-id6716 . -9) (undo-tree-id6717 . -9) (undo-tree-id6718 . -9) (undo-tree-id6719 . -9) (undo-tree-id6720 . -9) (undo-tree-id6721 . -2) (undo-tree-id6722 . -9) (undo-tree-id6723 . -9) (undo-tree-id6724 . -9) (undo-tree-id6725 . -9) (undo-tree-id6726 . -9) 10561) nil (26619 21177 736943 0) 0 nil])
([nil nil ((10537 . 10545) (#("    " 0 4 (fontified t)) . 10537) (undo-tree-id6611 . -4) (undo-tree-id6612 . -4) (undo-tree-id6613 . -4) (undo-tree-id6614 . -4) (undo-tree-id6615 . -4) (undo-tree-id6616 . -4) (undo-tree-id6617 . -4) (undo-tree-id6618 . -4) (undo-tree-id6619 . -4) (undo-tree-id6620 . -4) (undo-tree-id6621 . -4) (undo-tree-id6622 . -4) 10541) nil (26619 21177 736770 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -10552) (undo-tree-id6603 . -8) (undo-tree-id6604 . -8) (undo-tree-id6605 . -8) (undo-tree-id6606 . -8) (undo-tree-id6607 . -8) (undo-tree-id6608 . -8) (undo-tree-id6609 . -8) (undo-tree-id6610 . -8) 10560 (10551 . 10560) 10545) nil (26619 21177 736748 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -10522) (undo-tree-id6595 . -8) (undo-tree-id6596 . -8) (undo-tree-id6597 . -8) (undo-tree-id6598 . -8) (undo-tree-id6599 . -8) (undo-tree-id6600 . -8) (undo-tree-id6601 . -8) (undo-tree-id6602 . -8) 10530 (10521 . 10530) 10505) nil (26619 21177 736732 0) 0 nil])
([nil nil ((10563 . 10568) 10554) nil (26619 21177 736716 0) 0 nil])
([nil nil ((10564 . 10572) (#("    " 0 4 (fontified t)) . 10564) (undo-tree-id6592 . -4) (undo-tree-id6593 . -4) (undo-tree-id6594 . -4) 10568) nil (26619 21177 736714 0) 0 nil])
([nil nil ((10572 . 10579)) nil (26619 21177 736707 0) 0 nil])
([nil nil ((10579 . 10582)) nil (26619 21177 736705 0) 0 nil])
([nil nil ((10582 . 10584) (#("(" 0 1 (fontified nil)) . -10582) (10582 . 10583)) nil (26619 21177 736704 0) 0 nil])
([nil nil ((10583 . 10584)) nil (26619 21177 736701 0) 0 nil])
([nil nil ((10584 . 10585)) nil (26619 21177 736700 0) 0 nil])
([nil nil ((10586 . 10591) (#(")" 0 1 (fontified nil)) . -10586) (#(")" 0 1 (fontified nil)) . 10587) (10585 . 10587)) nil (26619 21177 736698 0) 0 nil])
([nil nil ((10591 . 10593) (#("(" 0 1 (fontified nil)) . -10591) (10591 . 10592)) nil (26619 21177 736695 0) 0 nil])
([nil nil ((10592 . 10594)) nil (26619 21177 736693 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -10593) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) 10594) nil (26619 21177 736690 0) 0 nil])
([nil nil ((10593 . 10594)) nil (26619 21177 736667 0) 0 nil])
([nil nil ((10594 . 10595)) nil (26619 21177 736662 0) 0 nil])
([nil nil ((#("        
        
  


" 0 8 (fontified t) 8 9 (fontified t) 9 17 (fontified t) 17 18 (fontified t) 18 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t)) . 10597) (undo-tree-id7042 . -22) (undo-tree-id7043 . -22) (undo-tree-id7044 . -8) (undo-tree-id7045 . -22) (undo-tree-id7046 . -22) (undo-tree-id7047 . -22) (undo-tree-id7048 . -21) (undo-tree-id7049 . -21) (undo-tree-id7050 . -21) (undo-tree-id7051 . -21) (undo-tree-id7052 . -21) (undo-tree-id7053 . -21) (undo-tree-id7054 . -21) (undo-tree-id7055 . -21) (undo-tree-id7056 . -21) (undo-tree-id7057 . -21) (undo-tree-id7058 . -21) (undo-tree-id7059 . -21) (undo-tree-id7060 . -21) (undo-tree-id7061 . -21) (undo-tree-id7062 . -21) (undo-tree-id7063 . -22) (undo-tree-id7064 . -8) (undo-tree-id7065 . -8) (undo-tree-id7066 . -8) (undo-tree-id7067 . -8) (undo-tree-id7068 . -8) (undo-tree-id7069 . -8) (undo-tree-id7070 . -8) (undo-tree-id7071 . -8) (undo-tree-id7072 . -8) (undo-tree-id7073 . -8) (undo-tree-id7074 . -8) (undo-tree-id7075 . -17) (undo-tree-id7076 . -17) (undo-tree-id7077 . -17) (undo-tree-id7078 . -17) (undo-tree-id7079 . -20) (undo-tree-id7080 . -20) (undo-tree-id7081 . -20) (undo-tree-id7082 . -20) (undo-tree-id7083 . -21) (undo-tree-id7084 . -21) (undo-tree-id7085 . -21) (undo-tree-id7086 . -21) (undo-tree-id7087 . -22) (undo-tree-id7088 . -22) (undo-tree-id7089 . -22) (undo-tree-id7090 . -22) (undo-tree-id7091 . -22) (undo-tree-id7092 . -22) (undo-tree-id7093 . -23) (undo-tree-id7094 . -23) 10619 (t 26619 21177 776918 597000)) nil (26619 21191 757621 0) 0 nil])
([nil nil ((10552 . 10554) (t 26619 21191 796246 36000)) nil (26619 21271 58119 0) 0 nil])
([nil nil ((10502 . 10503) (#("1" 0 1 (fontified t)) . 10502) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (t 26619 21271 91595 11000)) nil (26619 21377 240184 0) 0 nil])
([nil nil ((10535 . 10536) (#("0" 0 1 (fontified t)) . 10535) (undo-tree-id7095 . -1)) nil (26619 21377 240171 0) 0 nil])
([nil nil ((10615 . 10616) 10611) nil (26619 21377 240156 0) 0 nil])
([nil nil ((10661 . 10674) (#(")" 0 1 (fontified t)) . 10661) (10658 . 10659) (10657 . 10659) (#("(" 0 1 (fontified nil)) . -10657) (10657 . 10658) (10654 . 10657) (10653 . 10655) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -10653) (10653 . 10654) (10649 . 10653) (10648 . 10649) (#("fib(" 0 3 (fontified t) 3 4 (fontified t)) . -10648) (undo-tree-id7132 . -4) (undo-tree-id7133 . -4) (undo-tree-id7134 . -4) 10652 (10651 . 10653) (#("(" 0 1 (fontified nil)) . -10651) (10651 . 10652) (10638 . 10651) (10637 . 10638) (10616 . 10637) (#("L" 0 1 (fontified t)) . -10616) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) 10617 (10616 . 10617) (#("If " 0 3 (fontified t)) . -10616) (undo-tree-id7138 . -3) (undo-tree-id7139 . -3) (undo-tree-id7140 . -3) 10619 (10616 . 10619) (t 26619 21377 278652 396000)) nil (26619 21461 920811 0) 0 nil])
([nil nil (10674) nil (26619 21461 920787 0) 0 nil])
([nil nil ((10637 . 10644) (10616 . 10637)) nil (26619 21461 920786 0) 0 nil])
([nil nil ((#("If we look at the call tree for" 0 31 (fontified t)) . 10644) (undo-tree-id7125 . -30) (undo-tree-id7126 . 31) (undo-tree-id7127 . -30) (undo-tree-id7128 . -30) (undo-tree-id7129 . -30) (undo-tree-id7130 . -30) (undo-tree-id7131 . -30) 10674) nil (26619 21461 920783 0) 0 nil])
([nil nil ((10644 . 10648)) nil (26619 21461 920771 0) 0 nil])
([nil nil ((10663 . 10667)) nil (26619 21461 920770 0) 0 nil])
([nil nil (10667) nil (26619 21461 920768 0) 0 nil])
([nil nil ((10616 . 10617) (#("l" 0 1 (fontified t)) . 10616) (#(" " 0 1 (fontified t)) . 10616) (#("a" 0 1 (fontified t)) . 10616) (#(" " 0 1 (fontified t)) . 10616) (#("e" 0 1 (fontified t)) . 10616) (#("k" 0 1 (fontified t)) . 10616) (#("a" 0 1 (fontified t)) . 10616) (#("T" 0 1 (fontified t)) . 10616)) nil (26619 21461 920766 0) 0 nil])
([nil nil ((10660 . 10666) (#("look" 0 4 (fontified t)) . 10660) (undo-tree-id7124 . -3)) nil (26619 21461 920761 0) 0 nil])
([nil nil ((10680 . 10681) (10679 . 10681) (#("(" 0 1 (fontified nil)) . -10679) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (10679 . 10680) (10676 . 10679) (10675 . 10677) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -10675) (10675 . 10676) (10671 . 10675) (10670 . 10671) (10663 . 10670) (10642 . 10663) (10621 . 10642)) nil (26619 21461 920756 0) 0 nil])
([nil nil ((#("at the call tree for \\code{fib(5)} and search for rep
" 0 2 (fontified t) 2 20 (fontified t) 20 21 (fontified t) 21 26 (face (font-latex-sedate-face) fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 30 (fontified t) 30 32 (fontified t) 32 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t) 34 53 (fontified t) 53 54 (fontified t)) . 10683) (undo-tree-id7101 . -53) (undo-tree-id7102 . -54) (undo-tree-id7103 . -53) (undo-tree-id7104 . -53) (undo-tree-id7105 . -53) (undo-tree-id7106 . -16) (undo-tree-id7107 . -53) (undo-tree-id7108 . -16) (undo-tree-id7109 . -53) (undo-tree-id7110 . -16) (undo-tree-id7111 . -16) (undo-tree-id7112 . -53) (undo-tree-id7113 . -53) (undo-tree-id7114 . -53) (undo-tree-id7115 . -53) (undo-tree-id7116 . -53) (undo-tree-id7117 . -53) (undo-tree-id7118 . -53) (undo-tree-id7119 . -53) (undo-tree-id7120 . -54) (undo-tree-id7121 . -54) 10736) nil (26619 21461 920745 0) 0 nil])
([nil nil ((10684 . 10686) (10683 . 10684)) nil (26619 21499 404771 0) 0 nil])
([nil nil ((10684 . 10685) (t 26619 21461 959471 784000) 10616) nil (26619 21504 444185 0) 0 nil] [nil nil ((10684 . 10685) (t 26619 21461 959471 784000) 10616) ((#("
" 0 1 (fontified t)) . 10684) (undo-tree-id7141 . -1)) (26619 21499 404508 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11039 . 11040) (nil fontified nil 10685 . 11040) (10685 . 11040)) nil (26619 21504 444179 0) 0 nil])
nil
([nil nil ((10684 . 10685) (t 26619 21504 483641 814000) 10677) nil (26619 21538 380766 0) 0 nil])
([nil nil ((10692 . 10701) (10691 . 10693) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -10691) (10691 . 10692) (10686 . 10691) (10685 . 10686)) nil (26619 21538 380763 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11047) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (#(" " 0 1 (fontified t)) . -11048) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (#(" " 0 1 (fontified t)) . -11049) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (#(" " 0 1 (fontified t)) . -11050) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (#(" " 0 1 (fontified t)) . -11051) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (#(" " 0 1 (fontified t)) . -11052) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (#(" " 0 1 (fontified t)) . -11053) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (#(" " 0 1 (fontified t)) . -11054) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (#(" " 0 1 (fontified t)) . -11055) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (#(" " 0 1 (fontified t)) . -11056) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (#(" " 0 1 (fontified t)) . -11057) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (#(" " 0 1 (fontified t)) . -11058) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (#(" " 0 1 (fontified t)) . -11059) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (#(" " 0 1 (fontified t)) . -11060) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (#(" " 0 1 (fontified t)) . -11061) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (#(" " 0 1 (fontified t)) . -11062) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (#(" " 0 1 (fontified t)) . -11063) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) 11064 (#(" " 0 1 (fontified t)) . -11064) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (#(" " 0 1 (fontified t)) . -11065) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (#(" " 0 1 (fontified t)) . -11066) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (#(" " 0 1 (fontified t)) . -11067) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (#(" " 0 1 (fontified t)) . -11068) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (#(" " 0 1 (fontified t)) . -11069) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (#(" " 0 1 (fontified t)) . -11070) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (#(" " 0 1 (fontified t)) . -11071) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (#(" " 0 1 (fontified t)) . -11072) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (#(" " 0 1 (fontified t)) . -11073) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (#(" " 0 1 (fontified t)) . -11074) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) 11075 (11043 . 11075) (10986 . 11018) (#("                                      " 0 38 (fontified nil)) . -10986) (11048 . 11049) (#("CP ]]]]]]
                                      " 0 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-6-face) fontified t) 4 5 (face (rainbow-delimiters-depth-5-face) fontified t) 5 6 (face (rainbow-delimiters-depth-4-face) fontified t) 6 7 (face (rainbow-delimiters-depth-3-face) fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t) 9 48 (fontified t)) . -11048) (undo-tree-id7238 . -48) (undo-tree-id7239 . -9) (undo-tree-id7240 . -48) (undo-tree-id7241 . -48) 11096 (11057 . 11096) 11002) nil (26619 21538 380749 0) 0 nil])
([nil nil (11047) nil (26619 21538 380568 0) 0 nil])
([nil nil ((11048 . 11057) (11047 . 11049) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11047) (11047 . 11048) (11044 . 11047) (11043 . 11044) (#(" " 0 1 (fontified t)) . -11043) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (#(" " 0 1 (fontified t)) . -11044) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (#(" " 0 1 (fontified t)) . -11045) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (#(" " 0 1 (fontified t)) . -11046) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) 11047) nil (26619 21538 380562 0) 0 nil])
([nil nil ((#("\\Tree[.IP [.NP [.Det \\textit{the} ]
               [.N\\1 [.N \\textit{package} ]]]
          [.I\\1 [.I \\textsc{3sg.Pres} ]
                [.VP [.V\\1 [.V \\textit{is} ]
                           [.AP [.Deg \\textit{really} ]
                                [.A\\1 [.A \\textit{simple} ]
                                \\qroof{\\textit{to use}}.
" 0 5 (face (font-latex-sedate-face) fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-2-face) fontified t) 11 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-3-face) fontified t) 16 21 (fontified t) 21 28 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 28 29 (face (rainbow-delimiters-depth-4-face) fontified t) 29 32 (face (font-latex-italic-face) fontified t) 32 33 (face (rainbow-delimiters-depth-4-face) fontified t) 33 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) fontified t) 35 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-3-face) fontified t) 52 54 (fontified t) 54 56 (face (font-latex-sedate-face) fontified t) 56 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-4-face) fontified t) 58 61 (fontified t) 61 68 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 68 69 (face (rainbow-delimiters-depth-5-face) fontified t) 69 76 (face (font-latex-italic-face) fontified t) 76 77 (face (rainbow-delimiters-depth-5-face) fontified t) 77 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-4-face) fontified t) 79 80 (face (rainbow-delimiters-depth-3-face) fontified t) 80 81 (face (rainbow-delimiters-depth-2-face) fontified t) 81 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-2-face) fontified t) 93 95 (fontified t) 95 97 (face (font-latex-sedate-face) fontified t) 97 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-3-face) fontified t) 99 102 (fontified t) 102 109 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 109 110 (face (rainbow-delimiters-depth-4-face) fontified t) 110 118 (face (font-latex-bold-face) fontified t) 118 119 (face (rainbow-delimiters-depth-4-face) fontified t) 119 120 (fontified t) 120 121 (face (rainbow-delimiters-depth-3-face) fontified t) 121 138 (fontified t) 138 139 (face (rainbow-delimiters-depth-3-face) fontified t) 139 143 (fontified t) 143 144 (face (rainbow-delimiters-depth-4-face) fontified t) 144 146 (fontified t) 146 148 (face (font-latex-sedate-face) fontified t) 148 149 (fontified t) 149 150 (face (rainbow-delimiters-depth-5-face) fontified t) 150 153 (fontified t) 153 160 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 160 161 (face (rainbow-delimiters-depth-6-face) fontified t) 161 163 (face (font-latex-italic-face) fontified t) 163 164 (face (rainbow-delimiters-depth-6-face) fontified t) 164 165 (fontified t) 165 166 (face (rainbow-delimiters-depth-5-face) fontified t) 166 194 (fontified t) 194 195 (face (rainbow-delimiters-depth-5-face) fontified t) 195 199 (fontified t) 199 200 (face (rainbow-delimiters-depth-6-face) fontified t) 200 205 (fontified t) 205 212 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 212 213 (face (rainbow-delimiters-depth-7-face) fontified t) 213 219 (face (font-latex-italic-face) fontified t) 219 220 (face (rainbow-delimiters-depth-7-face) fontified t) 220 221 (fontified t) 221 222 (face (rainbow-delimiters-depth-6-face) fontified t) 222 255 (fontified t) 255 256 (face (rainbow-delimiters-depth-6-face) fontified t) 256 258 (fontified t) 258 260 (face (font-latex-sedate-face) fontified t) 260 261 (fontified t) 261 262 (face (rainbow-delimiters-depth-7-face) fontified t) 262 265 (fontified t) 265 272 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 272 273 (face (rainbow-delimiters-depth-8-face) fontified t) 273 279 (face (font-latex-italic-face) fontified t) 279 280 (face (rainbow-delimiters-depth-8-face) fontified t) 280 281 (fontified t) 281 282 (face (rainbow-delimiters-depth-7-face) fontified t) 282 283 (fontified t) 283 315 (fontified t) 315 321 (face (font-latex-sedate-face) fontified t) 321 322 (face (rainbow-delimiters-depth-7-face) fontified t) 322 329 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 329 330 (face (rainbow-delimiters-depth-8-face) fontified t) 330 336 (face (font-latex-italic-face) fontified t) 336 337 (face (rainbow-delimiters-depth-8-face) fontified t) 337 338 (face (rainbow-delimiters-depth-7-face) fontified t) 338 340 (fontified t)) . 10703) (undo-tree-id7242 . -297) (undo-tree-id7243 . -297) (undo-tree-id7244 . -14) (undo-tree-id7245 . -297) (undo-tree-id7246 . -339) (undo-tree-id7247 . -297) (undo-tree-id7248 . -297) (undo-tree-id7249 . -96) (undo-tree-id7250 . -136) (undo-tree-id7251 . -181) (undo-tree-id7252 . -181) (undo-tree-id7253 . -181) (undo-tree-id7254 . -181) (undo-tree-id7255 . -237) (undo-tree-id7256 . -237) (undo-tree-id7257 . -237) (undo-tree-id7258 . -237) (undo-tree-id7259 . -283) (undo-tree-id7260 . -297) (undo-tree-id7261 . -297) (undo-tree-id7262 . -297) (undo-tree-id7263 . -297) (undo-tree-id7264 . -297) (undo-tree-id7265 . -340) (undo-tree-id7266 . -340) 11000 (t 26619 21538 421052 588000)) nil (26619 21656 317468 0) 0 nil])
([nil nil ((100 . 108)) nil (26619 21665 923703 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -10711) (undo-tree-id7325 . -2) (undo-tree-id7326 . -2) (undo-tree-id7327 . -2) 10713 (10710 . 10713) 10693) nil (26619 21688 841516 0) 0 nil] [nil nil ((10710 . 10713) 10693) ((#("
  " 0 3 (fontified t)) . 10710) (undo-tree-id7267 . -3) (undo-tree-id7268 . -3) (undo-tree-id7269 . -3) (undo-tree-id7270 . -3) (undo-tree-id7271 . -3) (undo-tree-id7272 . -3) (undo-tree-id7273 . -3) (undo-tree-id7274 . -3) (undo-tree-id7275 . -3) (undo-tree-id7276 . -3) (undo-tree-id7277 . -3) (undo-tree-id7278 . -3) (undo-tree-id7279 . -3) (undo-tree-id7280 . -3) (undo-tree-id7281 . -3) (undo-tree-id7282 . -3) (undo-tree-id7283 . -3) (undo-tree-id7284 . -3) (undo-tree-id7285 . -3) (undo-tree-id7286 . -3) (undo-tree-id7287 . -3) (undo-tree-id7288 . -3) (undo-tree-id7289 . -3) (undo-tree-id7290 . -3) (undo-tree-id7291 . -3) (undo-tree-id7292 . -3) (undo-tree-id7293 . -3) (undo-tree-id7294 . -3) (undo-tree-id7295 . -3) (undo-tree-id7296 . -3) (undo-tree-id7297 . -3) (undo-tree-id7298 . -3) (undo-tree-id7299 . -3) (undo-tree-id7300 . -3) (t 26619 21656 358919 356000)) (26619 21656 317388 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10711) (undo-tree-id7318 . 1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1)) nil (26619 21688 841509 0) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t)) . -10711) (undo-tree-id7315 . -2) (undo-tree-id7316 . -2) (undo-tree-id7317 . -2) 10713 (10711 . 10713) (10711 . 10712)) nil (26619 21688 841496 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10711 . 10712) (#("
" 0 1 (fontified nil)) . -10712) (10711 . 10713)) nil (26619 21688 841488 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10712 . 10713) (#("
" 0 1 (fontified nil)) . -10713) (10712 . 10714)) nil (26619 21688 841485 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11079 . 11080) (nil fontified nil 10713 . 11080) (10713 . 11080)) nil (26619 21688 841482 0) 0 nil])
([nil nil ((#("

" 0 1 (rear-nonsticky t fontified t) 1 2 (rear-nonsticky t fontified t)) . 10711) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -2) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -2) (undo-tree-id7314 . -2)) nil (26619 21730 513765 0) 0 nil])
([nil nil ((#("  top color=white, bottom color=blue!10,
" 0 41 (fontified t)) . 10898) (undo-tree-id7351 . -7) (undo-tree-id7352 . -7) (undo-tree-id7353 . -7) (undo-tree-id7354 . -7) (undo-tree-id7355 . -40) (undo-tree-id7356 . -7) (undo-tree-id7357 . -7) (undo-tree-id7358 . -7) (undo-tree-id7359 . -7) (undo-tree-id7360 . -7) (undo-tree-id7361 . -7) (undo-tree-id7362 . -7) (undo-tree-id7363 . -7) (undo-tree-id7364 . -7) (undo-tree-id7365 . -7) (undo-tree-id7366 . -7) (undo-tree-id7367 . -7) (undo-tree-id7368 . -7) (undo-tree-id7369 . -7) (undo-tree-id7370 . -7) (undo-tree-id7371 . -7) (undo-tree-id7372 . -7) (undo-tree-id7373 . -7) (undo-tree-id7374 . -41) (undo-tree-id7375 . -41) 10905 (t 26619 21688 880014 434000)) nil (26619 21744 116313 0) 0 nil] [nil nil ((10956 . 10957) (#("4" 0 1 (fontified t)) . 10956) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (t 26619 21688 880014 434000)) ((10956 . 10957) (#("3" 0 1 (fontified t)) . 10956)) (26619 21730 513353 0) 0 nil])
([nil nil ((#("  rounded corners,
" 0 19 (fontified t)) . 10871) (undo-tree-id7376 . -18) (undo-tree-id7377 . -19) (undo-tree-id7378 . -19) (undo-tree-id7379 . -19) (undo-tree-id7380 . -19) (undo-tree-id7381 . -19) (undo-tree-id7382 . -19) (undo-tree-id7383 . -19) (undo-tree-id7384 . -19) (undo-tree-id7385 . -19) (undo-tree-id7386 . -19) (undo-tree-id7387 . -19) (t 26619 21744 155288 664000)) nil (26619 21759 963511 0) 0 nil])
nil
([nil nil ((#("  draw,
" 0 8 (fontified t)) . 10871) (undo-tree-id7388 . -7) (undo-tree-id7389 . -7) (undo-tree-id7390 . -7) (undo-tree-id7391 . -7) (undo-tree-id7392 . -7) (undo-tree-id7393 . -7) (undo-tree-id7394 . -8) (undo-tree-id7395 . -8) (undo-tree-id7396 . -7) (undo-tree-id7397 . -7) (undo-tree-id7398 . -7) (undo-tree-id7399 . -7) (undo-tree-id7400 . -7) (undo-tree-id7401 . -7) (undo-tree-id7402 . -7) (undo-tree-id7403 . -7) (undo-tree-id7404 . -7) (undo-tree-id7405 . -7) (undo-tree-id7406 . -7) (undo-tree-id7407 . -7) (undo-tree-id7408 . -7) (undo-tree-id7409 . -7) (undo-tree-id7410 . -7) (undo-tree-id7411 . -7) (undo-tree-id7412 . -7) (undo-tree-id7413 . -7) (undo-tree-id7414 . -7) (undo-tree-id7415 . -7) (undo-tree-id7416 . -7) (undo-tree-id7417 . -7) (undo-tree-id7418 . -8) (undo-tree-id7419 . -8) 10878 (t 26619 21760 3803 786000)) nil (26619 21923 313659 0) 0 nil])
([nil nil ((10872 . 10873) (t 26619 21797 802597 116000) 10871) nil (26619 21928 378833 0) 0 nil] [nil nil ((10872 . 10873) (t 26619 21797 802597 116000) 10871) ((#("
" 0 1 (fontified t)) . 10872) (undo-tree-id7420 . -1)) (26619 21923 313382 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10996 . 10997) (nil fontified nil 10873 . 10997) (10873 . 10997)) nil (26619 21928 378830 0) 0 nil])
nil
([nil nil ((10997 . 11002) (#("
[fib" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 5 (fontified t)) . 10997)) nil (26619 21928 378824 0) 0 nil])
([nil nil ((#("[Fib(5)
  [fib(4)
    [fib(3)
      [fib(2)]
      [fib(1)]
    ]
    [fib(2)]
  ]
  [fib(3)
    [fib(2)]
    [fib(1)]
  ]
]
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (fontified t) 8 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-2-face) fontified t) 11 15 (fontified t) 15 16 (fontified t) 16 18 (fontified t) 18 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-3-face) fontified t) 23 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-4-face) fontified t) 37 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-4-face) fontified t) 44 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-4-face) fontified t) 52 58 (fontified t) 58 59 (face (rainbow-delimiters-depth-4-face) fontified t) 59 64 (fontified t) 64 65 (face (rainbow-delimiters-depth-3-face) fontified t) 65 70 (fontified t) 70 71 (face (rainbow-delimiters-depth-3-face) fontified t) 71 77 (fontified t) 77 78 (face (rainbow-delimiters-depth-3-face) fontified t) 78 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 85 (fontified t) 85 86 (face (rainbow-delimiters-depth-2-face) fontified t) 86 97 (fontified t) 97 98 (face (rainbow-delimiters-depth-3-face) fontified t) 98 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-3-face) fontified t) 105 110 (fontified t) 110 111 (face (rainbow-delimiters-depth-3-face) fontified t) 111 117 (fontified t) 117 118 (face (rainbow-delimiters-depth-3-face) fontified t) 118 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-2-face) fontified t) 122 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-1-face) fontified t) 124 125 (fontified t)) . 10998) (undo-tree-id7421 . -124) (undo-tree-id7422 . -124) (undo-tree-id7423 . -4) (undo-tree-id7424 . -124) (undo-tree-id7425 . -124) (undo-tree-id7426 . -124) (undo-tree-id7427 . -90) (undo-tree-id7428 . -4) (undo-tree-id7429 . -4) (undo-tree-id7430 . -4) (undo-tree-id7431 . -4) (undo-tree-id7432 . -4) (undo-tree-id7433 . -4) (undo-tree-id7434 . -4) (undo-tree-id7435 . -4) (undo-tree-id7436 . -4) (undo-tree-id7437 . -4) (undo-tree-id7438 . -4) (undo-tree-id7439 . -4) (undo-tree-id7440 . -5) (undo-tree-id7441 . -4) (undo-tree-id7442 . -4) (undo-tree-id7443 . -4) (undo-tree-id7444 . -4) (undo-tree-id7445 . -4) (undo-tree-id7446 . -4) (undo-tree-id7447 . -4) (undo-tree-id7448 . -4) (undo-tree-id7449 . -4) (undo-tree-id7450 . -4) (undo-tree-id7451 . -4) (undo-tree-id7452 . -124) (undo-tree-id7453 . -4) (undo-tree-id7454 . -4) (undo-tree-id7455 . -4) (undo-tree-id7456 . -4) (undo-tree-id7457 . -4) (undo-tree-id7458 . -4) (undo-tree-id7459 . -4) (undo-tree-id7460 . -5) (undo-tree-id7461 . -4) (undo-tree-id7462 . -4) (undo-tree-id7463 . -4) (undo-tree-id7464 . -4) (undo-tree-id7465 . -12) (undo-tree-id7466 . -12) (undo-tree-id7467 . -12) (undo-tree-id7468 . -12) (undo-tree-id7469 . -22) (undo-tree-id7470 . -22) (undo-tree-id7471 . -22) (undo-tree-id7472 . -22) (undo-tree-id7473 . -34) (undo-tree-id7474 . -49) (undo-tree-id7475 . -49) (undo-tree-id7476 . -49) (undo-tree-id7477 . -49) (undo-tree-id7478 . -64) (undo-tree-id7479 . -64) (undo-tree-id7480 . -64) (undo-tree-id7481 . -64) (undo-tree-id7482 . -70) (undo-tree-id7483 . -70) (undo-tree-id7484 . -70) (undo-tree-id7485 . -70) (undo-tree-id7486 . -82) (undo-tree-id7487 . -82) (undo-tree-id7488 . -82) (undo-tree-id7489 . -82) (undo-tree-id7490 . -87) (undo-tree-id7491 . -87) (undo-tree-id7492 . -87) (undo-tree-id7493 . -87) (undo-tree-id7494 . -87) (undo-tree-id7495 . -87) (undo-tree-id7496 . -87) (undo-tree-id7497 . -97) (undo-tree-id7498 . -97) (undo-tree-id7499 . -97) (undo-tree-id7500 . -97) (undo-tree-id7501 . -110) (undo-tree-id7502 . -110) (undo-tree-id7503 . -110) (undo-tree-id7504 . -110) (undo-tree-id7505 . -122) (undo-tree-id7506 . -122) (undo-tree-id7507 . -122) (undo-tree-id7508 . -122) (undo-tree-id7509 . -123) (undo-tree-id7510 . -124) (undo-tree-id7511 . -124) (undo-tree-id7512 . -124) (undo-tree-id7513 . -123) (undo-tree-id7514 . -124) (undo-tree-id7515 . -123) (undo-tree-id7516 . -124) (undo-tree-id7517 . -123) (undo-tree-id7518 . -124) (undo-tree-id7519 . -123) (undo-tree-id7520 . -124) (undo-tree-id7521 . -123) (undo-tree-id7522 . -124) (undo-tree-id7523 . -123) (undo-tree-id7524 . -124) (undo-tree-id7525 . -123) (undo-tree-id7526 . -124) (undo-tree-id7527 . -121) (undo-tree-id7528 . -122) (undo-tree-id7529 . -117) (undo-tree-id7530 . -118) (undo-tree-id7531 . -110) (undo-tree-id7532 . -111) (undo-tree-id7533 . -104) (undo-tree-id7534 . -105) (undo-tree-id7535 . -97) (undo-tree-id7536 . -98) (undo-tree-id7537 . -85) (undo-tree-id7538 . -86) (undo-tree-id7539 . -81) (undo-tree-id7540 . -82) (undo-tree-id7541 . -77) (undo-tree-id7542 . -78) (undo-tree-id7543 . -70) (undo-tree-id7544 . -71) (undo-tree-id7545 . -64) (undo-tree-id7546 . -65) (undo-tree-id7547 . -58) (undo-tree-id7548 . -59) (undo-tree-id7549 . -51) (undo-tree-id7550 . -52) (undo-tree-id7551 . -43) (undo-tree-id7552 . -44) (undo-tree-id7553 . -36) (undo-tree-id7554 . -37) (undo-tree-id7555 . -22) (undo-tree-id7556 . -23) (undo-tree-id7557 . -10) (undo-tree-id7558 . -11) (undo-tree-id7559 . -1) (undo-tree-id7560 . -124) (undo-tree-id7561 . -124) (undo-tree-id7562 . -124) (undo-tree-id7563 . -124) (undo-tree-id7564 . -124) (undo-tree-id7565 . -125) (undo-tree-id7566 . -125) 11122 (t 26619 21928 419209 576000)) nil (26619 21937 882058 0) 0 nil])
([nil nil (10039) nil (26619 21988 409580 0) 0 nil])
([nil nil ((10095 . 10100) (#("/" 0 1 (face (font-lock-variable-name-face) fontified t)) . -10095) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) 10096 (10095 . 10096)) nil (26619 21997 839799 0) 0 nil] [nil nil ((apply -2 10039 10138 undo--wrap-and-run-primitive-undo 10039 10138 ((10119 . 10120) nil (10063 . 10064))) (10039 . 10040) (t 26619 21937 922568 936000)) ((#("%" 0 1 (face font-lock-comment-delimiter-face fontified nil)) . 10039) (apply 2 10039 10136 undo--wrap-and-run-primitive-undo 10039 10136 ((#("%" 0 1 (face font-lock-comment-face fontified t)) . 10063) (#("%" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 10119) 10062))) (26619 21979 91547 0) 0 nil])
([nil nil ((10098 . 10099) (#("7" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10098) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (t 26619 21997 880504 143000)) nil (26619 22005 987887 0) 0 nil])
nil
([nil nil ((10084 . 10088) (#(" " 0 1 (face (font-lock-variable-name-face) fontified t)) . -10084) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) 10085 (10079 . 10085) (#("wscale" 0 6 (face (font-lock-variable-name-face) fontified t)) . -10079) (undo-tree-id7621 . -6) (undo-tree-id7622 . -6) (undo-tree-id7623 . -6) 10085 (10079 . 10085) (#("wid" 0 3 (face (font-lock-variable-name-face) fontified t)) . 10079) (undo-tree-id7624 . -2) (undo-tree-id7625 . -2) (undo-tree-id7626 . -2) (t 26619 22006 29119 803000)) nil (26619 22029 351182 0) 0 nil])
([nil nil ((#("t" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7616 . 1) (undo-tree-id7617 . 1)) nil (26619 22029 351160 0) 0 nil])
([nil nil ((#("h" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7614 . 1) (undo-tree-id7615 . 1)) nil (26619 22029 351155 0) 0 nil])
([nil nil ((#("=" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7612 . 1) (undo-tree-id7613 . 1)) nil (26619 22029 351150 0) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-variable-name-face font-latex-sedate-face) fontified t)) . 10088) (undo-tree-id7610 . 1) (undo-tree-id7611 . 1)) nil (26619 22029 351144 0) 0 nil])
([nil nil ((#("l" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7608 . 1) (undo-tree-id7609 . 1)) nil (26619 22029 351138 0) 0 nil])
([nil nil ((#("i" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7606 . 1) (undo-tree-id7607 . 1)) nil (26619 22029 351133 0) 0 nil])
([nil nil ((#("n" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7604 . 1) (undo-tree-id7605 . 1)) nil (26619 22029 351128 0) 0 nil])
([nil nil ((#("e" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7602 . 1) (undo-tree-id7603 . 1)) nil (26619 22029 351122 0) 0 nil])
([nil nil ((#("w" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7600 . 1) (undo-tree-id7601 . 1)) nil (26619 22029 351117 0) 0 nil])
([nil nil ((#("i" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7598 . 1) (undo-tree-id7599 . 1)) nil (26619 22029 351112 0) 0 nil])
([nil nil ((#("d" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7596 . 1) (undo-tree-id7597 . 1)) nil (26619 22029 351105 0) 0 nil])
([nil nil ((#("t" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7594 . 1) (undo-tree-id7595 . 1)) nil (26619 22029 351100 0) 0 nil])
([nil nil ((#("h" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7592 . 1) (undo-tree-id7593 . 1)) nil (26619 22029 351094 0) 0 nil])
([nil nil ((#("*" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7590 . 1) (undo-tree-id7591 . 1)) nil (26619 22029 351089 0) 0 nil])
([nil nil ((#("0" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7588 . 1) (undo-tree-id7589 . 1)) nil (26619 22029 351083 0) 0 nil])
([nil nil ((#("." 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7584 . 1) (undo-tree-id7585 . 1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1)) nil (26619 22029 351073 0) 0 nil])
([nil nil ((#("5" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7582 . 1) (undo-tree-id7583 . 1)) nil (26619 22029 351063 0) 0 nil])
([nil nil ((#("5" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7580 . 1) (undo-tree-id7581 . 1)) nil (26619 22029 351051 0) 0 nil])
([nil nil ((#("5" 0 1 (face (font-lock-variable-name-face) fontified t)) . 10088) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (10087 . 10088) (t 26619 22029 393342 454000)) nil (26619 22044 433691 0) 0 nil])
([nil nil ((10087 . 10088) (t 26619 22044 475915 335000)) nil (26619 22053 457865 0) 0 nil])
([nil nil ((#("\\begin{marginfigure}
  \\includegraphics[scale=0.01]{exploding-head.png}
\\end{marginfigure}
" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 19 (face (font-lock-function-name-face) fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (fontified t) 21 23 (fontified t) 23 39 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 50 (face (font-lock-variable-name-face) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 70 (face (font-lock-constant-face) fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t) 72 73 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 73 76 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 76 77 (face (rainbow-delimiters-depth-1-face) fontified t) 77 89 (face (font-lock-function-name-face) fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 91 (fontified t)) . 10039) (undo-tree-id7705 . -90) (undo-tree-id7706 . 42) (undo-tree-id7707 . -18) (undo-tree-id7708 . -21) (undo-tree-id7709 . -90) (undo-tree-id7710 . -18) (undo-tree-id7711 . -90) (undo-tree-id7712 . -18) (undo-tree-id7713 . -90) (undo-tree-id7714 . -18) (undo-tree-id7715 . -91) (undo-tree-id7716 . -22) (undo-tree-id7717 . -22) (undo-tree-id7718 . -50) (undo-tree-id7719 . -50) (undo-tree-id7720 . -49) (undo-tree-id7721 . -49) (undo-tree-id7722 . -49) (undo-tree-id7723 . -49) (undo-tree-id7724 . -49) (undo-tree-id7725 . -49) (undo-tree-id7726 . -49) (undo-tree-id7727 . -49) (undo-tree-id7728 . -49) (undo-tree-id7729 . -49) (undo-tree-id7730 . -49) (undo-tree-id7731 . -49) (undo-tree-id7732 . -49) (undo-tree-id7733 . -49) (undo-tree-id7734 . -49) (undo-tree-id7735 . -49) (undo-tree-id7736 . -49) (undo-tree-id7737 . -49) (undo-tree-id7738 . -49) (undo-tree-id7739 . -49) (undo-tree-id7740 . -49) (undo-tree-id7741 . -49) (undo-tree-id7742 . -49) (undo-tree-id7743 . -49) (undo-tree-id7744 . -49) (undo-tree-id7745 . -49) (undo-tree-id7746 . -49) (undo-tree-id7747 . -49) (undo-tree-id7748 . -49) (undo-tree-id7749 . -49) (undo-tree-id7750 . -49) (undo-tree-id7751 . -49) (undo-tree-id7752 . -49) (undo-tree-id7753 . -49) (undo-tree-id7754 . -49) (undo-tree-id7755 . -49) (undo-tree-id7756 . -49) (undo-tree-id7757 . -49) (undo-tree-id7758 . -49) (undo-tree-id7759 . -49) (undo-tree-id7760 . -18) (undo-tree-id7761 . -49) (undo-tree-id7762 . -49) (undo-tree-id7763 . -49) (undo-tree-id7764 . -49) (undo-tree-id7765 . -49) (undo-tree-id7766 . -49) (undo-tree-id7767 . -49) (undo-tree-id7768 . -49) (undo-tree-id7769 . -49) (undo-tree-id7770 . -49) (undo-tree-id7771 . -49) (undo-tree-id7772 . -49) (undo-tree-id7773 . -49) (undo-tree-id7774 . -49) (undo-tree-id7775 . -49) (undo-tree-id7776 . -49) (undo-tree-id7777 . -49) (undo-tree-id7778 . -49) (undo-tree-id7779 . -49) (undo-tree-id7780 . -49) (undo-tree-id7781 . -49) (undo-tree-id7782 . -49) (undo-tree-id7783 . -49) (undo-tree-id7784 . -49) (undo-tree-id7785 . -49) (undo-tree-id7786 . -20) (undo-tree-id7787 . -20) (undo-tree-id7788 . -20) (undo-tree-id7789 . -19) (undo-tree-id7790 . -20) (undo-tree-id7791 . -19) (undo-tree-id7792 . -20) (undo-tree-id7793 . -19) (undo-tree-id7794 . -20) (undo-tree-id7795 . -19) (undo-tree-id7796 . -20) (undo-tree-id7797 . -19) (undo-tree-id7798 . -20) (undo-tree-id7799 . -19) (undo-tree-id7800 . -20) (undo-tree-id7801 . -19) (undo-tree-id7802 . -20) (undo-tree-id7803 . -6) (undo-tree-id7804 . -7) (undo-tree-id7805 . -6) (undo-tree-id7806 . -5) (undo-tree-id7807 . -6) (undo-tree-id7808 . -20) (undo-tree-id7809 . -20) (undo-tree-id7810 . -20) (undo-tree-id7811 . -20) (undo-tree-id7812 . -20) (undo-tree-id7813 . -20) (undo-tree-id7814 . -20) (undo-tree-id7815 . -20) (undo-tree-id7816 . -41) (undo-tree-id7817 . -41) (undo-tree-id7818 . -41) (undo-tree-id7819 . -41) (undo-tree-id7820 . -41) (undo-tree-id7821 . -41) (undo-tree-id7822 . -41) (undo-tree-id7823 . -90) (undo-tree-id7824 . -90) (undo-tree-id7825 . -90) (undo-tree-id7826 . -89) (undo-tree-id7827 . -90) (undo-tree-id7828 . -89) (undo-tree-id7829 . -90) (undo-tree-id7830 . -89) (undo-tree-id7831 . -90) (undo-tree-id7832 . -89) (undo-tree-id7833 . -90) (undo-tree-id7834 . -89) (undo-tree-id7835 . -90) (undo-tree-id7836 . -89) (undo-tree-id7837 . -90) (undo-tree-id7838 . -89) (undo-tree-id7839 . -90) (undo-tree-id7840 . -76) (undo-tree-id7841 . -77) (undo-tree-id7842 . -72) (undo-tree-id7843 . -76) (undo-tree-id7844 . -75) (undo-tree-id7845 . -76) (undo-tree-id7846 . -90) (undo-tree-id7847 . -90) (undo-tree-id7848 . -90) (undo-tree-id7849 . -90) (undo-tree-id7850 . -20) (undo-tree-id7851 . -90) (undo-tree-id7852 . -90) (undo-tree-id7853 . -90) (undo-tree-id7854 . -90) (undo-tree-id7855 . -89) (undo-tree-id7856 . -90) (undo-tree-id7857 . -89) (undo-tree-id7858 . -90) (undo-tree-id7859 . -89) (undo-tree-id7860 . -90) (undo-tree-id7861 . -89) (undo-tree-id7862 . -90) (undo-tree-id7863 . -89) (undo-tree-id7864 . -90) (undo-tree-id7865 . -89) (undo-tree-id7866 . -90) (undo-tree-id7867 . -89) (undo-tree-id7868 . -90) (undo-tree-id7869 . -76) (undo-tree-id7870 . -77) (undo-tree-id7871 . -72) (undo-tree-id7872 . -76) (undo-tree-id7873 . -75) (undo-tree-id7874 . -76) (undo-tree-id7875 . -90) (undo-tree-id7876 . -90) (undo-tree-id7877 . -90) (undo-tree-id7878 . -90) (undo-tree-id7879 . -90) (undo-tree-id7880 . -90) (undo-tree-id7881 . -90) (undo-tree-id7882 . -89) (undo-tree-id7883 . -90) (undo-tree-id7884 . -89) (undo-tree-id7885 . -90) (undo-tree-id7886 . -89) (undo-tree-id7887 . -90) (undo-tree-id7888 . -89) (undo-tree-id7889 . -90) (undo-tree-id7890 . -89) (undo-tree-id7891 . -90) (undo-tree-id7892 . -89) (undo-tree-id7893 . -90) (undo-tree-id7894 . -89) (undo-tree-id7895 . -90) (undo-tree-id7896 . -76) (undo-tree-id7897 . -77) (undo-tree-id7898 . -72) (undo-tree-id7899 . -76) (undo-tree-id7900 . -75) (undo-tree-id7901 . -76) (undo-tree-id7902 . -90) (undo-tree-id7903 . -90) (undo-tree-id7904 . -90) (undo-tree-id7905 . -90) (undo-tree-id7906 . -39) (undo-tree-id7907 . -39) (undo-tree-id7908 . -39) (undo-tree-id7909 . -39) (undo-tree-id7910 . -40) (undo-tree-id7911 . -39) (undo-tree-id7912 . -39) (undo-tree-id7913 . -39) (undo-tree-id7914 . -39) (undo-tree-id7915 . -18) (undo-tree-id7916 . -18) (undo-tree-id7917 . -18) (undo-tree-id7918 . -18) (undo-tree-id7919 . -18) (undo-tree-id7920 . -18) (undo-tree-id7921 . -18) (undo-tree-id7922 . -18) (undo-tree-id7923 . -91) 10057 (t 26619 22053 498597 679000)) nil (26619 22074 571677 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10350 . 10351) (#("
" 0 1 (fontified nil)) . -10441) (10350 . 10442)) nil (26619 22076 478503 0) 0 nil] [nil nil ((nil rear-nonsticky nil 10335 . 10336) (#("
" 0 1 (fontified nil)) . -10426) (10335 . 10427) 10269) ((#("
\\begin{marginfigure}
  \\includegraphics[scale=0.01]{exploding-head.png}
\\end{marginfigure}
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 7 8 (face (rainbow-delimiters-depth-1-face) fontified nil) 8 20 (face (font-lock-function-name-face) fontified nil) 20 21 (face (rainbow-delimiters-depth-1-face) fontified nil) 21 22 (fontified nil) 22 24 (fontified t) 24 40 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 51 (face (font-lock-variable-name-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 71 (face (font-lock-constant-face) fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 73 (fontified t) 73 74 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 74 77 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 77 78 (face (rainbow-delimiters-depth-1-face) fontified nil) 78 90 (face (font-lock-function-name-face) fontified nil) 90 91 (face (rainbow-delimiters-depth-1-face) fontified nil) 91 92 (fontified nil)) . 10335) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -91) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (10426 . 10427) (nil rear-nonsticky t 10335 . 10336)) (26619 22074 571009 0) 0 nil])
([nil nil ((#("\\begin{marginfigure}
  \\includegraphics[scale=0.01]{exploding-head.png}
\\end{marginfigure}
" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 19 (face (font-lock-function-name-face) fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (fontified t) 21 23 (fontified t) 23 39 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 50 (face (font-lock-variable-name-face) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 70 (face (font-lock-constant-face) fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t) 72 73 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 73 76 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 76 77 (face (rainbow-delimiters-depth-1-face) fontified t) 77 89 (face (font-lock-function-name-face) fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 91 (fontified t)) . 10351) (undo-tree-id7934 . -72) (undo-tree-id7935 . -72) (undo-tree-id7936 . -72) (undo-tree-id7937 . -90) (undo-tree-id7938 . -72) (undo-tree-id7939 . -72) (undo-tree-id7940 . -21) (undo-tree-id7941 . -21) (undo-tree-id7942 . -21) (undo-tree-id7943 . -21) (undo-tree-id7944 . -72) (undo-tree-id7945 . -72) (undo-tree-id7946 . -72) (undo-tree-id7947 . -72) (undo-tree-id7948 . -72) (undo-tree-id7949 . -72) (undo-tree-id7950 . -91) 10423 (t 26619 22076 521393 916000)) nil (26619 22147 932843 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 10038 . 10039) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -10471) (10038 . 10472) 10009) nil (26619 22160 350942 0) 0 nil] [nil nil ((10009 . 10442)) ((#("\\section{Dynamic Programming}
Dynamic programming (DP) is about reducing repeated computations. This
\\begin{marginfigure}
  \\includegraphics[scale=0.01]{exploding-head.png}
\\end{marginfigure}
is done by storing computations, and using them when needed. A classic
example of where DP can be applied is to the recursive implementation
of calculating the fibonacci sequence. Consider the definition of recursive function
\\code{fib(n)}:
" 0 8 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t) 9 28 (face (font-latex-sectioning-2-face) fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t) 30 50 (fontified t) 50 53 (fontified t) 53 54 (fontified t) 54 100 (fontified t) 100 101 (fontified t rear-nonsticky t) 101 107 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 107 108 (face (rainbow-delimiters-depth-1-face) fontified t) 108 120 (face (font-lock-function-name-face) fontified t) 120 121 (face (rainbow-delimiters-depth-1-face) fontified t) 121 122 (fontified t) 122 124 (fontified t) 124 140 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 140 141 (face (rainbow-delimiters-depth-1-face) fontified t) 141 151 (face (font-lock-variable-name-face) fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) fontified t) 152 153 (face (rainbow-delimiters-depth-1-face) fontified t) 153 171 (face (font-lock-constant-face) fontified t) 171 172 (face (rainbow-delimiters-depth-1-face) fontified t) 172 173 (fontified t) 173 174 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 174 177 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 177 178 (face (rainbow-delimiters-depth-1-face) fontified t) 178 190 (face (font-lock-function-name-face) fontified t) 190 191 (face (rainbow-delimiters-depth-1-face) fontified t) 191 192 (fontified t) 192 263 (fontified t) 263 333 (fontified t) 333 417 (fontified t) 417 418 (fontified t) 418 423 (face (font-latex-sedate-face) fontified t) 423 424 (face (rainbow-delimiters-depth-1-face) fontified t) 424 427 (fontified t) 427 429 (fontified t) 429 430 (fontified t) 430 431 (face (rainbow-delimiters-depth-1-face) fontified t) 431 432 (fontified t) 432 433 (fontified t rear-nonsticky t)) . 10009) (undo-tree-id8021 . -432)) (26619 22147 932690 0) 0 nil] [nil nil ((10009 . 10442)) ((#("\\section{Dynamic Programming}
Dynamic programming (DP) is about reducing repeated computations. This
\\begin{marginfigure}
  \\includegraphics[scale=0.01]{exploding-head.png}
\\end{marginfigure}
is done by storing computations, and using them when needed. A classic
example of where DP can be applied is to the recursive implementation
of calculating the fibonacci sequence. Consider the definition of recursive function
\\code{fib(n)}:
" 0 8 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t) 9 28 (face (font-latex-sectioning-2-face) fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t) 30 50 (fontified t) 50 53 (fontified t) 53 54 (fontified t) 54 100 (fontified t) 100 101 (fontified t rear-nonsticky t) 101 107 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 107 108 (face (rainbow-delimiters-depth-1-face) fontified t) 108 120 (face (font-lock-function-name-face) fontified t) 120 121 (face (rainbow-delimiters-depth-1-face) fontified t) 121 122 (fontified t) 122 124 (fontified t) 124 140 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 140 141 (face (rainbow-delimiters-depth-1-face) fontified t) 141 151 (face (font-lock-variable-name-face) fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) fontified t) 152 153 (face (rainbow-delimiters-depth-1-face) fontified t) 153 171 (face (font-lock-constant-face) fontified t) 171 172 (face (rainbow-delimiters-depth-1-face) fontified t) 172 173 (fontified t) 173 174 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 174 177 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 177 178 (face (rainbow-delimiters-depth-1-face) fontified t) 178 190 (face (font-lock-function-name-face) fontified t) 190 191 (face (rainbow-delimiters-depth-1-face) fontified t) 191 192 (fontified t) 192 263 (fontified t) 263 333 (fontified t) 333 417 (fontified t) 417 418 (fontified t) 418 423 (face (font-latex-sedate-face) fontified t) 423 424 (face (rainbow-delimiters-depth-1-face) fontified t) 424 427 (fontified t) 427 429 (fontified t) 429 430 (fontified t) 430 431 (face (rainbow-delimiters-depth-1-face) fontified t) 431 432 (fontified t) 432 433 (fontified t rear-nonsticky t)) . 10009) (undo-tree-id8020 . -432)) (26619 22144 788127 0) 0 nil] [nil nil ((nil rear-nonsticky nil 10109 . 10110) (#("
" 0 1 (fontified nil)) . -10200) (10109 . 10201) 10039) ((#("
\\begin{marginfigure}
  \\includegraphics[scale=0.01]{exploding-head.png}
\\end{marginfigure}
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 7 8 (face (rainbow-delimiters-depth-1-face) fontified nil) 8 20 (face (font-lock-function-name-face) fontified nil) 20 21 (face (rainbow-delimiters-depth-1-face) fontified nil) 21 22 (fontified nil) 22 24 (fontified t) 24 40 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 51 (face (font-lock-variable-name-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 71 (face (font-lock-constant-face) fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 73 (fontified t) 73 74 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 74 77 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 77 78 (face (rainbow-delimiters-depth-1-face) fontified nil) 78 90 (face (font-lock-function-name-face) fontified nil) 90 91 (face (rainbow-delimiters-depth-1-face) fontified nil) 91 92 (fontified nil)) . 10109) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -22) (undo-tree-id8016 . -73) (undo-tree-id8017 . -73) (undo-tree-id8018 . -73) (undo-tree-id8019 . -73) (10200 . 10201) (nil rear-nonsticky t 10109 . 10110) (t 26619 22090 501139 373000)) (26619 22090 458890 0) 0 nil])
([nil nil ((#("\\section{Dynamic Programming}
" 0 8 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t) 9 28 (face (font-latex-sectioning-2-face) fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t)) . 10039) (undo-tree-id8026 . -29) (undo-tree-id8027 . -30) (undo-tree-id8028 . -30)) nil (26619 22160 350939 0) 0 nil])
nil
nil
nil
([nil nil ((#("Dynamic programming (DP) is about reducing repeated computations. This
" 0 20 (fontified t) 20 23 (fontified t) 23 24 (fontified t) 24 70 (fontified t) 70 71 (fontified t rear-nonsticky t)) . 10039) (undo-tree-id8024 . -70) (undo-tree-id8025 . -71)) nil (26619 22160 350932 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10129 . 10130) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -10200) (10129 . 10201) 10111) nil (26619 22160 350925 0) 0 nil])
([nil nil ((10060 . 10061) (10059 . 10061) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -10059) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (10059 . 10060)) nil (26619 22160 350919 0) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . 10060) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (t 26619 22160 394425 239000)) nil (26619 22175 649406 0) 0 nil])
([nil nil ((10060 . 10061)) nil (26619 22175 649241 0) 0 nil])
([nil nil ((10061 . 10065) (t 26619 22175 688787 166000)) nil (26619 22177 742574 0) 0 nil])
([nil nil ((10039 . 10040) 10066 (t 26619 22177 786885 810000)) nil (26619 22314 700706 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10110 . 10111) (nil fontified nil 10039 . 10111) (10039 . 10111)) nil (26619 22314 700703 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10111) (undo-tree-id8108 . 1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1)) nil (26619 22314 700699 0) 0 nil])
([nil nil (10111) nil (26619 22314 700681 0) 0 nil])
([nil nil ((apply -2 10111 10211 undo--wrap-and-run-primitive-undo 10111 10211 ((10192 . 10193) nil (10142 . 10143))) (10111 . 10112)) nil (26619 22314 700675 0) 0 nil])
([nil nil ((#("Dynamic programming (DP) is about reducing repeated computations. This
is done by storing computations, and using them when needed. A classic
example of where DP can be applied is to the recursive implementation
of calculating the fibonacci sequence. Consider the definition of recursive function
\\code{fib(n)}:
" 0 20 (fontified t) 20 23 (fontified t) 23 24 (fontified t) 24 70 (fontified t) 70 71 (fontified t) 71 142 (fontified t) 142 212 (fontified t) 212 296 (fontified t) 296 297 (fontified t) 297 302 (face (font-latex-sedate-face) fontified t) 302 303 (face (rainbow-delimiters-depth-1-face) fontified t) 303 306 (fontified t) 306 308 (fontified t) 308 309 (fontified t) 309 310 (face (rainbow-delimiters-depth-1-face) fontified t) 310 311 (fontified t) 311 312 (fontified t)) . 10212) (undo-tree-id8111 . -311) (undo-tree-id8112 . -311) (undo-tree-id8113 . -312) (undo-tree-id8114 . -54) (undo-tree-id8115 . -311) (undo-tree-id8116 . -311) (undo-tree-id8117 . -311) (undo-tree-id8118 . -312) (undo-tree-id8119 . -312) (undo-tree-id8120 . -311) (undo-tree-id8121 . -196) (undo-tree-id8122 . -196) (undo-tree-id8123 . -196) (undo-tree-id8124 . -196) (undo-tree-id8125 . -196) (undo-tree-id8126 . -196) (undo-tree-id8127 . -196) (undo-tree-id8128 . -196) (undo-tree-id8129 . -196) (undo-tree-id8130 . -196) (undo-tree-id8131 . -196) (undo-tree-id8132 . -196) (undo-tree-id8133 . -196) (undo-tree-id8134 . -196) (undo-tree-id8135 . -196) (undo-tree-id8136 . -196) (undo-tree-id8137 . -196) (undo-tree-id8138 . -196) (undo-tree-id8139 . -196) (undo-tree-id8140 . -196) (undo-tree-id8141 . -196) (undo-tree-id8142 . -196) (undo-tree-id8143 . -196) (undo-tree-id8144 . -196) (undo-tree-id8145 . -196) (undo-tree-id8146 . -196) (undo-tree-id8147 . -125) (undo-tree-id8148 . -125) (undo-tree-id8149 . -125) (undo-tree-id8150 . -125) (undo-tree-id8151 . -54) (undo-tree-id8152 . -54) (undo-tree-id8153 . -54) (undo-tree-id8154 . -54) (undo-tree-id8155 . -54) (undo-tree-id8156 . -54) (undo-tree-id8157 . -54) (undo-tree-id8158 . -54) (undo-tree-id8159 . -125) (undo-tree-id8160 . -125) (undo-tree-id8161 . -125) (undo-tree-id8162 . -125) (undo-tree-id8163 . -196) (undo-tree-id8164 . -196) (undo-tree-id8165 . -196) (undo-tree-id8166 . -196) (undo-tree-id8167 . -266) (undo-tree-id8168 . -266) (undo-tree-id8169 . -266) (undo-tree-id8170 . -266) (undo-tree-id8171 . -297) (undo-tree-id8172 . -311) (undo-tree-id8173 . -311) (undo-tree-id8174 . -311) (undo-tree-id8175 . -311) (undo-tree-id8176 . -311) (undo-tree-id8177 . -312) (undo-tree-id8178 . -312) 10523 (t 26619 22314 738937 74000)) nil (26619 22347 126603 0) 0 nil])
([nil nil ((10781 . 10782) (#(")" 0 1 (face font-latex-math-face fontified nil)) . -10781) (#(")" 0 1 (face font-latex-math-face fontified nil)) . 10782) (10780 . 10782) (10779 . 10781) (#("(" 0 1 (face font-latex-math-face fontified nil)) . -10779) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (10779 . 10780) (10776 . 10779) (#("(" 0 1 (face font-latex-math-face fontified nil)) . -10776) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (#(")" 0 1 (face font-latex-math-face fontified t)) . 10777) (#("f" 0 1 (face font-latex-math-face fontified t)) . -10777) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (#("i" 0 1 (face font-latex-math-face fontified t)) . -10778) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) 10779 (10777 . 10779) (10776 . 10778) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face font-latex-math-face) fontified nil)) . -10776) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (10776 . 10777) (10775 . 10777) (#("{" 0 1 (face (font-latex-math-face font-latex-sedate-face) fontified nil)) . -10775) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (10775 . 10776) (10771 . 10775) (10770 . 10771) (#("$" 0 1 (fontified nil)) . 10771) (10769 . 10771) (#("$" 0 1 (fontified nil)) . -10769) (10769 . 10771) (#("$" 0 1 (fontified nil)) . -10769) (10769 . 10770) (#("I" 0 1 (fontified t)) . -10769) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) 10770 (10769 . 10770) (#("S" 0 1 (fontified t)) . -10769) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (#("o" 0 1 (fontified t)) . -10770) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (#(" " 0 1 (fontified t)) . -10771) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) 10772 (#(" " 0 1 (fontified nil)) . 10754) (10753 . 10754) (10768 . 10772) (t 26619 22347 170206 507000)) nil (26619 22730 153171 0) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -10800) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) 10801 (10800 . 10801) (#("]" 0 1 (fontified nil)) . -10800) (10800 . 10801) (#("]" 0 1 (fontified nil)) . -10800) (10799 . 10801) (10798 . 10800) (#("{" 0 1 (fontified nil)) . -10798) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (10798 . 10799) (#(")" 0 1 (fontified t)) . -10798) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) 10799 (10798 . 10799) (#(")" 0 1 (fontified nil)) . -10798) (10798 . 10799) (#(")" 0 1 (fontified nil)) . -10798) (10795 . 10799) (10794 . 10796) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -10794) (10794 . 10795) (10790 . 10794) (10789 . 10790) (10784 . 10789)) nil (26619 22730 153032 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face fontified t)) . 10783) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1)) nil (26619 22730 152944 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 10769) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1)) nil (26619 22730 152910 0) 0 nil])
([nil nil ((10800 . 10801)) nil (26619 22730 152893 0) 0 nil])
([nil nil ((10801 . 10818)) nil (26619 22730 152891 0) 0 nil])
([nil nil ((10818 . 10823)) nil (26619 22730 152889 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -10818) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (#("a" 0 1 (fontified t)) . -10819) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (#("m" 0 1 (fontified t)) . -10820) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (#("p" 0 1 (fontified t)) . -10821) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (#("l" 0 1 (fontified t)) . -10822) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) 10823) nil (26619 22730 152886 0) 0 nil])
([nil nil ((10828 . 10839) (#(" " 0 1 (fontified nil)) . 10819) (10818 . 10819) (10818 . 10828)) nil (26619 22730 152857 0) 0 nil])
([nil nil ((10839 . 10854)) nil (26619 22730 152855 0) 0 nil])
([nil nil ((10854 . 10869)) nil (26619 22730 152853 0) 0 nil])
([nil nil ((10869 . 10870)) nil (26619 22730 152851 0) 0 nil])
([nil nil ((10870 . 10877)) nil (26619 22730 152850 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10873) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (#("a" 0 1 (fontified t)) . -10874) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (#("c" 0 1 (fontified t)) . -10875) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (#("c" 0 1 (fontified t)) . -10876) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) 10877) nil (26619 22730 152847 0) 0 nil])
([nil nil ((10873 . 10888)) nil (26619 22730 152824 0) 0 nil])
([nil nil ((10888 . 10890)) nil (26619 22730 152823 0) 0 nil])
([nil nil ((10891 . 10897) (#(" " 0 1 (fontified nil)) . 10871) (10870 . 10871) (10890 . 10891)) nil (26619 22730 152821 0) 0 nil])
([nil nil ((10897 . 10918)) nil (26619 22730 152818 0) 0 nil])
([nil nil ((10918 . 10929)) nil (26619 22730 152816 0) 0 nil])
([nil nil ((10929 . 10930)) nil (26619 22730 152814 0) 0 nil])
([nil nil ((#("so " 0 3 (fontified t)) . -10927) (undo-tree-id8233 . -3) (undo-tree-id8234 . -3) (undo-tree-id8235 . -3) (undo-tree-id8236 . -3) 10930) nil (26619 22730 152812 0) 0 nil])
([nil nil ((#("list " 0 5 (fontified t)) . -10922) (undo-tree-id8230 . -5) (undo-tree-id8231 . -5) (undo-tree-id8232 . -5) 10927) nil (26619 22730 152799 0) 0 nil])
([nil nil ((#("a " 0 2 (fontified t)) . -10920) (undo-tree-id8227 . -2) (undo-tree-id8228 . -2) (undo-tree-id8229 . -2) 10922) nil (26619 22730 152792 0) 0 nil])
([nil nil ((#("in " 0 3 (fontified t)) . -10917) (undo-tree-id8224 . -3) (undo-tree-id8225 . -3) (undo-tree-id8226 . -3) 10920) nil (26619 22730 152785 0) 0 nil])
([nil nil ((#("results " 0 8 (fontified t)) . -10909) (undo-tree-id8221 . -8) (undo-tree-id8222 . -8) (undo-tree-id8223 . -8) 10917) nil (26619 22730 152777 0) 0 nil])
([nil nil ((#("computation " 0 12 (fontified t)) . -10897) (undo-tree-id8218 . -12) (undo-tree-id8219 . -12) (undo-tree-id8220 . -12) 10909) nil (26619 22730 152770 0) 0 nil])
([nil nil ((#("store " 0 6 (fontified t)) . -10891) (undo-tree-id8215 . -6) (undo-tree-id8216 . -6) (undo-tree-id8217 . -6) 10897) nil (26619 22730 152763 0) 0 nil])
([nil nil ((10891 . 10908)) nil (26619 22730 152756 0) 0 nil])
([nil nil ((10908 . 10910)) nil (26619 22730 152754 0) 0 nil])
([nil nil ((10910 . 10912)) nil (26619 22730 152753 0) 0 nil])
([nil nil ((#("we've " 0 2 (fontified t) 2 3 (fontified t) 3 6 (fontified t)) . -10906) (undo-tree-id8212 . -6) (undo-tree-id8213 . -6) (undo-tree-id8214 . -6) 10912) nil (26619 22730 152751 0) 0 nil])
([nil nil ((#("if " 0 3 (fontified t)) . -10903) (undo-tree-id8209 . -3) (undo-tree-id8210 . -3) (undo-tree-id8211 . -3) 10906) nil (26619 22730 152743 0) 0 nil])
([nil nil ((#("check " 0 6 (fontified t)) . -10897) (undo-tree-id8206 . -6) (undo-tree-id8207 . -6) (undo-tree-id8208 . -6) 10903) nil (26619 22730 152736 0) 0 nil])
([nil nil ((#("first " 0 6 (fontified t)) . -10891) (undo-tree-id8203 . -6) (undo-tree-id8204 . -6) (undo-tree-id8205 . -6) 10897) nil (26619 22730 152729 0) 0 nil])
([nil nil ((10891 . 10911)) nil (26619 22730 152722 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -10910) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) 10911) nil (26619 22730 152720 0) 0 nil])
([nil nil ((10910 . 10931)) nil (26619 22730 152713 0) 0 nil])
([nil nil ((10943 . 10952) (#(" " 0 1 (fontified nil)) . 10939) (10938 . 10939) (10931 . 10943)) nil (26619 22730 152711 0) 0 nil])
([nil nil ((10952 . 10955)) nil (26619 22730 152708 0) 0 nil])
([nil nil ((10955 . 10958)) nil (26619 22730 152706 0) 0 nil])
([nil nil ((10958 . 10960)) nil (26619 22730 152705 0) 0 nil])
([nil nil ((10960 . 10981)) nil (26619 22730 152703 0) 0 nil])
([nil nil ((10981 . 10984)) nil (26619 22730 152701 0) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -10980) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (#(" " 0 1 (fontified t)) . -10981) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (#("w" 0 1 (fontified t)) . -10982) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (#("e" 0 1 (fontified t)) . -10983) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) 10984) nil (26619 22730 152698 0) 0 nil])
([nil nil ((10980 . 10990)) nil (26619 22730 152669 0) 0 nil])
([nil nil ((10990 . 10991)) nil (26619 22730 152667 0) 0 nil])
([nil nil ((10991 . 10995)) nil (26619 22730 152666 0) 0 nil])
([nil nil ((#("we " 0 3 (fontified t)) . -10992) (undo-tree-id8185 . -3) (undo-tree-id8186 . -3) (undo-tree-id8187 . -3) 10995) nil (26619 22730 152664 0) 0 nil])
([nil nil ((#("have - " 0 7 (fontified t)) . -10985) (undo-tree-id8182 . -7) (undo-tree-id8183 . -7) (undo-tree-id8184 . -7) 10992) nil (26619 22730 152657 0) 0 nil])
([nil nil ((10985 . 10988)) nil (26619 22730 152649 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10987) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) 10988) nil (26619 22730 152646 0) 0 nil])
([nil nil ((10987 . 11005)) nil (26619 22730 152627 0) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -11012) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) 11013 (11012 . 11013) (#(" " 0 1 (fontified nil)) . 11005) (11004 . 11005) (11009 . 11012) (11005 . 11009) (t 26619 22730 197321 628000)) nil (26619 22774 746252 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11012 . 11013) (#("
" 0 1 (fontified nil)) . -11188) (11012 . 11189)) nil (26619 22774 746240 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -11049) (undo-tree-id8461 . -2) (undo-tree-id8462 . -2) (undo-tree-id8463 . -2) 11051 (11048 . 11051) 11013) nil (26619 22774 746237 0) 0 nil])
([nil nil ((11061 . 11066)) nil (26619 22774 746229 0) 0 nil])
([nil nil ((11072 . 11074) (11070 . 11072) (11049 . 11070)) nil (26619 22774 746227 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 11086) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1)) nil (26619 22774 746224 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 11086) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1)) nil (26619 22774 746211 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 11086) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1)) nil (26619 22774 746198 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 11086) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1)) nil (26619 22774 746180 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 11086) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1)) nil (26619 22774 746167 0) 0 nil])
([nil nil ((11080 . 11082) (#("/" 0 1 (fontified t)) . -11080) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) 11081 (#(" " 0 1 (fontified t)) . -11081) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) 11082 (11075 . 11082) (11074 . 11075) 11060) nil (26619 22774 746133 0) 0 nil])
([nil nil ((11075 . 11080) (11074 . 11075) 11056) nil (26619 22774 746110 0) 0 nil])
([nil nil ((11087 . 11088)) nil (26619 22774 746104 0) 0 nil])
([nil nil ((11123 . 11141) (#("by " 0 3 (fontified t)) . -11123) (undo-tree-id8481 . -3) (undo-tree-id8482 . -3) (undo-tree-id8483 . -3) 11126 (#("1 " 0 2 (fontified t)) . -11126) (undo-tree-id8484 . -2) (undo-tree-id8485 . -2) (undo-tree-id8486 . -2) 11128 (#("error" 0 5 (fontified t)) . -11128) (undo-tree-id8487 . -5) (undo-tree-id8488 . -5) (undo-tree-id8489 . -5) 11133 (11119 . 11133) (11098 . 11119) (#("$" 0 1 (fontified nil)) . -11098) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (#("$" 0 1 (fontified t)) . 11099) (#(" " 0 1 (face font-latex-math-face fontified t)) . -11099) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) 11100 (11099 . 11100) (#("$" 0 1 (fontified nil)) . 11100) (11098 . 11100) (#("$" 0 1 (fontified nil)) . -11098) (11098 . 11100) (#("$" 0 1 (fontified nil)) . -11098) (11098 . 11099) (11096 . 11098) (#(")" 0 1 (fontified nil)) . -11096) (#(")" 0 1 (fontified nil)) . 11097) (11096 . 11097) (11093 . 11096) (11092 . 11094) (#("(" 0 1 (fontified nil)) . -11092) (11092 . 11093) (11090 . 11092) (#("]" 0 1 (fontified nil)) . -11090) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11091) (11089 . 11091) (11088 . 11090) (#("[" 0 1 (fontified nil)) . -11088) (11088 . 11089) (t 26619 22774 791588 310000)) nil (26619 22820 471423 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11141) (undo-tree-id8478 . 1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1)) nil (26619 22820 471383 0) 0 nil])
([nil nil ((11141 . 11142) 11141) nil (26619 22820 471376 0) 0 nil])
([nil nil ((11156 . 11159) 11143) nil (26619 22820 471373 0) 0 nil])
([nil nil ((11157 . 11161) (#("  " 0 2 (fontified t)) . 11157) (undo-tree-id8467 . -2) (undo-tree-id8468 . -2) (undo-tree-id8469 . -2) (undo-tree-id8470 . -2) (undo-tree-id8471 . -2) (undo-tree-id8472 . -2) (undo-tree-id8473 . -2) (undo-tree-id8474 . -2) (undo-tree-id8475 . -2) (undo-tree-id8476 . -2) (undo-tree-id8477 . -2) 11159) nil (26619 22820 471368 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 11089) (t 26619 22820 515430 155000)) nil (26619 22911 573187 0) 0 nil])
([nil nil ((11090 . 11091) (11089 . 11090)) nil (26619 22911 573185 0) 0 nil])
([nil nil ((11177 . 11178) (11176 . 11177) (11172 . 11176) (11170 . 11171) (11169 . 11171) (#("[" 0 1 (fontified nil)) . -11169) (11169 . 11170) (#("0" 0 1 (fontified t)) . -11169) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (#("n" 0 1 (fontified t)) . -11170) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) 11171 (11169 . 11171) (11162 . 11169)) nil (26619 22911 573181 0) 0 nil])
([nil nil ((11141 . 11142) (11137 . 11141) (#("error
# " 0 5 (fontified t) 5 6 (fontified t) 6 8 (fontified t)) . -11137) (undo-tree-id8570 . -8) (undo-tree-id8571 . -8) (undo-tree-id8572 . -8) (undo-tree-id8573 . -8) (undo-tree-id8574 . -8) (undo-tree-id8575 . -8) (undo-tree-id8576 . -8) (undo-tree-id8577 . -8) (undo-tree-id8578 . -8) (undo-tree-id8579 . -8) (undo-tree-id8580 . -8) (undo-tree-id8581 . -8) (undo-tree-id8582 . -8) (undo-tree-id8583 . -8) (undo-tree-id8584 . -8) (undo-tree-id8585 . -8) (undo-tree-id8586 . -8) (undo-tree-id8587 . -8) (undo-tree-id8588 . -8) (undo-tree-id8589 . -8) (undo-tree-id8590 . -8) (undo-tree-id8591 . -8) (undo-tree-id8592 . -8) (undo-tree-id8593 . -8) (undo-tree-id8594 . -8) (undo-tree-id8595 . -8) (undo-tree-id8596 . -8) (undo-tree-id8597 . -8) (undo-tree-id8598 . -8) (undo-tree-id8599 . -8) (undo-tree-id8600 . -8) (undo-tree-id8601 . -8) (undo-tree-id8602 . -8) (undo-tree-id8603 . -8) (undo-tree-id8604 . -8) (undo-tree-id8605 . -8) (undo-tree-id8606 . -8) (undo-tree-id8607 . -8) (undo-tree-id8608 . -8) (undo-tree-id8609 . -8) (undo-tree-id8610 . -8) (undo-tree-id8611 . -8) (undo-tree-id8612 . -8) (undo-tree-id8613 . -8) (undo-tree-id8614 . -8) (undo-tree-id8615 . -8) (undo-tree-id8616 . -8) (undo-tree-id8617 . -6) (undo-tree-id8618 . -8) (undo-tree-id8619 . -8) (undo-tree-id8620 . -8) (undo-tree-id8621 . -8) (undo-tree-id8622 . -8) (undo-tree-id8623 . -8) (undo-tree-id8624 . -8) (undo-tree-id8625 . -8) 11145 (#("this " 0 5 (fontified t)) . -11145) (undo-tree-id8626 . -5) (undo-tree-id8627 . -5) (undo-tree-id8628 . -5) (undo-tree-id8629 . -5) (undo-tree-id8630 . -5) (undo-tree-id8631 . -5) (undo-tree-id8632 . -5) (undo-tree-id8633 . -5) (undo-tree-id8634 . -5) (undo-tree-id8635 . -5) (undo-tree-id8636 . -5) (undo-tree-id8637 . -5) (undo-tree-id8638 . -5) (undo-tree-id8639 . -5) (undo-tree-id8640 . -5) (undo-tree-id8641 . -5) (undo-tree-id8642 . -5) (undo-tree-id8643 . -5) (undo-tree-id8644 . -5) (undo-tree-id8645 . -5) (undo-tree-id8646 . -5) (undo-tree-id8647 . -5) (undo-tree-id8648 . -5) (undo-tree-id8649 . -5) (undo-tree-id8650 . -5) (undo-tree-id8651 . -5) (undo-tree-id8652 . -5) (undo-tree-id8653 . -5) (undo-tree-id8654 . -5) (undo-tree-id8655 . -5) (undo-tree-id8656 . -5) (undo-tree-id8657 . -5) (undo-tree-id8658 . -5) (undo-tree-id8659 . -5) (undo-tree-id8660 . -5) (undo-tree-id8661 . -5) (undo-tree-id8662 . -5) (undo-tree-id8663 . -5) (undo-tree-id8664 . -5) (undo-tree-id8665 . -5) (undo-tree-id8666 . -5) (undo-tree-id8667 . -5) (undo-tree-id8668 . -5) (undo-tree-id8669 . -5) (undo-tree-id8670 . -5) (undo-tree-id8671 . -5) (undo-tree-id8672 . -5) (undo-tree-id8673 . -5) 11150 (#("solution " 0 9 (fontified t)) . -11150) (undo-tree-id8674 . -9) (undo-tree-id8675 . -9) (undo-tree-id8676 . -9) (undo-tree-id8677 . -9) (undo-tree-id8678 . -9) (undo-tree-id8679 . -9) (undo-tree-id8680 . -9) (undo-tree-id8681 . -9) (undo-tree-id8682 . -9) (undo-tree-id8683 . -9) (undo-tree-id8684 . -9) (undo-tree-id8685 . -9) (undo-tree-id8686 . -9) (undo-tree-id8687 . -9) (undo-tree-id8688 . -9) (undo-tree-id8689 . -9) (undo-tree-id8690 . -9) (undo-tree-id8691 . -9) (undo-tree-id8692 . -9) (undo-tree-id8693 . -9) (undo-tree-id8694 . -9) (undo-tree-id8695 . -9) (undo-tree-id8696 . -9) (undo-tree-id8697 . -9) (undo-tree-id8698 . -9) (undo-tree-id8699 . -9) (undo-tree-id8700 . -9) (undo-tree-id8701 . -9) (undo-tree-id8702 . -9) (undo-tree-id8703 . -9) (undo-tree-id8704 . -9) (undo-tree-id8705 . -9) (undo-tree-id8706 . -9) (undo-tree-id8707 . -9) (undo-tree-id8708 . -9) (undo-tree-id8709 . -9) (undo-tree-id8710 . -9) (undo-tree-id8711 . -9) (undo-tree-id8712 . -9) (undo-tree-id8713 . -9) (undo-tree-id8714 . -9) (undo-tree-id8715 . -9) (undo-tree-id8716 . -9) (undo-tree-id8717 . -9) 11159 (#("assumes " 0 8 (fontified t)) . -11159) (undo-tree-id8718 . -8) (undo-tree-id8719 . -8) (undo-tree-id8720 . -8) (undo-tree-id8721 . -7) (undo-tree-id8722 . -8) (undo-tree-id8723 . -8) (undo-tree-id8724 . -8) (undo-tree-id8725 . -8) (undo-tree-id8726 . -8) (undo-tree-id8727 . -8) (undo-tree-id8728 . -8) (undo-tree-id8729 . -8) (undo-tree-id8730 . -8) (undo-tree-id8731 . -8) (undo-tree-id8732 . -8) (undo-tree-id8733 . -8) (undo-tree-id8734 . -8) (undo-tree-id8735 . -8) (undo-tree-id8736 . -8) (undo-tree-id8737 . -8) (undo-tree-id8738 . -8) (undo-tree-id8739 . -8) (undo-tree-id8740 . -8) (undo-tree-id8741 . -8) (undo-tree-id8742 . -8) (undo-tree-id8743 . -8) (undo-tree-id8744 . -8) (undo-tree-id8745 . -8) (undo-tree-id8746 . -8) (undo-tree-id8747 . -8) (undo-tree-id8748 . -8) (undo-tree-id8749 . -8) (undo-tree-id8750 . -8) (undo-tree-id8751 . -8) (undo-tree-id8752 . -8) (undo-tree-id8753 . -8) (undo-tree-id8754 . -8) (undo-tree-id8755 . -8) (undo-tree-id8756 . -8) (undo-tree-id8757 . -8) 11167 (#("the " 0 4 (fontified t)) . -11167) (undo-tree-id8758 . -4) (undo-tree-id8759 . -4) (undo-tree-id8760 . -4) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -2) (undo-tree-id8766 . -2) (undo-tree-id8767 . -2) (undo-tree-id8768 . -2) (undo-tree-id8769 . -3) (undo-tree-id8770 . -3) (undo-tree-id8771 . -3) (undo-tree-id8772 . -3) (undo-tree-id8773 . -4) (undo-tree-id8774 . -4) (undo-tree-id8775 . -4) (undo-tree-id8776 . -4) (undo-tree-id8777 . -4) (undo-tree-id8778 . -4) (undo-tree-id8779 . -4) (undo-tree-id8780 . -4) 11171 (11167 . 11171) (#("a" 0 1 (fontified t)) . -11167) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) 11168 (11166 . 11168) (11145 . 11166) (#("assume" 0 6 (fontified t)) . -11145) (undo-tree-id8792 . -6) (undo-tree-id8793 . -6) (undo-tree-id8794 . -6) 11151 (#(" " 0 1 (fontified t)) . -11151) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) 11152 (#("non-" 0 4 (fontified t)) . -11152) (undo-tree-id8798 . -4) (undo-tree-id8799 . -4) (undo-tree-id8800 . -4) 11156 (#("negative " 0 9 (fontified t)) . -11156) (undo-tree-id8801 . -9) (undo-tree-id8802 . -9) (undo-tree-id8803 . -9) 11165 (11156 . 11165) (11155 . 11156) (11143 . 11155) (#("$" 0 1 (fontified nil)) . -11143) (undo-tree-id8804 . -1) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (#("$" 0 1 (fontified t)) . 11144) (#("$" 0 1 (fontified nil)) . 11145) (11143 . 11145) (#("$" 0 1 (fontified nil)) . -11143) (11143 . 11145) (#("$" 0 1 (fontified nil)) . -11143) (11143 . 11144) (11142 . 11143) 11101) nil (26619 22911 573149 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 11089) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1)) nil (26619 22911 572735 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 11089) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1)) nil (26619 22911 572730 0) 0 nil])
([nil nil ((11089 . 11092)) nil (26619 22911 572725 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 11177) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1)) nil (26619 22911 572723 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 11177) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1)) nil (26619 22911 572711 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11182) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (#("e" 0 1 (fontified t)) . -11183) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) 11184 (11182 . 11184) (11180 . 11182) (11159 . 11161) (#("    " 0 4 (fontified nil)) . -11159) (11181 . 11182) (11180 . 11181) (11177 . 11180)) nil (26619 22911 572693 0) 0 nil])
([nil nil ((11159 . 11163) (#("  " 0 2 (fontified t)) . 11159) (undo-tree-id8532 . -2) (undo-tree-id8533 . -2) (undo-tree-id8534 . -2) (undo-tree-id8535 . -2) (undo-tree-id8536 . -2) (undo-tree-id8537 . -2) (undo-tree-id8538 . -2) (undo-tree-id8539 . -2) (undo-tree-id8540 . -2) (undo-tree-id8541 . -2) (undo-tree-id8542 . -2) (undo-tree-id8543 . -2) 11161) nil (26619 22911 572674 0) 0 nil])
([nil nil ((11202 . 11203) (11201 . 11203) (#("[" 0 1 (fontified nil)) . -11201) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (11201 . 11202) (11197 . 11201) (11190 . 11197) (11182 . 11190) (#("    " 0 4 (fontified t)) . 11182) (undo-tree-id8521 . -4) (undo-tree-id8522 . -4) (undo-tree-id8523 . -4) (undo-tree-id8524 . -4) (undo-tree-id8525 . -4) (undo-tree-id8526 . -4) (undo-tree-id8527 . -4) (undo-tree-id8528 . -4) (undo-tree-id8529 . -4) (undo-tree-id8530 . -4) (undo-tree-id8531 . -4) 11186 (11181 . 11186) 11163) nil (26619 22911 572651 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 11238) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1)) nil (26619 22911 572623 0) 0 nil])
([nil nil ((11243 . 11244) (11242 . 11244) (#("[" 0 1 (fontified nil)) . -11242) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (11242 . 11243) (11238 . 11242)) nil (26619 22911 572605 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 11277) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1)) nil (26619 22911 572597 0) 0 nil])
([nil nil ((11283 . 11284) (#("]" 0 1 (fontified nil)) . -11283) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11284) (11282 . 11284) (11281 . 11283) (#("[" 0 1 (fontified nil)) . -11281) (11281 . 11282) (11277 . 11281)) nil (26619 22911 572580 0) 0 nil])
([nil nil ((11143 . 11144) 11103) nil (26619 22911 572575 0) 0 nil])
([nil nil ((11144 . 11148)) nil (26619 22911 572573 0) 0 nil])
([nil nil ((11148 . 11150) (#("[" 0 1 (fontified nil)) . -11148) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (11148 . 11149)) nil (26619 22911 572571 0) 0 nil])
([nil nil ((11150 . 11154) (#("]" 0 1 (fontified nil)) . -11150) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11151) (11149 . 11151)) nil (26619 22911 572553 0) 0 nil])
([nil nil ((11163 . 11168) (#("]" 0 1 (fontified nil)) . -11163) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11164) (11162 . 11164) (11161 . 11163) (#("[" 0 1 (fontified nil)) . -11161) (11161 . 11162) (11154 . 11161) (t 26619 22911 618476 844000)) nil (26619 22984 571676 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 11155)) nil (26619 22984 571670 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11152) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) 11153 (11151 . 11153) (#(" " 0 1 (fontified t)) . -11151) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (#("=" 0 1 (fontified t)) . -11152) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (#(" " 0 1 (fontified t)) . -11153) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (#("0" 0 1 (fontified t)) . -11154) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) 11155) nil (26619 22984 571667 0) 0 nil])
([nil nil ((11163 . 11167) (#("1" 0 1 (fontified t)) . -11163) (undo-tree-id8900 . -1) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) (#("," 0 1 (fontified t)) . -11164) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (#(" " 0 1 (fontified t)) . -11165) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) 11166 (11164 . 11166)) nil (26619 22984 571622 0) 0 nil])
([nil nil ((11353 . 11354) (11352 . 11353) (11351 . 11352) (11350 . 11352) (#("(" 0 1 (fontified nil)) . -11350) (11350 . 11351) (11346 . 11350) (11345 . 11346) (#(")" 0 1 (fontified nil)) . -11345) (#(")" 0 1 (fontified nil)) . 11346) (11344 . 11346) (11343 . 11344) (11342 . 11343) (11341 . 11343) (#("(" 0 1 (fontified nil)) . -11341) (11341 . 11342) (11334 . 11341) (#("]" 0 1 (fontified nil)) . -11334) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11335) (11333 . 11335) (11332 . 11334) (#("[" 0 1 (fontified nil)) . -11332) (11332 . 11333) (11328 . 11332) (11320 . 11328) (#("    " 0 4 (fontified t)) . 11320) (undo-tree-id8897 . -4) (undo-tree-id8898 . -4) (undo-tree-id8899 . -4) 11324 (11319 . 11324) 11319) nil (26619 22984 571600 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 11387)) nil (26619 22984 571582 0) 0 nil])
([nil nil ((11376 . 11377) (11375 . 11377) (#("[" 0 1 (fontified nil)) . -11375) (11375 . 11376) (11371 . 11375) (#("f" 0 1 (fontified t)) . -11371) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (#("i" 0 1 (fontified t)) . -11372) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (#("b" 0 1 (fontified t)) . -11373) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (#("(" 0 1 (fontified t)) . -11374) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) (#("n" 0 1 (fontified t)) . -11375) (undo-tree-id8837 . -1) (undo-tree-id8838 . -1) (undo-tree-id8839 . -1) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (#("-" 0 1 (fontified t)) . -11376) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (#("1" 0 1 (fontified t)) . -11377) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (#(")" 0 1 (fontified t)) . -11378) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (#("+" 0 1 (fontified t)) . -11379) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (#("f" 0 1 (fontified t)) . -11380) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (#("i" 0 1 (fontified t)) . -11381) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (#("b" 0 1 (fontified t)) . -11382) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (#("(" 0 1 (fontified t)) . -11383) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (#("n" 0 1 (fontified t)) . -11384) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (#("-" 0 1 (fontified t)) . -11385) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (#("2" 0 1 (fontified t)) . -11386) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) 11387) nil (26619 22984 571572 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -11379) (undo-tree-id8814 . -8) (undo-tree-id8815 . -8) (undo-tree-id8816 . -8) 11387 (11378 . 11387) 11377) nil (26619 22984 571428 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11379) (undo-tree-id8813 . 1)) nil (26619 22984 571419 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11229)) nil (26619 22984 571407 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11229)) nil (26619 22984 571402 0) 0 nil])
([nil nil ((11090 . 11091) (11089 . 11090) (#("NaN" 0 3 (fontified t)) . 11089) (undo-tree-id9046 . -2) (t 26619 22984 617329 72000)) nil (26619 23135 661999 0) 0 nil])
([nil nil ((11201 . 11202) (11200 . 11201) (#("NaN" 0 3 (fontified t)) . 11200) (undo-tree-id9036 . -2) (undo-tree-id9037 . -2) (undo-tree-id9038 . -2) (undo-tree-id9039 . -2) (undo-tree-id9040 . -2) (undo-tree-id9041 . -2) (undo-tree-id9042 . -2) (undo-tree-id9043 . -2) (undo-tree-id9044 . -3) (undo-tree-id9045 . -3)) nil (26619 23135 661994 0) 0 nil])
([nil nil ((11142 . 11143) 11101) nil (26619 23135 661975 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11142) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) 11143) nil (26619 23135 661971 0) 0 nil])
([nil nil ((11153 . 11174) (11151 . 11153) (#("positive " 0 9 (fontified t)) . -11151) (undo-tree-id8992 . -9) (undo-tree-id8993 . -9) (undo-tree-id8994 . -9) 11160 (#(" " 0 1 (fontified nil)) . 11151) (11150 . 11151) (11142 . 11160)) nil (26619 23135 661902 0) 0 nil])
([nil nil ((11225 . 11228) (#(" " 0 1 (fontified nil)) . 11214) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (11213 . 11214) (11224 . 11225) (11203 . 11224) (#("]" 0 1 (fontified nil)) . -11203) (11203 . 11204) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -11203) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11204) (undo-tree-id8958 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 11204) (#(" " 0 1 (fontified t)) . -11204) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) 11205 (11204 . 11205) (11203 . 11205) (#("[" 0 1 (fontified nil)) . -11203) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (11203 . 11204) (11202 . 11203) (11201 . 11203) (#("[" 0 1 (fontified nil)) . -11201) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (11201 . 11202) (11188 . 11201) (#("test " 0 5 (fontified t)) . -11188) (undo-tree-id8971 . -5) (undo-tree-id8972 . -5) (undo-tree-id8973 . -5) 11193 (#("if " 0 3 (fontified t)) . -11193) (undo-tree-id8974 . -3) (undo-tree-id8975 . -3) (undo-tree-id8976 . -3) 11196 (#("we " 0 3 (fontified t)) . -11196) (undo-tree-id8977 . -3) (undo-tree-id8978 . -3) (undo-tree-id8979 . -3) 11199 (#("have" 0 4 (fontified t)) . -11199) (undo-tree-id8980 . -4) (undo-tree-id8981 . -4) (undo-tree-id8982 . -4) 11203 (11183 . 11203) (11182 . 11183) (11175 . 11182) (#("-" 0 1 (fontified t)) . -11175) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) 11176 (#("1 " 0 2 (fontified t)) . -11176) (undo-tree-id8986 . -2) (undo-tree-id8987 . -2) (undo-tree-id8988 . -2) 11178 (#("i" 0 1 (fontified t)) . -11178) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) 11179 (11176 . 11179) (11175 . 11176) (11174 . 11175)) nil (26619 23135 661883 0) 0 nil])
([nil nil ((11144 . 11145) (#(" " 0 1 (fontified nil)) . -11144) (11143 . 11144) (t 26619 23135 709309 296000)) nil (26619 23163 202383 0) 0 nil])
([nil nil (11153) nil (26619 23163 202380 0) 0 nil])
([nil nil ((11151 . 11152) (#("
" 0 1 (fontified t)) . -11151) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) 11152) nil (26619 23163 202377 0) 0 nil])
([nil nil ((11145 . 11146)) nil (26619 23163 202348 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 11175) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (t 26619 23163 247705 392000)) nil (26619 23182 510459 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11145) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) 11146 (#("assume " 0 7 (fontified t)) . -11146) (undo-tree-id9136 . 7) (undo-tree-id9137 . -7) (undo-tree-id9138 . -7) (undo-tree-id9139 . -7) (undo-tree-id9140 . -7) (undo-tree-id9141 . -6) (undo-tree-id9142 . -6) (undo-tree-id9143 . -6) (undo-tree-id9144 . -6) (undo-tree-id9145 . -7) (undo-tree-id9146 . -5) (undo-tree-id9147 . -5) (undo-tree-id9148 . -5) (undo-tree-id9149 . -5) (undo-tree-id9150 . -7) (undo-tree-id9151 . -7) (undo-tree-id9152 . -7) (undo-tree-id9153 . -7) (undo-tree-id9154 . -7) (undo-tree-id9155 . -7) (undo-tree-id9156 . -7) (undo-tree-id9157 . -7) (undo-tree-id9158 . -7) (undo-tree-id9159 . -7) (undo-tree-id9160 . -7) (undo-tree-id9161 . -7) (undo-tree-id9162 . -7) (undo-tree-id9163 . -7) (undo-tree-id9164 . -7) (undo-tree-id9165 . -7) (undo-tree-id9166 . -7) (undo-tree-id9167 . -7) (undo-tree-id9168 . -7) (undo-tree-id9169 . -7) (undo-tree-id9170 . -7) (undo-tree-id9171 . -7) (undo-tree-id9172 . -7) (undo-tree-id9173 . -7) (undo-tree-id9174 . -7) (undo-tree-id9175 . -7) (undo-tree-id9176 . -7) (undo-tree-id9177 . -7) (undo-tree-id9178 . -7) (undo-tree-id9179 . -7) (undo-tree-id9180 . -7) (undo-tree-id9181 . -7) (undo-tree-id9182 . -7) (undo-tree-id9183 . -7) (undo-tree-id9184 . -7) (undo-tree-id9185 . -7) (undo-tree-id9186 . -7) (undo-tree-id9187 . -7) (undo-tree-id9188 . -7) (undo-tree-id9189 . -7) (undo-tree-id9190 . -7) (undo-tree-id9191 . -7) (undo-tree-id9192 . -7) (undo-tree-id9193 . -7) (undo-tree-id9194 . -7) (undo-tree-id9195 . -7) (undo-tree-id9196 . -7) (undo-tree-id9197 . -7) 11153 (#("all " 0 4 (fontified t)) . -11153) (undo-tree-id9198 . -4) (undo-tree-id9199 . -4) (undo-tree-id9200 . -4) (undo-tree-id9201 . -4) (undo-tree-id9202 . -4) (undo-tree-id9203 . -2) (undo-tree-id9204 . -2) (undo-tree-id9205 . -2) (undo-tree-id9206 . -2) (undo-tree-id9207 . -4) (undo-tree-id9208 . -4) (undo-tree-id9209 . -4) (undo-tree-id9210 . -4) (undo-tree-id9211 . -4) (undo-tree-id9212 . -4) (undo-tree-id9213 . -4) (undo-tree-id9214 . -4) (undo-tree-id9215 . -4) (undo-tree-id9216 . -4) (undo-tree-id9217 . -4) (undo-tree-id9218 . -4) (undo-tree-id9219 . -4) (undo-tree-id9220 . -4) (undo-tree-id9221 . -4) (undo-tree-id9222 . -4) (undo-tree-id9223 . -4) (undo-tree-id9224 . -4) (undo-tree-id9225 . -4) (undo-tree-id9226 . -4) (undo-tree-id9227 . -4) (undo-tree-id9228 . -4) (undo-tree-id9229 . -4) (undo-tree-id9230 . -4) (undo-tree-id9231 . -4) (undo-tree-id9232 . -4) (undo-tree-id9233 . -4) (undo-tree-id9234 . -4) (undo-tree-id9235 . -4) (undo-tree-id9236 . -4) (undo-tree-id9237 . -4) (undo-tree-id9238 . -4) (undo-tree-id9239 . -4) (undo-tree-id9240 . -4) (undo-tree-id9241 . -4) (undo-tree-id9242 . -4) (undo-tree-id9243 . -4) (undo-tree-id9244 . -4) (undo-tree-id9245 . -4) (undo-tree-id9246 . -4) 11157 (#("terms " 0 6 (fontified t)) . -11157) (undo-tree-id9247 . -6) (undo-tree-id9248 . -6) (undo-tree-id9249 . -6) (undo-tree-id9250 . -6) (undo-tree-id9251 . -6) (undo-tree-id9252 . -4) (undo-tree-id9253 . -4) (undo-tree-id9254 . -4) (undo-tree-id9255 . -4) (undo-tree-id9256 . -6) (undo-tree-id9257 . -6) (undo-tree-id9258 . -6) (undo-tree-id9259 . -6) (undo-tree-id9260 . -6) (undo-tree-id9261 . -6) (undo-tree-id9262 . -6) (undo-tree-id9263 . -6) (undo-tree-id9264 . -6) (undo-tree-id9265 . -6) (undo-tree-id9266 . -6) (undo-tree-id9267 . -6) (undo-tree-id9268 . -6) (undo-tree-id9269 . -6) (undo-tree-id9270 . -6) (undo-tree-id9271 . -6) (undo-tree-id9272 . -6) (undo-tree-id9273 . -6) (undo-tree-id9274 . -6) (undo-tree-id9275 . -6) (undo-tree-id9276 . -6) (undo-tree-id9277 . -6) (undo-tree-id9278 . -6) (undo-tree-id9279 . -6) (undo-tree-id9280 . -6) (undo-tree-id9281 . -6) (undo-tree-id9282 . -6) (undo-tree-id9283 . -6) (undo-tree-id9284 . -6) (undo-tree-id9285 . -6) (undo-tree-id9286 . -6) (undo-tree-id9287 . -6) 11163 (#("are " 0 4 (fontified t)) . -11163) (undo-tree-id9288 . -4) (undo-tree-id9289 . -4) (undo-tree-id9290 . -4) (undo-tree-id9291 . -4) (undo-tree-id9292 . -4) (undo-tree-id9293 . -2) (undo-tree-id9294 . -2) (undo-tree-id9295 . -2) (undo-tree-id9296 . -2) (undo-tree-id9297 . -4) (undo-tree-id9298 . -4) (undo-tree-id9299 . -4) (undo-tree-id9300 . -4) (undo-tree-id9301 . -4) (undo-tree-id9302 . -4) (undo-tree-id9303 . -4) (undo-tree-id9304 . -4) (undo-tree-id9305 . -4) (undo-tree-id9306 . -4) (undo-tree-id9307 . -4) (undo-tree-id9308 . -4) (undo-tree-id9309 . -4) (undo-tree-id9310 . -4) (undo-tree-id9311 . -4) (undo-tree-id9312 . -4) (undo-tree-id9313 . -4) (undo-tree-id9314 . -4) (undo-tree-id9315 . -4) (undo-tree-id9316 . -4) (undo-tree-id9317 . -4) (undo-tree-id9318 . -4) (undo-tree-id9319 . -4) (undo-tree-id9320 . -4) 11167 (#("positive" 0 8 (fontified t)) . -11167) (undo-tree-id9321 . -8) (undo-tree-id9322 . -8) (undo-tree-id9323 . -8) (undo-tree-id9324 . -8) (undo-tree-id9325 . -8) (undo-tree-id9326 . -7) (undo-tree-id9327 . -7) (undo-tree-id9328 . -7) (undo-tree-id9329 . -7) (undo-tree-id9330 . -8) (undo-tree-id9331 . -8) (undo-tree-id9332 . -8) (undo-tree-id9333 . -8) (undo-tree-id9334 . -8) (undo-tree-id9335 . -8) (undo-tree-id9336 . -8) (undo-tree-id9337 . -8) (undo-tree-id9338 . -8) (undo-tree-id9339 . -8) (undo-tree-id9340 . -8) (undo-tree-id9341 . -8) (undo-tree-id9342 . -8) (undo-tree-id9343 . -8) (undo-tree-id9344 . -8) (undo-tree-id9345 . -8) 11175) nil (26619 23182 510433 0) 0 nil])
([nil nil (11186) nil (26619 23182 509790 0) 0 nil])
([nil nil ((11184 . 11185) (#("
" 0 1 (fontified t)) . -11184) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) 11185) nil (26619 23182 509787 0) 0 nil])
([nil nil ((11199 . 11200)) nil (26619 23182 509749 0) 0 nil])
([nil nil ((#("\\begin{fullwidth}
\\begin{forest}
for tree={
  grow'=south,
  child anchor=north,
  parent anchor=south,
  align=center,
  l sep=12pt,
  s sep=10pt,
  edge={->},
  anchor=center,
}
[fib(5)
  [fib(3)
    [fib(1)]
    [fib(2)]
  ]
  [fib(4)
    [fib(2)]
    [fib(3)
      [fib(1)]
      [fib(2)]
    ]
  ]
]
\\end{forest}
\\end{fullwidth}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 16 (face (font-lock-function-name-face) fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 18 (fontified t) 18 24 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 31 (face (font-lock-function-name-face) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 33 (fontified t) 33 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t) 43 155 (fontified t) 155 156 (face (rainbow-delimiters-depth-2-face) fontified t) 156 158 (fontified t) 158 159 (face (rainbow-delimiters-depth-2-face) fontified t) 159 178 (fontified t) 178 179 (face (rainbow-delimiters-depth-1-face) fontified t) 179 180 (fontified t) 180 181 (face (rainbow-delimiters-depth-1-face) fontified t) 181 190 (fontified t) 190 191 (face (rainbow-delimiters-depth-2-face) fontified t) 191 202 (fontified t) 202 203 (face (rainbow-delimiters-depth-3-face) fontified t) 203 209 (fontified t) 209 210 (face (rainbow-delimiters-depth-3-face) fontified t) 210 215 (fontified t) 215 216 (face (rainbow-delimiters-depth-3-face) fontified t) 216 222 (fontified t) 222 223 (face (rainbow-delimiters-depth-3-face) fontified t) 223 226 (fontified t) 226 227 (face (rainbow-delimiters-depth-2-face) fontified t) 227 230 (fontified t) 230 231 (face (rainbow-delimiters-depth-2-face) fontified t) 231 242 (fontified t) 242 243 (face (rainbow-delimiters-depth-3-face) fontified t) 243 249 (fontified t) 249 250 (face (rainbow-delimiters-depth-3-face) fontified t) 250 255 (fontified t) 255 256 (face (rainbow-delimiters-depth-3-face) fontified t) 256 269 (fontified t) 269 270 (face (rainbow-delimiters-depth-4-face) fontified t) 270 276 (fontified t) 276 277 (face (rainbow-delimiters-depth-4-face) fontified t) 277 284 (fontified t) 284 285 (face (rainbow-delimiters-depth-4-face) fontified t) 285 291 (fontified t) 291 292 (face (rainbow-delimiters-depth-4-face) fontified t) 292 297 (fontified t) 297 298 (face (rainbow-delimiters-depth-3-face) fontified t) 298 301 (fontified t) 301 302 (face (rainbow-delimiters-depth-2-face) fontified t) 302 303 (fontified t) 303 304 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 304 305 (fontified t) 305 306 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 306 309 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 309 310 (face (rainbow-delimiters-depth-1-face) fontified t) 310 316 (face (font-lock-function-name-face) fontified t) 316 317 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 317 318 (fontified t) 318 319 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 319 322 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 322 323 (face (rainbow-delimiters-depth-1-face) fontified t) 323 332 (face (font-lock-function-name-face) fontified t) 332 333 (face (rainbow-delimiters-depth-1-face) fontified t) 333 334 (fontified t rear-nonsticky t)) . 11450) (undo-tree-id9381 . -333) (undo-tree-id9382 . -333) (undo-tree-id9383 . -16) (undo-tree-id9384 . -333) (undo-tree-id9385 . -333) (undo-tree-id9386 . -333) (undo-tree-id9387 . -18) (undo-tree-id9388 . -17) (undo-tree-id9389 . -80) (undo-tree-id9390 . -305) (undo-tree-id9391 . -178) (undo-tree-id9392 . -179) (undo-tree-id9393 . -333) 11783 (t 26619 23182 558284 921000)) nil (26619 23322 133229 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10818 . 10819) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -11152) (10818 . 11153) 10754) nil (26619 23322 133207 0) 0 nil])
([nil nil ((#(" \\code{fib(3)} and \\code{fib{2}} are repeated, for
" 0 1 (fontified t) 1 6 (face (font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 10 (fontified t) 10 12 (fontified t) 12 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 19 (fontified t) 19 24 (face (font-latex-sedate-face) fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 28 (fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 50 (fontified t) 50 51 (rear-nonsticky t fontified t)) . 10768) (undo-tree-id9375 . -50) (undo-tree-id9376 . -50) (undo-tree-id9377 . -50) (undo-tree-id9378 . -50) (undo-tree-id9379 . -50) (undo-tree-id9380 . -50) 10818) nil (26619 23322 133203 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11151 . 11152) (nil fontified nil 11101 . 11152) (11101 . 11152) 11100) nil (26619 23322 133192 0) 0 nil])
([nil nil ((11102 . 11103) (#(" " 0 1 (fontified nil)) . 11101) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (11102 . 11103)) nil (26619 23322 133188 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11153) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1)) nil (26619 23322 133166 0) 0 nil])
([nil nil ((10768 . 10769)) nil (26619 23322 133159 0) 0 nil])
([nil nil ((#("\\begin{fullwidth}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 16 (face (font-lock-function-name-face) fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 18 (fontified t)) . 10769) (undo-tree-id9348 . 18) (undo-tree-id9349 . -17) (undo-tree-id9350 . -18) (undo-tree-id9351 . -18) (undo-tree-id9352 . -18) (undo-tree-id9353 . -18) (undo-tree-id9354 . -18) (undo-tree-id9355 . -18) (undo-tree-id9356 . -18) (undo-tree-id9357 . -18) (undo-tree-id9358 . -18) (undo-tree-id9359 . -18)) nil (26619 23322 133154 0) 0 nil])
([nil nil ((#("\\begin{forest}
for tree={
  grow'=south,
  child anchor=north,
  parent anchor=south,
  align=center,
  l sep=12pt,
  s sep=10pt,
  edge={->},
  anchor=center,
}
[fib(5)
  [fib(3)
    [fib(1)]
    [fib(2)]
  ]
  [fib(4)
    [fib(2)]
    [fib(3)
      [fib(1)]
      [fib(2)]
    ]
  ]
]" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 13 (face (font-lock-function-name-face) fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (fontified t) 15 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 137 (fontified t) 137 138 (face (rainbow-delimiters-depth-2-face) fontified t) 138 140 (fontified t) 140 141 (face (rainbow-delimiters-depth-2-face) fontified t) 141 160 (fontified t) 160 161 (face (rainbow-delimiters-depth-1-face) fontified t) 161 162 (fontified t) 162 163 (face (rainbow-delimiters-depth-1-face) fontified t) 163 172 (fontified t) 172 173 (face (rainbow-delimiters-depth-2-face) fontified t) 173 184 (fontified t) 184 185 (face (rainbow-delimiters-depth-3-face) fontified t) 185 191 (fontified t) 191 192 (face (rainbow-delimiters-depth-3-face) fontified t) 192 197 (fontified t) 197 198 (face (rainbow-delimiters-depth-3-face) fontified t) 198 204 (fontified t) 204 205 (face (rainbow-delimiters-depth-3-face) fontified t) 205 208 (fontified t) 208 209 (face (rainbow-delimiters-depth-2-face) fontified t) 209 212 (fontified t) 212 213 (face (rainbow-delimiters-depth-2-face) fontified t) 213 224 (fontified t) 224 225 (face (rainbow-delimiters-depth-3-face) fontified t) 225 231 (fontified t) 231 232 (face (rainbow-delimiters-depth-3-face) fontified t) 232 237 (fontified t) 237 238 (face (rainbow-delimiters-depth-3-face) fontified t) 238 251 (fontified t) 251 252 (face (rainbow-delimiters-depth-4-face) fontified t) 252 258 (fontified t) 258 259 (face (rainbow-delimiters-depth-4-face) fontified t) 259 266 (fontified t) 266 267 (face (rainbow-delimiters-depth-4-face) fontified t) 267 273 (fontified t) 273 274 (face (rainbow-delimiters-depth-4-face) fontified t) 274 279 (fontified t) 279 280 (face (rainbow-delimiters-depth-3-face) fontified t) 280 283 (fontified t) 283 284 (face (rainbow-delimiters-depth-2-face) fontified t) 284 285 (fontified t) 285 286 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 10769) (undo-tree-id9394 . 286) (undo-tree-id9395 . 286) (t 26619 23322 180397 871000)) nil (26619 23335 740143 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 11043) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (t 26619 23335 783722 304000)) nil (26619 23394 664606 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 11042) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (11043 . 11044)) nil (26619 23394 664591 0) 0 nil])
([nil nil ((11042 . 11043) 11036) nil (26619 23394 664542 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11481) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1)) nil (26619 23394 664539 0) 0 nil])
([nil nil ((11613 . 11625) (11611 . 11613) (11610 . 11612) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11610) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (11610 . 11611) (11604 . 11610) (11603 . 11604) (11587 . 11603) (#("cal" 0 3 (fontified t)) . -11587) (undo-tree-id9398 . -3) (undo-tree-id9399 . -3) (undo-tree-id9400 . -3) 11590 (11581 . 11590) (11560 . 11581) (11556 . 11560) (#(" " 0 1 (fontified nil)) . 11535) (11534 . 11535) (11554 . 11556) (#("}" 0 1 (face (font-latex-italic-face) fontified nil)) . -11554) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11555) (11543 . 11555) (11542 . 11544) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -11542) (11542 . 11543) (11539 . 11542) (#("t" 0 1 (face (font-latex-sedate-face) fontified t)) . -11539) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (#("i" 0 1 (face (font-latex-sedate-face) fontified t)) . -11540) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) 11541 (11536 . 11541) (11535 . 11536) (11514 . 11535) (11500 . 11514) (#("func" 0 4 (fontified t)) . -11500) (undo-tree-id9407 . -4) (undo-tree-id9408 . -4) (undo-tree-id9409 . -4) (undo-tree-id9410 . -4) 11504 (11492 . 11504) (#("this " 0 5 (fontified t)) . -11492) (undo-tree-id9411 . -5) (undo-tree-id9412 . -5) (undo-tree-id9413 . -5) 11497 (#("is " 0 3 (fontified t)) . -11497) (undo-tree-id9414 . -3) (undo-tree-id9415 . -3) (undo-tree-id9416 . -3) 11500 (11482 . 11500) (11481 . 11482) (11480 . 11481) 11464) nil (26619 23394 664521 0) 0 nil])
([nil nil ((11626 . 11627)) nil (26619 23394 664459 0) 0 nil])
([nil nil ((11627 . 11628) (t 26619 23394 705983 928000) 11627) nil (26619 23411 326180 0) 0 nil])
([nil nil ((11628 . 11629) (t 26619 23411 374067 687000)) nil (26619 23493 473996 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11627) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (#(" " 0 1 (fontified t)) . -11628) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) 11629) nil (26619 23493 473993 0) 0 nil])
([nil nil ((11628 . 11648) (#(" " 0 1 (fontified nil)) . 11603) (11602 . 11603) (11627 . 11628)) nil (26619 23493 473981 0) 0 nil])
([nil nil ((11648 . 11659)) nil (26619 23493 473978 0) 0 nil])
([nil nil ((#("to " 0 3 (fontified t)) . -11656) (undo-tree-id9548 . -3) (undo-tree-id9549 . -3) (undo-tree-id9550 . -3) 11659) nil (26619 23493 473976 0) 0 nil])
([nil nil ((#("able " 0 5 (fontified t)) . -11651) (undo-tree-id9545 . -5) (undo-tree-id9546 . -5) (undo-tree-id9547 . -5) 11656) nil (26619 23493 473969 0) 0 nil])
([nil nil ((#("be " 0 3 (fontified t)) . -11648) (undo-tree-id9542 . -3) (undo-tree-id9543 . -3) (undo-tree-id9544 . -3) 11651) nil (26619 23493 473962 0) 0 nil])
([nil nil ((#("probably " 0 9 (fontified t)) . -11639) (undo-tree-id9539 . -9) (undo-tree-id9540 . -9) (undo-tree-id9541 . -9) 11648) nil (26619 23493 473955 0) 0 nil])
([nil nil ((#("should " 0 7 (fontified t)) . -11632) (undo-tree-id9536 . -7) (undo-tree-id9537 . -7) (undo-tree-id9538 . -7) 11639) nil (26619 23493 473948 0) 0 nil])
([nil nil ((#("You " 0 4 (fontified t)) . -11628) (undo-tree-id9533 . -4) (undo-tree-id9534 . -4) (undo-tree-id9535 . -4) 11632) nil (26619 23493 473940 0) 0 nil])
([nil nil ((11628 . 11640)) nil (26619 23493 473933 0) 0 nil])
([nil nil ((#("exam" 0 4 (fontified t)) . -11636) (undo-tree-id9530 . -4) (undo-tree-id9531 . -4) (undo-tree-id9532 . -4) 11640) nil (26619 23493 473931 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -11632) (undo-tree-id9527 . -4) (undo-tree-id9528 . -4) (undo-tree-id9529 . -4) 11636) nil (26619 23493 473923 0) 0 nil])
([nil nil ((11632 . 11653)) nil (26619 23493 473917 0) 0 nil])
([nil nil ((11653 . 11666)) nil (26619 23493 473915 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -11657) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (#("l" 0 1 (fontified t)) . -11658) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (#(" " 0 1 (fontified t)) . -11659) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (#("b" 0 1 (fontified t)) . -11660) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (#("e" 0 1 (fontified t)) . -11661) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (#(" " 0 1 (fontified t)) . -11662) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (#("a" 0 1 (fontified t)) . -11663) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (#("b" 0 1 (fontified t)) . -11664) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (#("l" 0 1 (fontified t)) . -11665) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) 11666) nil (26619 23493 473910 0) 0 nil])
([nil nil ((11657 . 11671)) nil (26619 23493 473859 0) 0 nil])
([nil nil ((11681 . 11684) (#(" " 0 1 (fontified nil)) . 11671) (11670 . 11671) (11671 . 11681)) nil (26619 23493 473858 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -11681) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (#(" " 0 1 (fontified t)) . -11682) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (#("p" 0 1 (fontified t)) . -11683) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) 11684) nil (26619 23493 473854 0) 0 nil])
([nil nil ((11681 . 11691)) nil (26619 23493 473835 0) 0 nil])
([nil nil ((#("probl" 0 5 (fontified t)) . -11686) (undo-tree-id9488 . -5) (undo-tree-id9489 . -5) (undo-tree-id9490 . -5) 11691) nil (26619 23493 473833 0) 0 nil])
([nil nil ((#("a " 0 2 (fontified t)) . -11684) (undo-tree-id9485 . -2) (undo-tree-id9486 . -2) (undo-tree-id9487 . -2) 11686) nil (26619 23493 473826 0) 0 nil])
([nil nil ((#("if " 0 3 (fontified t)) . -11681) (undo-tree-id9482 . -3) (undo-tree-id9483 . -3) (undo-tree-id9484 . -3) 11684) nil (26619 23493 473819 0) 0 nil])
([nil nil ((11681 . 11687)) nil (26619 23493 473812 0) 0 nil])
([nil nil ((11687 . 11694)) nil (26619 23493 473810 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11687) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (#("o" 0 1 (fontified t)) . -11688) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (#("l" 0 1 (fontified t)) . -11689) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (#("u" 0 1 (fontified t)) . -11690) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (#("t" 0 1 (fontified t)) . -11691) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (#("i" 0 1 (fontified t)) . -11692) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (#("o" 0 1 (fontified t)) . -11693) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) 11694) nil (26619 23493 473806 0) 0 nil])
([nil nil ((11687 . 11704)) nil (26619 23493 473768 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11702) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (#("e" 0 1 (fontified t)) . -11703) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) 11704) nil (26619 23493 473765 0) 0 nil])
([nil nil ((11702 . 11705)) nil (26619 23493 473745 0) 0 nil])
([nil nil ((11705 . 11726)) nil (26619 23493 473743 0) 0 nil])
([nil nil ((11726 . 11730)) nil (26619 23493 473739 0) 0 nil])
([nil nil ((9970 . 9971) (t 26619 23493 522856 72000) 9970) nil (26619 55413 768663 0) 0 nil])
([nil nil ((9971 . 9992) (t 26619 55413 820051 674000)) nil (26619 55426 881111 0) 0 nil])
([nil nil ((9992 . 9994)) nil (26619 55426 881109 0) 0 nil])
([nil nil ((#("usi" 0 3 (fontified t)) . -9991) (undo-tree-id9898 . -3) (undo-tree-id9899 . -3) (undo-tree-id9900 . -3) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -2) (undo-tree-id9906 . -2) (undo-tree-id9907 . -2) (undo-tree-id9908 . -2) (undo-tree-id9909 . -3) (undo-tree-id9910 . -3) (undo-tree-id9911 . -3) (undo-tree-id9912 . -3) (undo-tree-id9913 . -3) (undo-tree-id9914 . -3) (undo-tree-id9915 . -3) (undo-tree-id9916 . -3) 9994) nil (26619 55426 881106 0) 0 nil])
([nil nil ((#("graphs " 0 7 (fontified t)) . -9984) (undo-tree-id9847 . -7) (undo-tree-id9848 . -7) (undo-tree-id9849 . -7) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -2) (undo-tree-id9855 . -2) (undo-tree-id9856 . -2) (undo-tree-id9857 . -2) (undo-tree-id9858 . -3) (undo-tree-id9859 . -3) (undo-tree-id9860 . -3) (undo-tree-id9861 . -3) (undo-tree-id9862 . -4) (undo-tree-id9863 . -4) (undo-tree-id9864 . -4) (undo-tree-id9865 . -4) (undo-tree-id9866 . -5) (undo-tree-id9867 . -5) (undo-tree-id9868 . -5) (undo-tree-id9869 . -5) (undo-tree-id9870 . -6) (undo-tree-id9871 . -6) (undo-tree-id9872 . -6) (undo-tree-id9873 . -6) (undo-tree-id9874 . -7) (undo-tree-id9875 . -7) (undo-tree-id9876 . -7) (undo-tree-id9877 . -7) (undo-tree-id9878 . -7) (undo-tree-id9879 . -7) (undo-tree-id9880 . -7) (undo-tree-id9881 . -7) (undo-tree-id9882 . -7) (undo-tree-id9883 . -7) (undo-tree-id9884 . -7) (undo-tree-id9885 . -7) (undo-tree-id9886 . -7) (undo-tree-id9887 . -7) (undo-tree-id9888 . -7) (undo-tree-id9889 . -7) (undo-tree-id9890 . -7) (undo-tree-id9891 . -7) (undo-tree-id9892 . -7) (undo-tree-id9893 . -7) (undo-tree-id9894 . -7) (undo-tree-id9895 . -7) (undo-tree-id9896 . -7) (undo-tree-id9897 . -7) 9991) nil (26619 55426 881070 0) 0 nil])
([nil nil ((#("store " 0 6 (fontified t)) . -9978) (undo-tree-id9771 . -6) (undo-tree-id9772 . -6) (undo-tree-id9773 . -6) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -2) (undo-tree-id9779 . -2) (undo-tree-id9780 . -2) (undo-tree-id9781 . -2) (undo-tree-id9782 . -3) (undo-tree-id9783 . -3) (undo-tree-id9784 . -3) (undo-tree-id9785 . -3) (undo-tree-id9786 . -4) (undo-tree-id9787 . -4) (undo-tree-id9788 . -4) (undo-tree-id9789 . -4) (undo-tree-id9790 . -5) (undo-tree-id9791 . -5) (undo-tree-id9792 . -5) (undo-tree-id9793 . -5) (undo-tree-id9794 . -6) (undo-tree-id9795 . -6) (undo-tree-id9796 . -6) (undo-tree-id9797 . -6) (undo-tree-id9798 . -6) (undo-tree-id9799 . -6) (undo-tree-id9800 . -6) (undo-tree-id9801 . -6) (undo-tree-id9802 . -6) (undo-tree-id9803 . -6) (undo-tree-id9804 . -6) (undo-tree-id9805 . -6) (undo-tree-id9806 . -6) (undo-tree-id9807 . -6) (undo-tree-id9808 . -6) (undo-tree-id9809 . -6) (undo-tree-id9810 . -6) (undo-tree-id9811 . -6) (undo-tree-id9812 . -6) (undo-tree-id9813 . -6) (undo-tree-id9814 . -6) (undo-tree-id9815 . -6) (undo-tree-id9816 . -6) (undo-tree-id9817 . -6) (undo-tree-id9818 . -6) (undo-tree-id9819 . -6) (undo-tree-id9820 . -6) (undo-tree-id9821 . -6) (undo-tree-id9822 . -6) (undo-tree-id9823 . -6) (undo-tree-id9824 . -6) (undo-tree-id9825 . -6) (undo-tree-id9826 . -6) (undo-tree-id9827 . -6) (undo-tree-id9828 . -6) (undo-tree-id9829 . -6) (undo-tree-id9830 . -6) (undo-tree-id9831 . -6) (undo-tree-id9832 . -6) (undo-tree-id9833 . -6) (undo-tree-id9834 . -6) (undo-tree-id9835 . -6) (undo-tree-id9836 . -6) (undo-tree-id9837 . -6) (undo-tree-id9838 . -6) (undo-tree-id9839 . -6) (undo-tree-id9840 . -6) (undo-tree-id9841 . -6) (undo-tree-id9842 . -6) (undo-tree-id9843 . -6) (undo-tree-id9844 . -6) (undo-tree-id9845 . -6) (undo-tree-id9846 . -6) 9984) nil (26619 55426 880974 0) 0 nil])
([nil nil ((#("can " 0 4 (fontified t)) . -9974) (undo-tree-id9672 . -4) (undo-tree-id9673 . -4) (undo-tree-id9674 . -4) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -2) (undo-tree-id9680 . -2) (undo-tree-id9681 . -2) (undo-tree-id9682 . -2) (undo-tree-id9683 . -3) (undo-tree-id9684 . -3) (undo-tree-id9685 . -3) (undo-tree-id9686 . -3) (undo-tree-id9687 . -4) (undo-tree-id9688 . -4) (undo-tree-id9689 . -4) (undo-tree-id9690 . -4) (undo-tree-id9691 . -4) (undo-tree-id9692 . -4) (undo-tree-id9693 . -4) (undo-tree-id9694 . -4) (undo-tree-id9695 . -4) (undo-tree-id9696 . -4) (undo-tree-id9697 . -4) (undo-tree-id9698 . -4) (undo-tree-id9699 . -4) (undo-tree-id9700 . -4) (undo-tree-id9701 . -4) (undo-tree-id9702 . -4) (undo-tree-id9703 . -4) (undo-tree-id9704 . -4) (undo-tree-id9705 . -4) (undo-tree-id9706 . -4) (undo-tree-id9707 . -4) (undo-tree-id9708 . -4) (undo-tree-id9709 . -4) (undo-tree-id9710 . -4) (undo-tree-id9711 . -4) (undo-tree-id9712 . -4) (undo-tree-id9713 . -4) (undo-tree-id9714 . -4) (undo-tree-id9715 . -4) (undo-tree-id9716 . -4) (undo-tree-id9717 . -4) (undo-tree-id9718 . -4) (undo-tree-id9719 . -4) (undo-tree-id9720 . -4) (undo-tree-id9721 . -4) (undo-tree-id9722 . -4) (undo-tree-id9723 . -4) (undo-tree-id9724 . -4) (undo-tree-id9725 . -4) (undo-tree-id9726 . -4) (undo-tree-id9727 . -4) (undo-tree-id9728 . -4) (undo-tree-id9729 . -4) (undo-tree-id9730 . -4) (undo-tree-id9731 . -4) (undo-tree-id9732 . -4) (undo-tree-id9733 . -4) (undo-tree-id9734 . -4) (undo-tree-id9735 . -4) (undo-tree-id9736 . -4) (undo-tree-id9737 . -4) (undo-tree-id9738 . -4) (undo-tree-id9739 . -4) (undo-tree-id9740 . -4) (undo-tree-id9741 . -4) (undo-tree-id9742 . -4) (undo-tree-id9743 . -4) (undo-tree-id9744 . -4) (undo-tree-id9745 . -4) (undo-tree-id9746 . -4) (undo-tree-id9747 . -4) (undo-tree-id9748 . -4) (undo-tree-id9749 . -4) (undo-tree-id9750 . -4) (undo-tree-id9751 . -4) (undo-tree-id9752 . -4) (undo-tree-id9753 . -4) (undo-tree-id9754 . -4) (undo-tree-id9755 . -4) (undo-tree-id9756 . -4) (undo-tree-id9757 . -4) (undo-tree-id9758 . -4) (undo-tree-id9759 . -4) (undo-tree-id9760 . -4) (undo-tree-id9761 . -4) (undo-tree-id9762 . -4) (undo-tree-id9763 . -4) (undo-tree-id9764 . -4) (undo-tree-id9765 . -4) (undo-tree-id9766 . -4) (undo-tree-id9767 . -4) (undo-tree-id9768 . -4) (undo-tree-id9769 . -4) (undo-tree-id9770 . -4) 9978) nil (26619 55426 880842 0) 0 nil])
([nil nil ((#("We " 0 3 (fontified t)) . -9971) (undo-tree-id9557 . -3) (undo-tree-id9558 . -3) (undo-tree-id9559 . -3) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -2) (undo-tree-id9565 . -2) (undo-tree-id9566 . -2) (undo-tree-id9567 . -2) (undo-tree-id9568 . -3) (undo-tree-id9569 . -3) (undo-tree-id9570 . -3) (undo-tree-id9571 . -3) (undo-tree-id9572 . -3) (undo-tree-id9573 . -3) (undo-tree-id9574 . -3) (undo-tree-id9575 . -3) (undo-tree-id9576 . -3) (undo-tree-id9577 . -3) (undo-tree-id9578 . -3) (undo-tree-id9579 . -3) (undo-tree-id9580 . -3) (undo-tree-id9581 . -3) (undo-tree-id9582 . -3) (undo-tree-id9583 . -3) (undo-tree-id9584 . -3) (undo-tree-id9585 . -3) (undo-tree-id9586 . -3) (undo-tree-id9587 . -3) (undo-tree-id9588 . -3) (undo-tree-id9589 . -3) (undo-tree-id9590 . -3) (undo-tree-id9591 . -3) (undo-tree-id9592 . -3) (undo-tree-id9593 . -3) (undo-tree-id9594 . -3) (undo-tree-id9595 . -3) (undo-tree-id9596 . -3) (undo-tree-id9597 . -3) (undo-tree-id9598 . -3) (undo-tree-id9599 . -3) (undo-tree-id9600 . -3) (undo-tree-id9601 . -3) (undo-tree-id9602 . -3) (undo-tree-id9603 . -3) (undo-tree-id9604 . -3) (undo-tree-id9605 . -3) (undo-tree-id9606 . -3) (undo-tree-id9607 . -3) (undo-tree-id9608 . -3) (undo-tree-id9609 . -3) (undo-tree-id9610 . -3) (undo-tree-id9611 . -3) (undo-tree-id9612 . -3) (undo-tree-id9613 . -3) (undo-tree-id9614 . -3) (undo-tree-id9615 . -3) (undo-tree-id9616 . -3) (undo-tree-id9617 . -3) (undo-tree-id9618 . -3) (undo-tree-id9619 . -3) (undo-tree-id9620 . -3) (undo-tree-id9621 . -3) (undo-tree-id9622 . -3) (undo-tree-id9623 . -3) (undo-tree-id9624 . -3) (undo-tree-id9625 . -3) (undo-tree-id9626 . -3) (undo-tree-id9627 . -3) (undo-tree-id9628 . -3) (undo-tree-id9629 . -3) (undo-tree-id9630 . -3) (undo-tree-id9631 . -3) (undo-tree-id9632 . -3) (undo-tree-id9633 . -3) (undo-tree-id9634 . -3) (undo-tree-id9635 . -3) (undo-tree-id9636 . -3) (undo-tree-id9637 . -3) (undo-tree-id9638 . -3) (undo-tree-id9639 . -3) (undo-tree-id9640 . -3) (undo-tree-id9641 . -3) (undo-tree-id9642 . -3) (undo-tree-id9643 . -3) (undo-tree-id9644 . -3) (undo-tree-id9645 . -3) (undo-tree-id9646 . -3) (undo-tree-id9647 . -3) (undo-tree-id9648 . -3) (undo-tree-id9649 . -3) (undo-tree-id9650 . -3) (undo-tree-id9651 . -3) (undo-tree-id9652 . -3) (undo-tree-id9653 . -3) (undo-tree-id9654 . -3) (undo-tree-id9655 . -3) (undo-tree-id9656 . -3) (undo-tree-id9657 . -3) (undo-tree-id9658 . -3) (undo-tree-id9659 . -3) (undo-tree-id9660 . -3) (undo-tree-id9661 . -3) (undo-tree-id9662 . -3) (undo-tree-id9663 . -3) (undo-tree-id9664 . -3) (undo-tree-id9665 . -3) (undo-tree-id9666 . -3) (undo-tree-id9667 . -3) (undo-tree-id9668 . -3) (undo-tree-id9669 . -3) (undo-tree-id9670 . -3) (undo-tree-id9671 . -3) 9974) nil (26619 55426 880670 0) 0 nil])
([nil nil ((9971 . 9988) (t 26619 55426 930533 810000)) nil (26619 55434 980309 0) 0 nil])
([nil nil ((9988 . 9992)) nil (26619 55434 980304 0) 0 nil])
([nil nil ((9944 . 9957) (#(" " 0 1 (fontified nil)) . 9940) (9939 . 9940) (9937 . 9944) (#(" " 0 1 (fontified nil)) . 9869) (9868 . 9869) (9936 . 9937) (t 26619 55435 35592 46000)) nil (26619 55487 668583 0) 0 nil])
([nil nil ((9957 . 9964)) nil (26619 55487 668579 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -9963) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) 9964) nil (26619 55487 668577 0) 0 nil])
([nil nil ((9963 . 9967)) nil (26619 55487 668571 0) 0 nil])
([nil nil ((#("and " 0 4 (fontified t)) . -9963) (undo-tree-id10366 . -4) (undo-tree-id10367 . -4) (undo-tree-id10368 . -4) 9967) nil (26619 55487 668569 0) 0 nil])
([nil nil ((9963 . 9984)) nil (26619 55487 668562 0) 0 nil])
([nil nil ((9984 . 9990)) nil (26619 55487 668561 0) 0 nil])
([nil nil ((9990 . 10008)) nil (26619 55487 668560 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -10006) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (#("t" 0 1 (fontified t)) . -10007) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) 10008) nil (26619 55487 668556 0) 0 nil])
([nil nil ((10006 . 10011)) nil (26619 55487 668508 0) 0 nil])
([nil nil ((10012 . 10018) (#(" " 0 1 (fontified nil)) . 10001) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (10000 . 10001) (10011 . 10012)) nil (26619 55487 668506 0) 0 nil])
([nil nil ((#("weight" 0 6 (fontified t)) . -10012) (undo-tree-id10295 . -6) (undo-tree-id10296 . -6) (undo-tree-id10297 . -6) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -2) (undo-tree-id10303 . -2) (undo-tree-id10304 . -2) (undo-tree-id10305 . -2) (undo-tree-id10306 . -3) (undo-tree-id10307 . -3) (undo-tree-id10308 . -3) (undo-tree-id10309 . -3) (undo-tree-id10310 . -4) (undo-tree-id10311 . -4) (undo-tree-id10312 . -4) (undo-tree-id10313 . -4) (undo-tree-id10314 . -5) (undo-tree-id10315 . -5) (undo-tree-id10316 . -5) (undo-tree-id10317 . -5) (undo-tree-id10318 . -6) (undo-tree-id10319 . -6) (undo-tree-id10320 . -6) (undo-tree-id10321 . -6) (undo-tree-id10322 . -6) (undo-tree-id10323 . -6) (undo-tree-id10324 . -6) (undo-tree-id10325 . -6) (undo-tree-id10326 . -6) (undo-tree-id10327 . -6) (undo-tree-id10328 . -6) 10018) nil (26619 55487 668489 0) 0 nil])
([nil nil ((#("associated " 0 11 (fontified t)) . -10001) (undo-tree-id10191 . -11) (undo-tree-id10192 . -11) (undo-tree-id10193 . -11) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -2) (undo-tree-id10199 . -2) (undo-tree-id10200 . -2) (undo-tree-id10201 . -2) (undo-tree-id10202 . -3) (undo-tree-id10203 . -3) (undo-tree-id10204 . -3) (undo-tree-id10205 . -3) (undo-tree-id10206 . -4) (undo-tree-id10207 . -4) (undo-tree-id10208 . -4) (undo-tree-id10209 . -4) (undo-tree-id10210 . -5) (undo-tree-id10211 . -5) (undo-tree-id10212 . -5) (undo-tree-id10213 . -5) (undo-tree-id10214 . -5) (undo-tree-id10215 . -5) (undo-tree-id10216 . -5) (undo-tree-id10217 . -5) (undo-tree-id10218 . -5) (undo-tree-id10219 . -5) (undo-tree-id10220 . -5) (undo-tree-id10221 . -5) (undo-tree-id10222 . -5) (undo-tree-id10223 . -5) (undo-tree-id10224 . -5) (undo-tree-id10225 . -5) (undo-tree-id10226 . -5) (undo-tree-id10227 . -5) (undo-tree-id10228 . -5) (undo-tree-id10229 . -5) (undo-tree-id10230 . -5) (undo-tree-id10231 . -5) (undo-tree-id10232 . -5) (undo-tree-id10233 . -6) (undo-tree-id10234 . -6) (undo-tree-id10235 . -6) (undo-tree-id10236 . -6) (undo-tree-id10237 . -7) (undo-tree-id10238 . -7) (undo-tree-id10239 . -7) (undo-tree-id10240 . -7) (undo-tree-id10241 . -7) (undo-tree-id10242 . -7) (undo-tree-id10243 . -7) (undo-tree-id10244 . -8) (undo-tree-id10245 . -8) (undo-tree-id10246 . -8) (undo-tree-id10247 . -8) (undo-tree-id10248 . -9) (undo-tree-id10249 . -9) (undo-tree-id10250 . -9) (undo-tree-id10251 . -9) (undo-tree-id10252 . -10) (undo-tree-id10253 . -10) (undo-tree-id10254 . -10) (undo-tree-id10255 . -10) (undo-tree-id10256 . -11) (undo-tree-id10257 . -11) (undo-tree-id10258 . -11) (undo-tree-id10259 . -11) (undo-tree-id10260 . -11) (undo-tree-id10261 . -11) (undo-tree-id10262 . -11) (undo-tree-id10263 . -11) (undo-tree-id10264 . -11) (undo-tree-id10265 . -11) (undo-tree-id10266 . -11) (undo-tree-id10267 . -11) (undo-tree-id10268 . -11) (undo-tree-id10269 . -11) (undo-tree-id10270 . -11) (undo-tree-id10271 . -11) (undo-tree-id10272 . -11) (undo-tree-id10273 . -11) (undo-tree-id10274 . -11) (undo-tree-id10275 . -11) (undo-tree-id10276 . -11) (undo-tree-id10277 . -11) (undo-tree-id10278 . -11) (undo-tree-id10279 . -11) (undo-tree-id10280 . -11) (undo-tree-id10281 . -11) (undo-tree-id10282 . -11) (undo-tree-id10283 . -11) (undo-tree-id10284 . -11) (undo-tree-id10285 . -11) (undo-tree-id10286 . -11) (undo-tree-id10287 . -11) (undo-tree-id10288 . -11) (undo-tree-id10289 . -11) (undo-tree-id10290 . -11) (undo-tree-id10291 . -11) (undo-tree-id10292 . -11) (undo-tree-id10293 . -11) (undo-tree-id10294 . -11) 10012) nil (26619 55487 668422 0) 0 nil])
([nil nil ((#("an
" 0 3 (fontified t)) . -9998) (undo-tree-id10067 . -3) (undo-tree-id10068 . -3) (undo-tree-id10069 . -3) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -2) (undo-tree-id10075 . -2) (undo-tree-id10076 . -2) (undo-tree-id10077 . -2) (undo-tree-id10078 . -3) (undo-tree-id10079 . -3) (undo-tree-id10080 . -3) (undo-tree-id10081 . -3) (undo-tree-id10082 . -3) (undo-tree-id10083 . -3) (undo-tree-id10084 . -3) (undo-tree-id10085 . -3) (undo-tree-id10086 . -3) (undo-tree-id10087 . -3) (undo-tree-id10088 . -3) (undo-tree-id10089 . -3) (undo-tree-id10090 . -3) (undo-tree-id10091 . -3) (undo-tree-id10092 . -3) (undo-tree-id10093 . -3) (undo-tree-id10094 . -3) (undo-tree-id10095 . -3) (undo-tree-id10096 . -3) (undo-tree-id10097 . -3) (undo-tree-id10098 . -3) (undo-tree-id10099 . -3) (undo-tree-id10100 . -3) (undo-tree-id10101 . -3) (undo-tree-id10102 . -3) (undo-tree-id10103 . -3) (undo-tree-id10104 . -3) (undo-tree-id10105 . -3) (undo-tree-id10106 . -3) (undo-tree-id10107 . -3) (undo-tree-id10108 . -3) (undo-tree-id10109 . -3) (undo-tree-id10110 . -3) (undo-tree-id10111 . -3) (undo-tree-id10112 . -3) (undo-tree-id10113 . -3) (undo-tree-id10114 . -3) (undo-tree-id10115 . -3) (undo-tree-id10116 . -3) (undo-tree-id10117 . -3) (undo-tree-id10118 . -3) (undo-tree-id10119 . -3) (undo-tree-id10120 . -3) (undo-tree-id10121 . -3) (undo-tree-id10122 . -3) (undo-tree-id10123 . -3) (undo-tree-id10124 . -3) (undo-tree-id10125 . -3) (undo-tree-id10126 . -3) (undo-tree-id10127 . -3) (undo-tree-id10128 . -3) (undo-tree-id10129 . -3) (undo-tree-id10130 . -3) (undo-tree-id10131 . -3) (undo-tree-id10132 . -3) (undo-tree-id10133 . -3) (undo-tree-id10134 . -3) (undo-tree-id10135 . -3) (undo-tree-id10136 . -3) (undo-tree-id10137 . -3) (undo-tree-id10138 . -3) (undo-tree-id10139 . -3) (undo-tree-id10140 . -3) (undo-tree-id10141 . -3) (undo-tree-id10142 . -3) (undo-tree-id10143 . -3) (undo-tree-id10144 . -3) (undo-tree-id10145 . -3) (undo-tree-id10146 . -3) (undo-tree-id10147 . -3) (undo-tree-id10148 . -3) (undo-tree-id10149 . -3) (undo-tree-id10150 . -3) (undo-tree-id10151 . -3) (undo-tree-id10152 . -3) (undo-tree-id10153 . -3) (undo-tree-id10154 . -3) (undo-tree-id10155 . -3) (undo-tree-id10156 . -3) (undo-tree-id10157 . -3) (undo-tree-id10158 . -3) (undo-tree-id10159 . -3) (undo-tree-id10160 . -3) (undo-tree-id10161 . -3) (undo-tree-id10162 . -3) (undo-tree-id10163 . -3) (undo-tree-id10164 . -3) (undo-tree-id10165 . -3) (undo-tree-id10166 . -3) (undo-tree-id10167 . -3) (undo-tree-id10168 . -3) (undo-tree-id10169 . -3) (undo-tree-id10170 . -3) (undo-tree-id10171 . -3) (undo-tree-id10172 . -3) (undo-tree-id10173 . -3) (undo-tree-id10174 . -3) (undo-tree-id10175 . -3) (undo-tree-id10176 . -3) (undo-tree-id10177 . -3) (undo-tree-id10178 . -3) (undo-tree-id10179 . -3) (undo-tree-id10180 . -3) (undo-tree-id10181 . -3) (undo-tree-id10182 . -3) (undo-tree-id10183 . -3) (undo-tree-id10184 . -3) (undo-tree-id10185 . -3) (undo-tree-id10186 . -3) (undo-tree-id10187 . -3) (undo-tree-id10188 . -3) (undo-tree-id10189 . -3) (undo-tree-id10190 . -3) 10001) nil (26619 55487 668165 0) 0 nil])
([nil nil ((#("have " 0 5 (fontified t)) . -9993) (undo-tree-id9917 . -5) (undo-tree-id9918 . -5) (undo-tree-id9919 . -5) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -2) (undo-tree-id9925 . -2) (undo-tree-id9926 . -2) (undo-tree-id9927 . -2) (undo-tree-id9928 . -3) (undo-tree-id9929 . -3) (undo-tree-id9930 . -3) (undo-tree-id9931 . -3) (undo-tree-id9932 . -4) (undo-tree-id9933 . -4) (undo-tree-id9934 . -4) (undo-tree-id9935 . -4) (undo-tree-id9936 . -5) (undo-tree-id9937 . -5) (undo-tree-id9938 . -5) (undo-tree-id9939 . -5) (undo-tree-id9940 . -5) (undo-tree-id9941 . -5) (undo-tree-id9942 . -5) (undo-tree-id9943 . -5) (undo-tree-id9944 . -5) (undo-tree-id9945 . -5) (undo-tree-id9946 . -5) (undo-tree-id9947 . -5) (undo-tree-id9948 . -5) (undo-tree-id9949 . -5) (undo-tree-id9950 . -5) (undo-tree-id9951 . -5) (undo-tree-id9952 . -5) (undo-tree-id9953 . -5) (undo-tree-id9954 . -5) (undo-tree-id9955 . -5) (undo-tree-id9956 . -5) (undo-tree-id9957 . -5) (undo-tree-id9958 . -5) (undo-tree-id9959 . -5) (undo-tree-id9960 . -5) (undo-tree-id9961 . -5) (undo-tree-id9962 . -5) (undo-tree-id9963 . -5) (undo-tree-id9964 . -5) (undo-tree-id9965 . -5) (undo-tree-id9966 . -5) (undo-tree-id9967 . -5) (undo-tree-id9968 . -5) (undo-tree-id9969 . -5) (undo-tree-id9970 . -5) (undo-tree-id9971 . -5) (undo-tree-id9972 . -5) (undo-tree-id9973 . -5) (undo-tree-id9974 . -5) (undo-tree-id9975 . -5) (undo-tree-id9976 . -5) (undo-tree-id9977 . -5) (undo-tree-id9978 . -5) (undo-tree-id9979 . -5) (undo-tree-id9980 . -5) (undo-tree-id9981 . -5) (undo-tree-id9982 . -5) (undo-tree-id9983 . -5) (undo-tree-id9984 . -5) (undo-tree-id9985 . -5) (undo-tree-id9986 . -5) (undo-tree-id9987 . -5) (undo-tree-id9988 . -5) (undo-tree-id9989 . -5) (undo-tree-id9990 . -5) (undo-tree-id9991 . -5) (undo-tree-id9992 . -5) (undo-tree-id9993 . -5) (undo-tree-id9994 . -5) (undo-tree-id9995 . -5) (undo-tree-id9996 . -5) (undo-tree-id9997 . -5) (undo-tree-id9998 . -5) (undo-tree-id9999 . -5) (undo-tree-id10000 . -5) (undo-tree-id10001 . -5) (undo-tree-id10002 . -5) (undo-tree-id10003 . -5) (undo-tree-id10004 . -5) (undo-tree-id10005 . -5) (undo-tree-id10006 . -5) (undo-tree-id10007 . -5) (undo-tree-id10008 . -5) (undo-tree-id10009 . -5) (undo-tree-id10010 . -5) (undo-tree-id10011 . -5) (undo-tree-id10012 . -5) (undo-tree-id10013 . -5) (undo-tree-id10014 . -5) (undo-tree-id10015 . -5) (undo-tree-id10016 . -5) (undo-tree-id10017 . -5) (undo-tree-id10018 . -5) (undo-tree-id10019 . -5) (undo-tree-id10020 . -5) (undo-tree-id10021 . -5) (undo-tree-id10022 . -5) (undo-tree-id10023 . -5) (undo-tree-id10024 . -5) (undo-tree-id10025 . -5) (undo-tree-id10026 . -5) (undo-tree-id10027 . -5) (undo-tree-id10028 . -5) (undo-tree-id10029 . -5) (undo-tree-id10030 . -5) (undo-tree-id10031 . -5) (undo-tree-id10032 . -5) (undo-tree-id10033 . -5) (undo-tree-id10034 . -5) (undo-tree-id10035 . -5) (undo-tree-id10036 . -5) (undo-tree-id10037 . -5) (undo-tree-id10038 . -5) (undo-tree-id10039 . -5) (undo-tree-id10040 . -5) (undo-tree-id10041 . -5) (undo-tree-id10042 . -5) (undo-tree-id10043 . -5) (undo-tree-id10044 . -5) (undo-tree-id10045 . -5) (undo-tree-id10046 . -5) (undo-tree-id10047 . -5) (undo-tree-id10048 . -5) (undo-tree-id10049 . -5) (undo-tree-id10050 . -5) (undo-tree-id10051 . -5) (undo-tree-id10052 . -5) (undo-tree-id10053 . -5) (undo-tree-id10054 . -5) (undo-tree-id10055 . -5) (undo-tree-id10056 . -5) (undo-tree-id10057 . -5) (undo-tree-id10058 . -5) (undo-tree-id10059 . -5) (undo-tree-id10060 . -5) (undo-tree-id10061 . -5) (undo-tree-id10062 . -5) (undo-tree-id10063 . -5) (undo-tree-id10064 . -5) (undo-tree-id10065 . -5) (undo-tree-id10066 . -5) 9998) nil (26619 55487 667961 0) 0 nil])
([nil nil ((10034 . 10039) (10013 . 10034) (#("two" 0 3 (fontified t)) . -10013) (undo-tree-id10372 . -3) (undo-tree-id10373 . -3) (undo-tree-id10374 . -3) 10016 (10013 . 10016) (#(" " 0 1 (fontified nil)) . 10005) (10004 . 10005) (10012 . 10013) (10004 . 10012) (#("b" 0 1 (fontified t)) . -10004) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (#("e" 0 1 (fontified t)) . -10005) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (#("t" 0 1 (fontified t)) . -10006) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (#("w" 0 1 (fontified t)) . -10007) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (#("e" 0 1 (fontified t)) . -10008) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (#("e" 0 1 (fontified t)) . -10009) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) 10010 (10004 . 10010) (9996 . 10004) (9975 . 9996) (#("relationship " 0 13 (fontified t)) . -9975) (undo-tree-id10393 . -13) (undo-tree-id10394 . -13) (undo-tree-id10395 . -13) 9988 (#("between " 0 8 (fontified t)) . -9988) (undo-tree-id10396 . -8) (undo-tree-id10397 . -8) (undo-tree-id10398 . -8) 9996 (#("two " 0 4 (fontified t)) . -9996) (undo-tree-id10399 . -4) (undo-tree-id10400 . -4) (undo-tree-id10401 . -4) 10000 (#("nodes," 0 6 (fontified t)) . -10000) (undo-tree-id10402 . -6) (undo-tree-id10403 . -6) (undo-tree-id10404 . -6) 10006 (#("
" 0 1 (fontified t)) . -10006) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) 10007 (#("called " 0 7 (fontified t)) . -10007) (undo-tree-id10408 . -7) (undo-tree-id10409 . -7) (undo-tree-id10410 . -7) 10014 (#("a " 0 2 (fontified t)) . -10014) (undo-tree-id10411 . -2) (undo-tree-id10412 . -2) (undo-tree-id10413 . -2) 10016 (#("weighted " 0 9 (fontified t)) . -10016) (undo-tree-id10414 . -9) (undo-tree-id10415 . -9) (undo-tree-id10416 . -9) 10025 (#("grap" 0 4 (fontified t)) . -10025) (undo-tree-id10417 . -4) (undo-tree-id10418 . -4) (undo-tree-id10419 . -4) 10029 (10014 . 10029) (#(" " 0 1 (fontified nil)) . 10007) (10006 . 10007) (10010 . 10014) (9989 . 10010) (9968 . 9989) (9958 . 9968) (9944 . 9958) (#(" " 0 1 (fontified nil)) . 9940) (9939 . 9940) (9937 . 9944) (#("We
" 0 3 (fontified t)) . -9937) (undo-tree-id10420 . -3) (undo-tree-id10421 . -3) (undo-tree-id10422 . -3) 9940 (#("can " 0 4 (fontified t)) . -9940) (undo-tree-id10423 . -4) (undo-tree-id10424 . -4) (undo-tree-id10425 . -4) 9944 (#("also " 0 5 (fontified t)) . -9944) (undo-tree-id10426 . -5) (undo-tree-id10427 . -5) (undo-tree-id10428 . -5) 9949 (#("have " 0 5 (fontified t)) . -9949) (undo-tree-id10429 . -5) (undo-tree-id10430 . -5) (undo-tree-id10431 . -5) 9954 (#("weighted " 0 9 (fontified t)) . -9954) (undo-tree-id10432 . -9) (undo-tree-id10433 . -9) (undo-tree-id10434 . -9) 9963 (#("graphs " 0 7 (fontified t)) . -9963) (undo-tree-id10435 . -7) (undo-tree-id10436 . -7) (undo-tree-id10437 . -7) 9970 (#("where " 0 6 (fontified t)) . -9970) (undo-tree-id10438 . -6) (undo-tree-id10439 . -6) (undo-tree-id10440 . -6) 9976 (#("edge " 0 5 (fontified t)) . -9976) (undo-tree-id10441 . -5) (undo-tree-id10442 . -5) (undo-tree-id10443 . -5) 9981 (#("connections " 0 12 (fontified t)) . -9981) (undo-tree-id10444 . -12) (undo-tree-id10445 . -12) (undo-tree-id10446 . -12) (undo-tree-id10447 . -12) 9993 (t 26619 55487 718589 189000)) nil (26619 55533 363749 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -10091) (undo-tree-id10454 . -4) (undo-tree-id10455 . -4) (undo-tree-id10456 . -4) (undo-tree-id10457 . -4) 10095 (t 26619 55533 416640 312000)) nil (26619 55548 798129 0) 0 nil])
([nil nil ((10091 . 10110)) nil (26619 55548 798120 0) 0 nil])
([nil nil ((#("ebtween" 0 7 (fontified t)) . -10103) (undo-tree-id10451 . -7) (undo-tree-id10452 . -7) (undo-tree-id10453 . -7) 10110) nil (26619 55548 798118 0) 0 nil])
([nil nil ((10103 . 10111)) nil (26619 55548 798111 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -10110) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) 10111) nil (26619 55548 798109 0) 0 nil])
([nil nil ((10110 . 10126)) nil (26619 55548 798093 0) 0 nil])
([nil nil ((10126 . 10128)) nil (26619 55548 798088 0) 0 nil])
([nil nil ((10128 . 10135) (t 26619 55548 849179 569000)) nil (26619 55577 430953 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10133) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (#("o" 0 1 (fontified t)) . -10134) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) 10135) nil (26619 55577 430951 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10132) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) 10133) nil (26619 55577 430938 0) 0 nil])
([nil nil ((#("The " 0 4 (fontified t)) . -10128) (undo-tree-id10518 . -4) (undo-tree-id10519 . -4) (undo-tree-id10520 . -4) 10132) nil (26619 55577 430931 0) 0 nil])
([nil nil ((#("graphs. " 0 8 (fontified t)) . -10120) (undo-tree-id10515 . -8) (undo-tree-id10516 . -8) (undo-tree-id10517 . -8) 10128) nil (26619 55577 430924 0) 0 nil])
([nil nil ((#("in " 0 3 (fontified t)) . -10117) (undo-tree-id10512 . -3) (undo-tree-id10513 . -3) (undo-tree-id10514 . -3) 10120) nil (26619 55577 430917 0) 0 nil])
([nil nil ((#("nodes " 0 6 (fontified t)) . -10111) (undo-tree-id10509 . -6) (undo-tree-id10510 . -6) (undo-tree-id10511 . -6) 10117) nil (26619 55577 430910 0) 0 nil])
([nil nil ((#("between " 0 8 (fontified t)) . -10103) (undo-tree-id10506 . -8) (undo-tree-id10507 . -8) (undo-tree-id10508 . -8) 10111) nil (26619 55577 430903 0) 0 nil])
([nil nil ((#("connections " 0 12 (fontified t)) . -10091) (undo-tree-id10503 . -12) (undo-tree-id10504 . -12) (undo-tree-id10505 . -12) 10103) nil (26619 55577 430895 0) 0 nil])
([nil nil ((#("model " 0 6 (fontified t)) . -10085) (undo-tree-id10500 . -6) (undo-tree-id10501 . -6) (undo-tree-id10502 . -6) 10091) nil (26619 55577 430888 0) 0 nil])
([nil nil ((#("to " 0 3 (fontified t)) . -10082) (undo-tree-id10497 . -3) (undo-tree-id10498 . -3) (undo-tree-id10499 . -3) 10085) nil (26619 55577 430881 0) 0 nil])
([nil nil ((#("want " 0 5 (fontified t)) . -10077) (undo-tree-id10494 . -5) (undo-tree-id10495 . -5) (undo-tree-id10496 . -5) 10082) nil (26619 55577 430874 0) 0 nil])
([nil nil ((#("We " 0 3 (fontified t)) . -10074) (undo-tree-id10491 . -3) (undo-tree-id10492 . -3) (undo-tree-id10493 . -3) 10077) nil (26619 55577 430867 0) 0 nil])
([nil nil ((10074 . 10078)) nil (26619 55577 430860 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10077) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) 10078) nil (26619 55577 430858 0) 0 nil])
([nil nil ((10077 . 10098)) nil (26619 55577 430851 0) 0 nil])
([nil nil ((10098 . 10117)) nil (26619 55577 430850 0) 0 nil])
([nil nil ((10117 . 10138)) nil (26619 55577 430849 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 10144) (10143 . 10144) (10138 . 10152)) nil (26619 55577 430847 0) 0 nil])
([nil nil ((#("storing " 0 8 (fontified t)) . -10144) (undo-tree-id10473 . -8) (undo-tree-id10474 . -8) (undo-tree-id10475 . -8) (undo-tree-id10476 . -5) (undo-tree-id10477 . -6) (undo-tree-id10478 . -6) (undo-tree-id10479 . -7) (undo-tree-id10480 . -7) (undo-tree-id10481 . -7) (undo-tree-id10482 . -7) (undo-tree-id10483 . -8) (undo-tree-id10484 . -8) (undo-tree-id10485 . -8) (undo-tree-id10486 . -8) (undo-tree-id10487 . -8) 10152) nil (26619 55577 430844 0) 0 nil])
([nil nil ((10144 . 10146)) nil (26619 55577 430816 0) 0 nil])
([nil nil ((#("re" 0 2 (fontified t)) . -10144) (undo-tree-id10458 . -2) (undo-tree-id10459 . -2) (undo-tree-id10460 . -2) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -2) (undo-tree-id10466 . -2) (undo-tree-id10467 . -2) (undo-tree-id10468 . -2) (undo-tree-id10469 . -2) (undo-tree-id10470 . -2) (undo-tree-id10471 . -2) (undo-tree-id10472 . -2) 10146) nil (26619 55577 430813 0) 0 nil])
([nil nil ((10144 . 10165)) nil (26619 55577 430779 0) 0 nil])
([nil nil ((10165 . 10167)) nil (26619 55577 430774 0) 0 nil])
([nil nil ((10163 . 10164) (#(" " 0 1 (fontified t)) . -10163) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) 10164 (#("in " 0 3 (fontified t)) . -10164) (undo-tree-id10673 . -3) (undo-tree-id10674 . -3) (undo-tree-id10675 . -3) (undo-tree-id10676 . -3) 10167 (t 26619 55577 482880 940000)) nil (26619 55721 170478 0) 0 nil])
([nil nil (10182) nil (26619 55721 170464 0) 0 nil])
([nil nil ((10177 . 10188) (#("u" 0 1 (face (font-latex-bold-face) fontified t)) . -10177) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) 10178 (10174 . 10178) (10173 . 10175) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -10173) (10173 . 10174) (10167 . 10173) (10166 . 10167)) nil (26619 55721 170461 0) 0 nil])
([nil nil ((#("% Adjacency List" 0 2 (face font-lock-comment-face fontified t) 2 16 (face font-lock-comment-face fontified t)) . 10189) (undo-tree-id10651 . -13) (undo-tree-id10652 . -13) (undo-tree-id10653 . -15) (undo-tree-id10654 . -16) (undo-tree-id10655 . -13) (undo-tree-id10656 . -13) (undo-tree-id10657 . -13) (undo-tree-id10658 . -13) (undo-tree-id10659 . -13) (undo-tree-id10660 . -13) (undo-tree-id10661 . -13) (undo-tree-id10662 . -13) (undo-tree-id10663 . -13) (undo-tree-id10664 . -13) (undo-tree-id10665 . -13) (undo-tree-id10666 . -16)) nil (26619 55721 170451 0) 0 nil])
([nil nil ((10190 . 10192) (10189 . 10190)) nil (26619 55721 170425 0) 0 nil])
([nil nil ((10188 . 10189)) nil (26619 55721 170423 0) 0 nil])
([nil nil ((10193 . 10194) 10189) nil (26619 55721 170421 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -10191) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (#("\\" 0 1 (face font-latex-warning-face fontified t)) . -10192) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (#("
" 0 1 (fontified t)) . -10193) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) 10194) nil (26619 55721 170412 0) 0 nil])
([nil nil ((10191 . 10197)) nil (26619 55721 170210 0) 0 nil])
([nil nil ((10233 . 10237) (10212 . 10233) (10191 . 10212) (#("store " 0 6 (fontified t)) . -10191) (undo-tree-id10711 . -6) (undo-tree-id10712 . -6) (undo-tree-id10713 . -6) 10197 (#("all " 0 4 (fontified t)) . -10197) (undo-tree-id10714 . -4) (undo-tree-id10715 . -4) (undo-tree-id10716 . -4) 10201 (10197 . 10201) (t 26619 55721 224424 574000)) nil (26619 55753 222042 0) 0 nil])
([nil nil ((10239 . 10246) (10218 . 10239) (10197 . 10218)) nil (26619 55753 222027 0) 0 nil])
([nil nil ((#("containing all the neighbours of a node" 0 39 (fontified t)) . 10247) (undo-tree-id10677 . -38) (undo-tree-id10678 . -38) (undo-tree-id10679 . -38) (undo-tree-id10680 . -38) (undo-tree-id10681 . -38) (undo-tree-id10682 . -38) (undo-tree-id10683 . -9) (undo-tree-id10684 . -9) (undo-tree-id10685 . -9) (undo-tree-id10686 . -9) (undo-tree-id10687 . -13) (undo-tree-id10688 . -13) (undo-tree-id10689 . -13) (undo-tree-id10690 . -13) (undo-tree-id10691 . -17) (undo-tree-id10692 . -28) (undo-tree-id10693 . -28) (undo-tree-id10694 . -28) (undo-tree-id10695 . -28) (undo-tree-id10696 . -31) (undo-tree-id10697 . -31) (undo-tree-id10698 . -31) (undo-tree-id10699 . -31) (undo-tree-id10700 . -33) (undo-tree-id10701 . -33) (undo-tree-id10702 . -33) (undo-tree-id10703 . -33) (undo-tree-id10704 . -38) (undo-tree-id10705 . -38) (undo-tree-id10706 . -38) (undo-tree-id10707 . -38) (undo-tree-id10708 . -38) (undo-tree-id10709 . -39) (undo-tree-id10710 . -39) 10285) nil (26619 55753 222019 0) 0 nil])
([nil nil ((10247 . 10248) (t 26619 55753 269220 798000) 10247) nil (26619 55799 698707 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10411 . 10412) (nil fontified nil 10248 . 10412) (10248 . 10412)) nil (26619 55799 698701 0) 0 nil])
([nil nil ((#("," 0 1 (face (font-lock-function-name-face) fontified t)) . -108) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (#(" " 0 1 (face (font-lock-function-name-face) fontified t)) . -109) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) 110 (#("graphs" 0 6 (face (font-lock-function-name-face) fontified t)) . -110) (undo-tree-id10791 . -6) (undo-tree-id10792 . -6) (undo-tree-id10793 . -6) (undo-tree-id10794 . -6) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -2) (undo-tree-id10799 . -2) (undo-tree-id10800 . -2) (undo-tree-id10801 . -3) (undo-tree-id10802 . -3) (undo-tree-id10803 . -3) (undo-tree-id10804 . -4) (undo-tree-id10805 . -4) (undo-tree-id10806 . -4) (undo-tree-id10807 . -5) (undo-tree-id10808 . -5) (undo-tree-id10809 . -5) (undo-tree-id10810 . -6) (undo-tree-id10811 . -6) (undo-tree-id10812 . -6) (undo-tree-id10813 . -6) (undo-tree-id10814 . -6) (undo-tree-id10815 . -6) (undo-tree-id10816 . -6) (undo-tree-id10817 . -6) 116 (108 . 116) (t 26619 55799 752102 18000)) nil (26619 55856 354145 0) 0 nil])
([nil nil ((161 . 169)) nil (26619 55856 353952 0) 0 nil])
([nil nil ((169 . 183) (t 26619 55856 414948 486000)) nil (26619 55881 843421 0) 0 nil])
([nil nil ((187 . 193) (171 . 173) (#(" " 0 1 (fontified nil)) . 171) (170 . 171) (183 . 185) (t 26619 55881 903706 318000)) nil (26619 55885 300797 0) 0 nil])
([nil nil ((#("\\begin{tikzpicture}
  \\graph [tree layout, grow down, sibling distance=2cm, level distance=2cm] {
    A -- {B -- {D, E -- G}, C -- {F -- H}}
  };
\\end{tikzpicture}
" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 18 (face (font-lock-function-name-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (fontified t) 20 22 (fontified t) 22 28 (face (font-latex-sedate-face) fontified t) 28 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 94 (fontified t) 94 95 (face (rainbow-delimiters-depth-1-face) fontified t) 95 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-2-face) fontified t) 108 113 (fontified t) 113 114 (face (rainbow-delimiters-depth-3-face) fontified t) 114 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-3-face) fontified t) 124 131 (fontified t) 131 132 (face (rainbow-delimiters-depth-3-face) fontified t) 132 138 (fontified t) 138 139 (face (rainbow-delimiters-depth-3-face) fontified t) 139 140 (face (rainbow-delimiters-depth-2-face) fontified t) 140 143 (fontified t) 143 144 (face (rainbow-delimiters-depth-1-face) fontified t) 144 146 (fontified t) 146 147 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 147 150 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 150 151 (face (rainbow-delimiters-depth-1-face) fontified t) 151 162 (face (font-lock-function-name-face) fontified t) 162 163 (face (rainbow-delimiters-depth-1-face) fontified t) 163 164 (fontified t rear-nonsticky t)) . 10280) (undo-tree-id10825 . -163) (undo-tree-id10826 . -163) (undo-tree-id10827 . -19) (undo-tree-id10828 . -163) (undo-tree-id10829 . -163) (undo-tree-id10830 . -164) (undo-tree-id10831 . -164) (undo-tree-id10832 . -95) (undo-tree-id10833 . -95) (undo-tree-id10834 . -95) (undo-tree-id10835 . -163) (undo-tree-id10836 . -163) (undo-tree-id10837 . -19) (undo-tree-id10838 . -19) (undo-tree-id10839 . -18) (undo-tree-id10840 . -19) (undo-tree-id10841 . -18) (undo-tree-id10842 . -19) (undo-tree-id10843 . -18) (undo-tree-id10844 . -19) (undo-tree-id10845 . -18) (undo-tree-id10846 . -19) (undo-tree-id10847 . -18) (undo-tree-id10848 . -19) (undo-tree-id10849 . -18) (undo-tree-id10850 . -19) (undo-tree-id10851 . -18) (undo-tree-id10852 . -19) (undo-tree-id10853 . -6) (undo-tree-id10854 . -7) (undo-tree-id10855 . -6) (undo-tree-id10856 . -5) (undo-tree-id10857 . -6) (undo-tree-id10858 . -19) (undo-tree-id10859 . -19) (undo-tree-id10860 . -19) (undo-tree-id10861 . -44) (undo-tree-id10862 . -44) (undo-tree-id10863 . -44) (undo-tree-id10864 . -44) (undo-tree-id10865 . -44) (undo-tree-id10866 . -19) (undo-tree-id10867 . -19) (undo-tree-id10868 . -18) (undo-tree-id10869 . -19) (undo-tree-id10870 . -18) (undo-tree-id10871 . -19) (undo-tree-id10872 . -18) (undo-tree-id10873 . -19) (undo-tree-id10874 . -18) (undo-tree-id10875 . -19) (undo-tree-id10876 . -18) (undo-tree-id10877 . -19) (undo-tree-id10878 . -18) (undo-tree-id10879 . -19) (undo-tree-id10880 . -18) (undo-tree-id10881 . -19) (undo-tree-id10882 . -6) (undo-tree-id10883 . -7) (undo-tree-id10884 . -6) (undo-tree-id10885 . -5) (undo-tree-id10886 . -6) (undo-tree-id10887 . -19) (undo-tree-id10888 . -19) (undo-tree-id10889 . -19) (undo-tree-id10890 . -19) (undo-tree-id10891 . -19) (undo-tree-id10892 . -18) (undo-tree-id10893 . -19) (undo-tree-id10894 . -18) (undo-tree-id10895 . -19) (undo-tree-id10896 . -18) (undo-tree-id10897 . -19) (undo-tree-id10898 . -18) (undo-tree-id10899 . -19) (undo-tree-id10900 . -18) (undo-tree-id10901 . -19) (undo-tree-id10902 . -18) (undo-tree-id10903 . -19) (undo-tree-id10904 . -18) (undo-tree-id10905 . -19) (undo-tree-id10906 . -6) (undo-tree-id10907 . -7) (undo-tree-id10908 . -6) (undo-tree-id10909 . -5) (undo-tree-id10910 . -6) (undo-tree-id10911 . -19) (undo-tree-id10912 . -19) (undo-tree-id10913 . -163) (undo-tree-id10914 . -19) (undo-tree-id10915 . -39) (undo-tree-id10916 . -39) (undo-tree-id10917 . -39) (undo-tree-id10918 . -117) (undo-tree-id10919 . -117) (undo-tree-id10920 . -117) (undo-tree-id10921 . -117) (undo-tree-id10922 . -117) (undo-tree-id10923 . -145) (undo-tree-id10924 . -145) (undo-tree-id10925 . -145) (undo-tree-id10926 . -146) (undo-tree-id10927 . -163) (undo-tree-id10928 . -163) (undo-tree-id10929 . -162) (undo-tree-id10930 . -163) (undo-tree-id10931 . -162) (undo-tree-id10932 . -163) (undo-tree-id10933 . -162) (undo-tree-id10934 . -163) (undo-tree-id10935 . -162) (undo-tree-id10936 . -163) (undo-tree-id10937 . -162) (undo-tree-id10938 . -163) (undo-tree-id10939 . -162) (undo-tree-id10940 . -163) (undo-tree-id10941 . -162) (undo-tree-id10942 . -163) (undo-tree-id10943 . -150) (undo-tree-id10944 . -151) (undo-tree-id10945 . -146) (undo-tree-id10946 . -150) (undo-tree-id10947 . -149) (undo-tree-id10948 . -150) (undo-tree-id10949 . -163) (undo-tree-id10950 . -163) (undo-tree-id10951 . -163) (undo-tree-id10952 . -163) (undo-tree-id10953 . -164) (undo-tree-id10954 . -164) 10443 (t 26619 55885 356841 47000)) nil (26619 55948 843465 0) 0 nil])
([nil nil ((10279 . 10280) 10198) nil (26619 55955 411810 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10754 . 10755) (nil fontified nil 10280 . 10755) (10280 . 10755)) nil (26619 55966 576585 0) 0 nil] [nil nil ((nil rear-nonsticky nil 10280 . 10281) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -10444) (10280 . 10445)) ((#("
\\begin{tikzpicture}
  \\graph [tree layout, grow down, sibling distance=2cm, level distance=2cm] {
    A -- {B -- {D, E -- G}, C -- {F -- H}}
  };
\\end{tikzpicture}
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 7 8 (face (rainbow-delimiters-depth-1-face) fontified nil) 8 19 (face (font-lock-function-name-face) fontified nil) 19 20 (face (rainbow-delimiters-depth-1-face) fontified nil) 20 21 (fontified nil) 21 23 (fontified t) 23 29 (face (font-latex-sedate-face) fontified t) 29 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 95 (fontified t) 95 96 (face (rainbow-delimiters-depth-1-face) fontified t) 96 97 (fontified t) 97 98 (face (rainbow-delimiters-depth-1-face) fontified t) 98 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-2-face) fontified t) 109 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-3-face) fontified t) 115 124 (fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) fontified t) 125 132 (fontified t) 132 133 (face (rainbow-delimiters-depth-3-face) fontified t) 133 139 (fontified t) 139 140 (face (rainbow-delimiters-depth-3-face) fontified t) 140 141 (face (rainbow-delimiters-depth-2-face) fontified t) 141 144 (fontified t) 144 145 (face (rainbow-delimiters-depth-1-face) fontified t) 145 147 (fontified t) 147 148 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 148 151 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 151 152 (face (rainbow-delimiters-depth-1-face) fontified nil) 152 163 (face (font-lock-function-name-face) fontified nil) 163 164 (face (rainbow-delimiters-depth-1-face) fontified nil) 164 165 (fontified nil rear-nonsticky t)) . 10280) (undo-tree-id10955 . 164) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (10444 . 10445) (nil rear-nonsticky t 10280 . 10281) (t 26619 55953 968063 713000)) (26619 55948 843612 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10755) (undo-tree-id1314 . 1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1)) nil (26619 55966 576825 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 10280) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1)) ((10280 . 10281)) (26619 55948 843236 0) 0 nil])
([nil nil ((161 . 162) (#("," 0 1 (fontified t)) . -161) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) 162 (#("arrow" 0 5 (fontified t)) . -162) (undo-tree-id11055 . -5) (undo-tree-id11056 . -5) (undo-tree-id11057 . -5) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -2) (undo-tree-id11062 . -2) (undo-tree-id11063 . -2) (undo-tree-id11064 . -3) (undo-tree-id11065 . -3) (undo-tree-id11066 . -3) (undo-tree-id11067 . -4) (undo-tree-id11068 . -4) (undo-tree-id11069 . -4) (undo-tree-id11070 . -5) (undo-tree-id11071 . -5) (undo-tree-id11072 . -5) (undo-tree-id11073 . -5) (undo-tree-id11074 . -5) (undo-tree-id11075 . -5) (undo-tree-id11076 . -5) (undo-tree-id11077 . -5) (undo-tree-id11078 . -5) (undo-tree-id11079 . -5) (undo-tree-id11080 . -5) (undo-tree-id11081 . -5) (undo-tree-id11082 . -5) 167 (#("s" 0 1 (fontified t)) . -167) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) 168 (162 . 168) (#(" " 0 1 (fontified t)) . -162) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) 163 (#(", quotes" 0 8 (fontified t)) . 163) (undo-tree-id11135 . -8) (undo-tree-id11136 . -8) (undo-tree-id11137 . 8) (undo-tree-id11138 . -8) (#("  graphdrawing" 0 14 (fontified t)) . 163) (undo-tree-id11139 . 14) (undo-tree-id11140 . -14) (#("
" 0 1 (fontified t)) . 163) (undo-tree-id11141 . 1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (#("graphs," 0 7 (fontified t)) . -163) (undo-tree-id11144 . -7) (undo-tree-id11145 . -7) (undo-tree-id11146 . -7) (undo-tree-id11147 . -7) (undo-tree-id11148 . -7) (undo-tree-id11149 . -7) (undo-tree-id11150 . -7) (undo-tree-id11151 . -7) (undo-tree-id11152 . -7) (undo-tree-id11153 . -7) (undo-tree-id11154 . -7) (undo-tree-id11155 . -7) (undo-tree-id11156 . -7) (undo-tree-id11157 . -7) (undo-tree-id11158 . -7) (undo-tree-id11159 . -7) (undo-tree-id11160 . -7) (undo-tree-id11161 . -7) (undo-tree-id11162 . -7) 170) nil (26619 55982 243677 0) 0 nil] [nil nil ((#("arrows, " 0 8 (fontified t)) . -155) (undo-tree-id1287 . -8) (undo-tree-id1288 . -8) (undo-tree-id1289 . -8) (undo-tree-id1290 . -8) (undo-tree-id1291 . -8) (undo-tree-id1292 . -8) (undo-tree-id1293 . -8) (undo-tree-id1294 . -8) (undo-tree-id1295 . -8) (undo-tree-id1296 . -8) (undo-tree-id1297 . -8) (undo-tree-id1298 . -8) (undo-tree-id1299 . -8) (undo-tree-id1300 . -8) (undo-tree-id1301 . -8) 163 (#("graphs," 0 7 (fontified t)) . -163) (undo-tree-id1302 . -7) (undo-tree-id1303 . -7) (undo-tree-id1304 . -6) (undo-tree-id1305 . -7) (undo-tree-id1306 . -7) (undo-tree-id1307 . -7) (undo-tree-id1308 . -7) (undo-tree-id1309 . -7) (undo-tree-id1310 . -7) (undo-tree-id1311 . -7) (undo-tree-id1312 . -7) (undo-tree-id1313 . -7) 170) ((155 . 170)) (26619 55966 576360 0) 0 nil])
nil
([nil nil ((#("." 0 1 (fontified t)) . 161) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1)) nil (26619 56040 583384 0) 0 nil])
nil
([nil nil ((#("\\end{forest}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 4 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 11 (face (font-lock-function-name-face) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 12 13 (fontified t)) . 11505) (undo-tree-id1542 . -12) (undo-tree-id1543 . -12) (undo-tree-id1544 . -12) (undo-tree-id1545 . -12) (undo-tree-id1546 . -12) (undo-tree-id1547 . -11) (undo-tree-id1548 . -12) (undo-tree-id1549 . -11) (undo-tree-id1550 . -12) (undo-tree-id1551 . -11) (undo-tree-id1552 . -12) (undo-tree-id1553 . -11) (undo-tree-id1554 . -12) (undo-tree-id1555 . -11) (undo-tree-id1556 . -12) (undo-tree-id1557 . -11) (undo-tree-id1558 . -12) (undo-tree-id1559 . -11) (undo-tree-id1560 . -12) (undo-tree-id1561 . -4) (undo-tree-id1562 . -5) (undo-tree-id1563 . -4) (undo-tree-id1564 . -3) (undo-tree-id1565 . -4) (undo-tree-id1566 . -12) (undo-tree-id1567 . -12) (undo-tree-id1568 . -12) (undo-tree-id1569 . -12) (undo-tree-id1570 . -12) (undo-tree-id1571 . -12) (undo-tree-id1572 . -12) (undo-tree-id1573 . -11) (undo-tree-id1574 . -12) (undo-tree-id1575 . -11) (undo-tree-id1576 . -12) (undo-tree-id1577 . -11) (undo-tree-id1578 . -12) (undo-tree-id1579 . -11) (undo-tree-id1580 . -12) (undo-tree-id1581 . -11) (undo-tree-id1582 . -12) (undo-tree-id1583 . -11) (undo-tree-id1584 . -12) (undo-tree-id1585 . -11) (undo-tree-id1586 . -12) (undo-tree-id1587 . -4) (undo-tree-id1588 . -5) (undo-tree-id1589 . -4) (undo-tree-id1590 . -3) (undo-tree-id1591 . -4) (undo-tree-id1592 . -12) (undo-tree-id1593 . -12) (undo-tree-id1594 . -12) (undo-tree-id1595 . -12) (undo-tree-id1596 . -12) (undo-tree-id1597 . -12) (undo-tree-id1598 . -12) (undo-tree-id1599 . -12) (undo-tree-id1600 . -12) (undo-tree-id1601 . -12) (undo-tree-id1602 . -12) (undo-tree-id1603 . -12) (undo-tree-id1604 . -12) (undo-tree-id1605 . -12) (undo-tree-id1606 . -12) (undo-tree-id1607 . -11) (undo-tree-id1608 . -12) (undo-tree-id1609 . -11) (undo-tree-id1610 . -12) (undo-tree-id1611 . -11) (undo-tree-id1612 . -12) (undo-tree-id1613 . -11) (undo-tree-id1614 . -12) (undo-tree-id1615 . -11) (undo-tree-id1616 . -12) (undo-tree-id1617 . -11) (undo-tree-id1618 . -12) (undo-tree-id1619 . -11) (undo-tree-id1620 . -12) (undo-tree-id1621 . -4) (undo-tree-id1622 . -5) (undo-tree-id1623 . -4) (undo-tree-id1624 . -3) (undo-tree-id1625 . -4) (undo-tree-id1626 . -12) (undo-tree-id1627 . -12) (undo-tree-id1628 . -12) (undo-tree-id1629 . -12) (undo-tree-id1630 . -13) (undo-tree-id1631 . -13) (undo-tree-id1632 . -12) 11517 (t 26619 55982 292006 978000)) nil (26619 56068 355061 0) 0 nil] [nil nil ((#("\\end{forest}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 4 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 11 (face (font-lock-function-name-face) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 12 13 (fontified t)) . 11505) (undo-tree-id1437 . -12) (undo-tree-id1438 . -12) (undo-tree-id1439 . -12) (undo-tree-id1440 . -12) (undo-tree-id1441 . -12) (undo-tree-id1442 . -12) (undo-tree-id1443 . -12) (undo-tree-id1444 . -12) 11517 (t 26619 55982 292006 978000)) ((11505 . 11518)) (26619 56040 582734 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11504 . 11505) (#("
" 0 1 (fontified nil)) . -11517) (undo-tree-id1541 . -1) (11504 . 11518)) nil (26619 56068 354920 0) 0 nil])
nil
([nil nil ((#("\\end{forest}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 4 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 11 (face (font-lock-function-name-face) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 12 13 (fontified t)) . 11505) (undo-tree-id1445 . -13) (undo-tree-id1446 . -13) (undo-tree-id1447 . -13) (undo-tree-id1448 . -13) (undo-tree-id1449 . -13) (undo-tree-id1450 . -13) (undo-tree-id1451 . -13) (undo-tree-id1452 . -13) (undo-tree-id1453 . -13) (undo-tree-id1454 . -13) (undo-tree-id1455 . -13) (undo-tree-id1456 . -13) (undo-tree-id1457 . -13) (undo-tree-id1458 . -13) (undo-tree-id1459 . -13) (undo-tree-id1460 . -13) (undo-tree-id1461 . -13) (undo-tree-id1462 . -13) (undo-tree-id1463 . -13) (undo-tree-id1464 . -13) (undo-tree-id1465 . -13) (undo-tree-id1466 . -13) (undo-tree-id1467 . -13) (undo-tree-id1468 . -13) (undo-tree-id1469 . -13) (undo-tree-id1470 . -13) (undo-tree-id1471 . -13) (undo-tree-id1472 . -13) (undo-tree-id1473 . -13) (undo-tree-id1474 . -13) (undo-tree-id1475 . -13) (undo-tree-id1476 . -13) (undo-tree-id1477 . -13) (undo-tree-id1478 . -13) (undo-tree-id1479 . -13) (undo-tree-id1480 . -13) (undo-tree-id1481 . -13) (undo-tree-id1482 . -13) (undo-tree-id1483 . -13) (undo-tree-id1484 . -13) (undo-tree-id1485 . -13) (undo-tree-id1486 . -13) (undo-tree-id1487 . -13) (undo-tree-id1488 . -13) (undo-tree-id1489 . -13) (undo-tree-id1490 . -13) (undo-tree-id1491 . -13) (undo-tree-id1492 . -13) (undo-tree-id1493 . -13) (undo-tree-id1494 . -13) (undo-tree-id1495 . -13) (undo-tree-id1496 . -13) (undo-tree-id1497 . -13) (undo-tree-id1498 . -13) (undo-tree-id1499 . -13) (undo-tree-id1500 . -13) (undo-tree-id1501 . -13) (undo-tree-id1502 . -13) (undo-tree-id1503 . -13) (undo-tree-id1504 . -13) (undo-tree-id1505 . -13) (undo-tree-id1506 . -13) (undo-tree-id1507 . -13) (undo-tree-id1508 . -13) (undo-tree-id1509 . -13) (undo-tree-id1510 . -13) (undo-tree-id1511 . -13) (undo-tree-id1512 . -13) (undo-tree-id1513 . -13) (undo-tree-id1514 . -13) (undo-tree-id1515 . -13) (undo-tree-id1516 . -13) (undo-tree-id1517 . -13) (undo-tree-id1518 . -13) (undo-tree-id1519 . -13) (undo-tree-id1520 . -13) (undo-tree-id1521 . -13) (undo-tree-id1522 . -13) (undo-tree-id1523 . -13) (undo-tree-id1524 . -13) (undo-tree-id1525 . -13) (undo-tree-id1526 . -13) (undo-tree-id1527 . -13) (undo-tree-id1528 . -13) (undo-tree-id1529 . -13) (undo-tree-id1530 . -13) (undo-tree-id1531 . -12) (undo-tree-id1532 . -13) (undo-tree-id1533 . -13) (undo-tree-id1534 . -13) (undo-tree-id1535 . -13) (undo-tree-id1536 . -13) (undo-tree-id1537 . -13) (undo-tree-id1538 . -13) (undo-tree-id1539 . -13) (undo-tree-id1540 . -13)) nil (26619 56068 355576 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11801 . 11802) (nil fontified nil 11504 . 11802) (11504 . 11802)) nil (26619 56083 205925 0) 0 nil] [nil nil ((nil rear-nonsticky nil 11803 . 11804) (nil fontified nil 11506 . 11804) (11506 . 11804) 11505) ((#("\\begin{forest}
for tree={
  grow'=south,
  child anchor=north,
  parent anchor=south,
  align=center,
  l sep=12pt,
  s sep=10pt,
  edge={->},
  anchor=center
}
[fib(5)
  [fib(3)
    [fib(1)]
    [fib(2)]
  ]
  [fib(4)
    [fib(2)]
    [fib(3)
      [fib(1)]
      [fib(2)]
    ]
  ]
]
\\end{forest}" 0 1 (face (font-latex-warning-face font-lock-keyword-face) fontified nil) 1 6 (face (font-lock-keyword-face) fontified nil) 6 7 (face (rainbow-delimiters-depth-1-face) fontified nil) 7 13 (face (font-lock-function-name-face) fontified nil) 13 14 (face (rainbow-delimiters-depth-1-face) fontified nil) 14 24 (fontified nil) 24 25 (face (rainbow-delimiters-depth-1-face) fontified nil) 25 137 (fontified nil) 137 138 (face (rainbow-delimiters-depth-2-face) fontified nil) 138 140 (fontified nil) 140 141 (face (rainbow-delimiters-depth-2-face) fontified nil) 141 159 (fontified nil) 159 160 (face (rainbow-delimiters-depth-1-face) fontified nil) 160 161 (fontified nil) 161 162 (face (rainbow-delimiters-depth-1-face) fontified nil) 162 171 (fontified nil) 171 172 (face (rainbow-delimiters-depth-2-face) fontified nil) 172 183 (fontified nil) 183 184 (face (rainbow-delimiters-depth-3-face) fontified nil) 184 190 (fontified nil) 190 191 (face (rainbow-delimiters-depth-3-face) fontified nil) 191 196 (fontified nil) 196 197 (face (rainbow-delimiters-depth-3-face) fontified nil) 197 203 (fontified nil) 203 204 (face (rainbow-delimiters-depth-3-face) fontified nil) 204 207 (fontified nil) 207 208 (face (rainbow-delimiters-depth-2-face) fontified nil) 208 211 (fontified nil) 211 212 (face (rainbow-delimiters-depth-2-face) fontified nil) 212 223 (fontified nil) 223 224 (face (rainbow-delimiters-depth-3-face) fontified nil) 224 230 (fontified nil) 230 231 (face (rainbow-delimiters-depth-3-face) fontified nil) 231 236 (fontified nil) 236 237 (face (rainbow-delimiters-depth-3-face) fontified nil) 237 250 (fontified nil) 250 251 (face (rainbow-delimiters-depth-4-face) fontified nil) 251 257 (fontified nil) 257 258 (face (rainbow-delimiters-depth-4-face) fontified nil) 258 265 (fontified nil) 265 266 (face (rainbow-delimiters-depth-4-face) fontified nil) 266 272 (fontified nil) 272 273 (face (rainbow-delimiters-depth-4-face) fontified nil) 273 278 (fontified nil) 278 279 (face (rainbow-delimiters-depth-3-face) fontified nil) 279 282 (fontified nil) 282 283 (face (rainbow-delimiters-depth-2-face) fontified nil) 283 284 (fontified nil) 284 285 (face (rainbow-delimiters-depth-1-face) fontified nil) 285 286 (fontified nil) 286 287 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 287 290 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 290 291 (face (rainbow-delimiters-depth-1-face) fontified nil) 291 297 (face (font-lock-function-name-face) fontified nil) 297 298 (face (rainbow-delimiters-depth-1-face) rear-nonsticky nil fontified nil)) . 11506) (undo-tree-id1633 . -298) (undo-tree-id1634 . -298) (undo-tree-id1635 . -297) (undo-tree-id1636 . -298) (undo-tree-id1637 . -298) (undo-tree-id1638 . -286) (undo-tree-id1639 . -298) (undo-tree-id1640 . -298) (nil fontified t 11791 . 11792) (nil fontified t 11790 . 11791) (nil fontified t 11789 . 11790) (nil fontified t 11788 . 11789) (nil fontified t 11785 . 11788) (nil fontified t 11784 . 11785) (nil fontified t 11779 . 11784) (nil fontified t 11778 . 11779) (nil fontified t 11772 . 11778) (nil fontified t 11771 . 11772) (nil fontified t 11764 . 11771) (nil fontified t 11763 . 11764) (nil fontified t 11757 . 11763) (nil fontified t 11756 . 11757) (nil fontified t 11743 . 11756) (nil fontified t 11742 . 11743) (nil fontified t 11737 . 11742) (nil fontified t 11736 . 11737) (nil fontified t 11730 . 11736) (nil fontified t 11729 . 11730) (nil fontified t 11718 . 11729) (nil fontified t 11717 . 11718) (nil fontified t 11714 . 11717) (nil fontified t 11713 . 11714) (nil fontified t 11710 . 11713) (nil fontified t 11709 . 11710) (nil fontified t 11703 . 11709) (nil fontified t 11702 . 11703) (nil fontified t 11697 . 11702) (nil fontified t 11696 . 11697) (nil fontified t 11690 . 11696) (nil fontified t 11689 . 11690) (nil fontified t 11678 . 11689) (nil fontified t 11677 . 11678) (nil fontified t 11668 . 11677) (nil fontified t 11667 . 11668) (nil fontified t 11666 . 11667) (nil fontified t 11665 . 11666) (nil fontified t 11647 . 11665) (nil fontified t 11646 . 11647) (nil fontified t 11644 . 11646) (nil fontified t 11643 . 11644) (nil fontified t 11531 . 11643) (nil fontified t 11530 . 11531) (nil fontified t 11520 . 11530) (nil fontified t 11519 . 11520) (nil fontified t 11513 . 11519) (nil fontified t 11512 . 11513) (nil fontified t 11507 . 11512) (nil fontified t 11506 . 11507) (nil rear-nonsticky t 11803 . 11804)) (26619 56068 354742 0) 0 nil])
([nil nil ((11511 . 11520) (11510 . 11512) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -11510) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (11510 . 11511) (11505 . 11510) (11504 . 11505) (11503 . 11504) 11501) nil (26619 56083 205920 0) 0 nil])
nil
([nil nil ((10722 . 10724) (#(")" 0 1 (fontified nil)) . -10722) (undo-tree-id11166 . -1) (#(")" 0 1 (fontified nil)) . 10723) (10721 . 10723) (10720 . 10722) (#("(" 0 1 (fontified nil)) . -10720) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (10720 . 10721) (10719 . 10720) (10717 . 10719) (10715 . 10717) (#(")" 0 1 (fontified nil)) . -10715) (undo-tree-id11170 . -1) (#(")" 0 1 (fontified nil)) . 10716) (10714 . 10716) (10713 . 10715) (#("(" 0 1 (fontified nil)) . -10713) (undo-tree-id11171 . -1) (10713 . 10714) (10708 . 10713) (10707 . 10708) (10704 . 10707) (t 26619 56083 262508 566000) 10701) nil (26619 56147 178084 0) 0 nil])
([nil nil ((10255 . 10261) (10254 . 10256) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -10254) (undo-tree-id11291 . -1) (10254 . 10255) (10249 . 10254) (10248 . 10249) (10247 . 10248) (t 26619 56147 233835 948000) 10185) nil (26619 56171 965926 0) 0 nil])
([nil nil ((10763 . 10769) (10762 . 10764) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -10762) (undo-tree-id11290 . -1) (10762 . 10763) (10759 . 10762) (10758 . 10759) (10757 . 10758) 10753) nil (26619 56171 965920 0) 0 nil])
([nil nil ((#("\\begin{tikzpicture}[every node/.style={circle, draw, minimum size=1cm}, node distance=2cm]
  \\node (A) at (0,0) {A};
  \\node (B) at (-2,-2) {B};
  \\node (C) at (2,-2) {C};
  \\node (D) at (-3.5,-4) {D};
  \\node (E) at (-0.5,-4) {E};
  \\node (F) at (2,-4) {F};
  \\node (G) at (-0.5,-6) {G};
  \\node (H) at (2,-6) {H};

  \\draw (A) -- (B);
  \\draw (A) -- (C);
  \\draw (B) -- (D);
  \\draw (B) -- (E);
  \\draw (E) -- (G);
  \\draw (C) -- (F);
  \\draw (F) -- (H);
  \\drat (C) -- (E);
\\end{tikzpicture}
\\end{figure}
" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 18 (face (font-lock-function-name-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-2-face) fontified t) 70 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 93 (fontified t) 93 98 (face (font-latex-sedate-face) fontified t) 98 112 (fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-1-face) fontified t) 115 119 (fontified t) 119 124 (face (font-latex-sedate-face) fontified t) 124 140 (fontified t) 140 141 (face (rainbow-delimiters-depth-1-face) fontified t) 141 142 (fontified t) 142 143 (face (rainbow-delimiters-depth-1-face) fontified t) 143 147 (fontified t) 147 152 (face (font-latex-sedate-face) fontified t) 152 167 (fontified t) 167 168 (face (rainbow-delimiters-depth-1-face) fontified t) 168 169 (fontified t) 169 170 (face (rainbow-delimiters-depth-1-face) fontified t) 170 174 (fontified t) 174 179 (face (font-latex-sedate-face) fontified t) 179 180 (fontified t) 180 197 (fontified t) 197 198 (face (rainbow-delimiters-depth-1-face) fontified t) 198 199 (fontified t) 199 200 (face (rainbow-delimiters-depth-1-face) fontified t) 200 202 (fontified t) 202 204 (fontified t) 204 209 (face (font-latex-sedate-face) fontified t) 209 227 (fontified t) 227 228 (face (rainbow-delimiters-depth-1-face) fontified t) 228 229 (fontified t) 229 230 (face (rainbow-delimiters-depth-1-face) fontified t) 230 234 (fontified t) 234 239 (face (font-latex-sedate-face) fontified t) 239 254 (fontified t) 254 255 (face (rainbow-delimiters-depth-1-face) fontified t) 255 256 (fontified t) 256 257 (face (rainbow-delimiters-depth-1-face) fontified t) 257 261 (fontified t) 261 266 (face (font-latex-sedate-face) fontified t) 266 284 (fontified t) 284 285 (face (rainbow-delimiters-depth-1-face) fontified t) 285 286 (fontified t) 286 287 (face (rainbow-delimiters-depth-1-face) fontified t) 287 291 (fontified t) 291 296 (face (font-latex-sedate-face) fontified t) 296 311 (fontified t) 311 312 (face (rainbow-delimiters-depth-1-face) fontified t) 312 313 (fontified t) 313 314 (face (rainbow-delimiters-depth-1-face) fontified t) 314 319 (fontified t) 319 324 (face (font-latex-sedate-face) fontified t) 324 339 (fontified t) 339 344 (face (font-latex-sedate-face) fontified t) 344 359 (fontified t) 359 364 (face (font-latex-sedate-face) fontified t) 364 379 (fontified t) 379 384 (face (font-latex-sedate-face) fontified t) 384 399 (fontified t) 399 404 (face (font-latex-sedate-face) fontified t) 404 419 (fontified t) 419 424 (face (font-latex-sedate-face) fontified t) 424 437 (fontified t) 437 439 (fontified t) 439 444 (face (font-latex-sedate-face) fontified t) 444 456 (fontified t) 456 457 (fontified t) 457 459 (fontified t) 459 464 (face (font-latex-sedate-face) fontified t) 464 465 (fontified t) 465 467 (fontified t) 467 472 (fontified t) 472 474 (fontified t) 474 476 (fontified t) 476 477 (fontified t) 477 478 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 478 481 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 481 482 (face (rainbow-delimiters-depth-1-face) fontified t) 482 493 (face (font-lock-function-name-face) fontified t) 493 494 (face (rainbow-delimiters-depth-1-face) fontified t) 494 495 (fontified t) 495 496 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 496 499 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 499 500 (face (rainbow-delimiters-depth-1-face) fontified t) 500 506 (face (font-lock-function-name-face) fontified t) 506 507 (face (rainbow-delimiters-depth-1-face) fontified t) 507 508 (fontified t rear-nonsticky t)) . 10263) (undo-tree-id11173 . -506) (undo-tree-id11174 . -11) (undo-tree-id11175 . -508) (undo-tree-id11176 . -508) (undo-tree-id11177 . -508) (undo-tree-id11178 . -508) (undo-tree-id11179 . -508) (undo-tree-id11180 . 2) (undo-tree-id11181 . -11) (undo-tree-id11182 . -506) (undo-tree-id11183 . -11) (undo-tree-id11184 . -507) (undo-tree-id11185 . -476) (undo-tree-id11186 . -476) (undo-tree-id11187 . -11) (undo-tree-id11188 . -11) (undo-tree-id11189 . -506) (undo-tree-id11190 . -506) (undo-tree-id11191 . -507) (undo-tree-id11192 . -499) (undo-tree-id11193 . -500) (undo-tree-id11194 . -495) (undo-tree-id11195 . -499) (undo-tree-id11196 . -498) (undo-tree-id11197 . -499) (undo-tree-id11198 . -506) (undo-tree-id11199 . -506) (undo-tree-id11200 . -506) (undo-tree-id11201 . -488) (undo-tree-id11202 . -488) (undo-tree-id11203 . -488) (undo-tree-id11204 . -468) (undo-tree-id11205 . -468) (undo-tree-id11206 . -468) (undo-tree-id11207 . -448) (undo-tree-id11208 . -448) (undo-tree-id11209 . -448) (undo-tree-id11210 . -428) (undo-tree-id11211 . -408) (undo-tree-id11212 . -408) (undo-tree-id11213 . -408) (undo-tree-id11214 . -388) (undo-tree-id11215 . -368) (undo-tree-id11216 . -368) (undo-tree-id11217 . -368) (undo-tree-id11218 . -348) (undo-tree-id11219 . -348) (undo-tree-id11220 . -348) (undo-tree-id11221 . -328) (undo-tree-id11222 . -328) (undo-tree-id11223 . -328) (undo-tree-id11224 . -316) (undo-tree-id11225 . -316) (undo-tree-id11226 . -316) (undo-tree-id11227 . -300) (undo-tree-id11228 . -300) (undo-tree-id11229 . -300) (undo-tree-id11230 . -270) (undo-tree-id11231 . -243) (undo-tree-id11232 . -213) (undo-tree-id11233 . -213) (undo-tree-id11234 . -213) (undo-tree-id11235 . -183) (undo-tree-id11236 . -183) (undo-tree-id11237 . -182) (undo-tree-id11238 . -183) (undo-tree-id11239 . -182) (undo-tree-id11240 . -183) (undo-tree-id11241 . -182) (undo-tree-id11242 . -183) (undo-tree-id11243 . -182) (undo-tree-id11244 . -183) (undo-tree-id11245 . -182) (undo-tree-id11246 . -183) (undo-tree-id11247 . -182) (undo-tree-id11248 . -183) (undo-tree-id11249 . -182) (undo-tree-id11250 . -183) (undo-tree-id11251 . -180) (undo-tree-id11252 . -181) (undo-tree-id11253 . -183) (undo-tree-id11254 . -183) (undo-tree-id11255 . -183) (undo-tree-id11256 . -156) (undo-tree-id11257 . -156) (undo-tree-id11258 . -156) (undo-tree-id11259 . -128) (undo-tree-id11260 . -128) (undo-tree-id11261 . -128) (undo-tree-id11262 . -102) (undo-tree-id11263 . -102) (undo-tree-id11264 . -101) (undo-tree-id11265 . -102) (undo-tree-id11266 . -101) (undo-tree-id11267 . -102) (undo-tree-id11268 . -101) (undo-tree-id11269 . -102) (undo-tree-id11270 . -101) (undo-tree-id11271 . -102) (undo-tree-id11272 . -101) (undo-tree-id11273 . -102) (undo-tree-id11274 . -101) (undo-tree-id11275 . -102) (undo-tree-id11276 . -101) (undo-tree-id11277 . -102) (undo-tree-id11278 . -99) (undo-tree-id11279 . -100) (undo-tree-id11280 . -102) (undo-tree-id11281 . -102) (undo-tree-id11282 . -102) (undo-tree-id11283 . -11) (undo-tree-id11284 . -11) (undo-tree-id11285 . -11) (undo-tree-id11286 . -11) (undo-tree-id11287 . -11) (undo-tree-id11288 . -11) (undo-tree-id11289 . -508) 10274) nil (26619 56171 965907 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10164 . 10165) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -10672) (undo-tree-id11172 . -1) (10164 . 10673) 10144) nil (26619 56171 965708 0) 0 nil])
([nil nil ((10164 . 10165)) nil (26619 56171 965693 0) 0 nil])
([nil nil ((10212 . 10219) (10193 . 10212) (#("n" 0 1 (fontified t)) . -10193) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (#("g" 0 1 (fontified t)) . -10194) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (#(" " 0 1 (fontified t)) . -10195) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) 10196 (10186 . 10196) (10165 . 10186) (t 26619 56172 21844 439000)) nil (26619 56199 20272 0) 0 nil])
([nil nil ((10219 . 10220) 10219) nil (26619 56199 20245 0) 0 nil])
([nil nil ((10221 . 10226) (10220 . 10221)) nil (26619 56199 20243 0) 0 nil])
([nil nil ((#("\\begin
" 0 1 (face (font-latex-warning-face font-lock-keyword-face font-latex-sedate-face) fontified t) 1 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (font-lock-multiline t rear-nonsticky t fontified t)) . 10220) (undo-tree-id11292 . -6) (undo-tree-id11293 . -6) (undo-tree-id11294 . 1) (undo-tree-id11295 . -6) (undo-tree-id11296 . -6) (undo-tree-id11297 . -6) (undo-tree-id11298 . -6) (undo-tree-id11299 . -6) (undo-tree-id11300 . -6) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -2) (undo-tree-id11307 . -2) (undo-tree-id11308 . -2) (undo-tree-id11309 . -3) (undo-tree-id11310 . -3) (undo-tree-id11311 . -3) (undo-tree-id11312 . -4) (undo-tree-id11313 . -4) (undo-tree-id11314 . -4) (undo-tree-id11315 . -5) (undo-tree-id11316 . -5) (undo-tree-id11317 . -5) (undo-tree-id11318 . -6) (undo-tree-id11319 . -6) (undo-tree-id11320 . -6) (undo-tree-id11321 . -7) (undo-tree-id11322 . -6) (undo-tree-id11323 . -6) (undo-tree-id11324 . -6) (undo-tree-id11325 . -6) (undo-tree-id11326 . -6) (undo-tree-id11327 . -6) (undo-tree-id11328 . -6) (undo-tree-id11329 . -6) (undo-tree-id11330 . -6) (undo-tree-id11331 . -6) (undo-tree-id11332 . -6) (undo-tree-id11333 . -7) (undo-tree-id11334 . -7) 10226) nil (26619 56199 20236 0) 0 nil])
([nil nil ((#("\\begin{figure}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 13 (face (font-lock-function-name-face) fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (fontified t)) . 10811) (undo-tree-id11348 . -15) (undo-tree-id11349 . -15) (undo-tree-id11350 . -15) (undo-tree-id11351 . -15) (undo-tree-id11352 . -15) (undo-tree-id11353 . -15) (undo-tree-id11354 . -15) (undo-tree-id11355 . -15) (undo-tree-id11356 . -14) (undo-tree-id11357 . -15) (undo-tree-id11358 . -15) (t 26619 56199 69887 88000)) nil (26619 56225 1695 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10219 . 10220) (#("
" 0 1 (fontified nil)) . -10234) (undo-tree-id11347 . -1) (10219 . 10235) 10144) nil (26619 56225 1671 0) 0 nil])
([nil nil ((10235 . 10236) (10234 . 10236) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -10234) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (10234 . 10235) (t 26619 56225 60535 209000)) nil (26619 56234 847609 0) 0 nil])
([nil nil ((10235 . 10236) (#("h" 0 1 (fontified t)) . 10235) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1)) nil (26619 56234 847597 0) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . 10235) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (t 26619 56234 905729 153000)) nil (26619 56242 49074 0) 0 nil])
([nil nil ((10235 . 10236)) nil (26619 56242 49061 0) 0 nil])
([nil nil ((10236 . 10237)) nil (26619 56242 49056 0) 0 nil])
([nil nil ((10702 . 10703) (#("t" 0 1 (face (font-latex-sedate-face) fontified t)) . 10702) (undo-tree-id11394 . -1) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (t 26619 56242 106816 132000)) nil (26619 56257 384476 0) 0 nil])
([nil nil ((9477 . 9479) (9476 . 9478) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -9476) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (9476 . 9477) (t 26619 56257 442036 279000)) nil (26619 56301 827389 0) 0 nil])
([nil nil ((9560 . 9561) (#("5" 0 1 (fontified t)) . 9560) (undo-tree-id11432 . -1) (t 26619 56301 888391 606000)) nil (26619 56317 543022 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 9560) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (t 26619 56317 604513 385000)) nil (26619 56325 324429 0) 0 nil])
([nil nil ((9559 . 9560) (#("1" 0 1 (fontified t)) . 9559) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (t 26619 56325 384412 401000)) nil (26619 56333 344826 0) 0 nil])
([nil nil ((10313 . 10319) (#(" " 0 1 (fontified nil)) . 10312) (10311 . 10314) (t 26619 56333 405080 138000)) nil (26619 56365 720328 0) 0 nil])
([nil nil ((10319 . 10327) (t 26619 56365 778911 686000)) nil (26619 56387 749238 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 10308) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1)) nil (26619 56387 749236 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 10308) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1)) nil (26619 56387 749229 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 10308) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1)) nil (26619 56387 749223 0) 0 nil])
([nil nil ((10328 . 10333) (10325 . 10328) (#("p" 0 1 (fontified t)) . -10325) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (#(" " 0 1 (fontified t)) . -10326) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (#("=" 0 1 (fontified t)) . -10327) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (#(" " 0 1 (fontified t)) . -10328) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) 10329 (10326 . 10329) (#("t" 0 1 (fontified t)) . -10326) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) 10327 (10318 . 10327) (10303 . 10307) (#(" " 0 1 (fontified nil)) . 10303) (10302 . 10303) (10308 . 10314)) nil (26619 56387 749200 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 10289) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (t 26619 56387 809580 637000)) nil (26619 56405 580553 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 10289) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1)) nil (26619 56405 580548 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 10289) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1)) nil (26619 56405 580542 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 10289) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1)) nil (26619 56405 580537 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 10289) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1)) nil (26619 56405 580527 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10289) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1)) nil (26619 56405 580520 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 10360) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (t 26619 56405 642363 511000)) nil (26619 56426 51042 0) 0 nil])
([nil nil ((10360 . 10363)) nil (26619 56426 51020 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 10362) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (t 26619 56426 111174 625000)) nil (26619 56444 41594 0) 0 nil])
([nil nil ((10362 . 10363)) nil (26619 56444 41551 0) 0 nil])
([nil nil ((10780 . 10793) (10779 . 10781) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -10779) (undo-tree-id11552 . -1) (10779 . 10780) (10772 . 10779) (10771 . 10772) (10770 . 10771) 10770) nil (26619 56444 41547 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 10360) (t 26619 56444 99297 546000)) nil (26619 56468 798457 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 10360) (undo-tree-id11710 . -1)) nil (26619 56468 798455 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 10360)) nil (26619 56468 798452 0) 0 nil])
([nil nil ((10360 . 10364)) nil (26619 56468 798451 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 10364) (undo-tree-id11709 . 1)) nil (26619 56468 798449 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 10364) (undo-tree-id11708 . 1)) nil (26619 56468 798446 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10344) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (#(" " 0 1 (fontified t)) . -10345) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (#("n" 0 1 (fontified t)) . -10346) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (#("o" 0 1 (fontified t)) . -10347) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (#("d" 0 1 (fontified t)) . -10348) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (#("e" 0 1 (fontified t)) . -10349) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (#(" " 0 1 (fontified t)) . -10350) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (#("d" 0 1 (fontified t)) . -10351) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (#("i" 0 1 (fontified t)) . -10352) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (#("s" 0 1 (fontified t)) . -10353) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (#("t" 0 1 (fontified t)) . -10354) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (#("a" 0 1 (fontified t)) . -10355) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (#("n" 0 1 (fontified t)) . -10356) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (#("c" 0 1 (fontified t)) . -10357) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (#("e" 0 1 (fontified t)) . -10358) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (#("=" 0 1 (fontified t)) . -10359) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (#("2" 0 1 (fontified t)) . -10360) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (#("0" 0 1 (fontified t)) . -10361) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (#("p" 0 1 (fontified t)) . -10362) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (#("t" 0 1 (fontified t)) . -10363) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) 10364) nil (26619 56468 798429 0) 0 nil])
([nil nil ((9628 . 9629) (#("2" 0 1 (fontified t)) . 9628) (t 26619 56468 856181 508000)) nil (26619 56523 966049 0) 0 nil])
([nil nil ((9666 . 9667) (#("1" 0 1 (fontified t)) . 9666)) nil (26619 56523 966046 0) 0 nil])
([nil nil ((9666 . 9667) (#("\"" 0 1 (fontified t)) . 9666) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (9666 . 9667) (#("\"" 0 1 (fontified t)) . 9666)) nil (26619 56523 966044 0) 0 nil])
([nil nil ((9704 . 9705) (#("3" 0 1 (fontified t)) . 9704) (undo-tree-id11820 . -1)) nil (26619 56523 966035 0) 0 nil])
([nil nil ((10882 . 10887) (#("n" 0 1 (face (font-lock-function-name-face) fontified t)) . -10882) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) 10883 (10877 . 10883) (10876 . 10878) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -10876) (undo-tree-id11817 . -1) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (10876 . 10877) (10871 . 10876) (10870 . 10871) (10869 . 10870) 10822) nil (26619 56523 966030 0) 0 nil])
([nil nil ((10897 . 10906) (#("i" 0 1 (face (font-lock-function-name-face) fontified t)) . -10897) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) (undo-tree-id11761 . -1) (#("s" 0 1 (face (font-lock-function-name-face) fontified t)) . -10898) (undo-tree-id11762 . -1) (undo-tree-id11763 . -1) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) (undo-tree-id11769 . -1) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (#("t" 0 1 (face (font-lock-function-name-face) fontified t)) . -10899) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (#("l" 0 1 (face (font-lock-function-name-face) fontified t)) . -10900) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) 10901 (10896 . 10901) (10895 . 10897) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -10895) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (10895 . 10896) (10892 . 10895) (10891 . 10892) (10888 . 10891) 10887) nil (26619 56523 966000 0) 0 nil])
([nil nil (10906) nil (26619 56523 965879 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10889) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (#(" " 0 1 (fontified t)) . -10890) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) 10891) nil (26619 56523 965875 0) 0 nil])
([nil nil ((10888 . 10891) 10870) nil (26619 56523 965810 0) 0 nil])
([nil nil ((8549 . 8550) (t 26619 56524 24421 638000) 8078) nil (26619 60188 146913 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8550) (undo-tree-id11835 . 1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1)) nil (26619 60188 146911 0) 0 nil])
([nil nil ((8557 . 8559) (8538 . 8540) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 8538) (8537 . 8538) (8470 . 8472) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 8470) (8469 . 8470) (8401 . 8403) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 8401) (8400 . 8401) (#(" " 0 1 (fontified nil)) . 8350) (8349 . 8350) (#(" " 0 1 (fontified nil)) . 8306) (8305 . 8306) (#(" " 0 1 (fontified nil)) . 8242) (8241 . 8242) (#(" " 0 1 (fontified nil)) . 8171) (8170 . 8171) (#(" " 0 1 (fontified nil)) . 8101) (8100 . 8101) (8549 . 8551)) nil (26619 60188 146897 0) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -8557) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (#(" " 0 1 (fontified t)) . -8558) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) 8559) nil (26619 60188 146887 0) 0 nil])
([nil nil ((8557 . 8572)) nil (26619 60188 146872 0) 0 nil])
([nil nil ((8572 . 8593)) nil (26619 60188 146870 0) 0 nil])
([nil nil ((8593 . 8614)) nil (26619 60188 146868 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 8604) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (8603 . 8604) (8614 . 8615)) nil (26619 60188 146864 0) 0 nil])
([nil nil ((8622 . 8634) (8616 . 8622) (#(" " 0 1 (fontified nil)) . 8607) (8606 . 8607) (8601 . 8616) (#("s" 0 1 (fontified t)) . -8601) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (#(" " 0 1 (fontified t)) . -8602) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) 8603 (8601 . 8603) (8586 . 8601) (#("l" 0 1 (fontified t)) . -8586) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) 8587 (8578 . 8587) (8557 . 8578) (#("Here " 0 5 (fontified t)) . -8557) (undo-tree-id11853 . -5) (undo-tree-id11854 . -5) (undo-tree-id11855 . -5) (undo-tree-id11856 . -5) 8562 (#("is " 0 3 (fontified t)) . -8562) (undo-tree-id11857 . -3) (undo-tree-id11858 . -3) (undo-tree-id11859 . -3) (undo-tree-id11860 . -3) 8565 (#("one " 0 4 (fontified t)) . -8565) (undo-tree-id11861 . -4) (undo-tree-id11862 . -4) (undo-tree-id11863 . -4) (undo-tree-id11864 . -4) 8569 (#("way " 0 4 (fontified t)) . -8569) (undo-tree-id11865 . -4) (undo-tree-id11866 . -4) (undo-tree-id11867 . -4) (undo-tree-id11868 . -4) 8573 (#("to " 0 3 (fontified t)) . -8573) (undo-tree-id11869 . -3) (undo-tree-id11870 . -3) (undo-tree-id11871 . -3) (undo-tree-id11872 . -3) 8576 (#("implement " 0 10 (fontified t)) . -8576) (undo-tree-id11873 . -10) (undo-tree-id11874 . -10) (undo-tree-id11875 . -10) (undo-tree-id11876 . -10) 8586 (#("a " 0 2 (fontified t)) . -8586) (undo-tree-id11877 . -2) (undo-tree-id11878 . -2) (undo-tree-id11879 . -2) (undo-tree-id11880 . -2) 8588 (#("linked " 0 7 (fontified t)) . -8588) (undo-tree-id11881 . -7) (undo-tree-id11882 . -7) (undo-tree-id11883 . -7) (undo-tree-id11884 . -7) 8595 (#("list " 0 5 (fontified t)) . -8595) (undo-tree-id11885 . -5) (undo-tree-id11886 . -5) (undo-tree-id11887 . -5) (undo-tree-id11888 . -5) 8600 (#("for
" 0 4 (fontified t)) . -8600) (undo-tree-id11889 . -4) (undo-tree-id11890 . -4) (undo-tree-id11891 . -4) (undo-tree-id11892 . -4) 8604 (#("reference. " 0 11 (fontified t)) . -8604) (undo-tree-id11893 . -11) (undo-tree-id11894 . -11) (undo-tree-id11895 . -11) (undo-tree-id11896 . -11) 8615 (t 26619 60188 207667 538000)) nil (26619 60215 867186 0) 0 nil])
([nil nil ((8634 . 8635)) nil (26619 60215 867059 0) 0 nil])
([nil nil ((20903 . 20904) (t 26619 60215 927052 834000) 20903) nil (26619 60233 103077 0) 0 nil])
([nil nil ((20904 . 20905)) nil (26619 60233 103075 0) 0 nil])
([nil nil ((20905 . 20906)) nil (26619 60233 103073 0) 0 nil])
([nil nil ((20906 . 20911)) nil (26619 60233 103072 0) 0 nil])
([nil nil ((20911 . 20913)) nil (26619 60233 103070 0) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t fontified t)) . -20911) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) (undo-tree-id11996 . -1) (undo-tree-id11997 . -1) (undo-tree-id11998 . -1) (#(" " 0 1 (font-lock-multiline t fontified t)) . -20912) (undo-tree-id11999 . -1) (undo-tree-id12000 . -1) (undo-tree-id12001 . -1) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) 20913) nil (26619 60233 103067 0) 0 nil])
([nil nil ((20911 . 20913) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -20911) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (20911 . 20912)) nil (26619 60233 103024 0) 0 nil])
([nil nil ((20912 . 20919)) nil (26619 60233 103017 0) 0 nil])
([nil nil ((#("n" 0 1 (face (font-lock-function-name-face) fontified t)) . -20915) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (undo-tree-id11910 . -1) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (#("d" 0 1 (face (font-lock-function-name-face) fontified t)) . -20916) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (#("e" 0 1 (face (font-lock-function-name-face) fontified t)) . -20917) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (#("n" 0 1 (face (font-lock-function-name-face) fontified t)) . -20918) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) 20919) nil (26619 60233 103010 0) 0 nil])
([nil nil ((20915 . 20921)) nil (26619 60233 102870 0) 0 nil])
([nil nil ((#("i" 0 1 (face (font-lock-function-name-face) fontified t)) . -20920) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) 20921) nil (26619 60233 102867 0) 0 nil])
([nil nil ((20920 . 20922)) nil (26619 60233 102837 0) 0 nil])
([nil nil ((#("\\begin{Appendices}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 17 (face (font-lock-function-name-face) fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (fontified t)) . 20905) (undo-tree-id12382 . -17) (undo-tree-id12383 . -17) (undo-tree-id12384 . 2) (undo-tree-id12385 . -17) (undo-tree-id12386 . -17) (undo-tree-id12387 . -18) (undo-tree-id12388 . -17) (undo-tree-id12389 . -17) (undo-tree-id12390 . -17) 20922 (t 26619 60233 158478 498000)) nil (26619 60305 780638 0) 0 nil])
([nil nil ((#(" " 0 1 (face (font-latex-sectioning-2-face) fontified t)) . -20935) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (#("P" 0 1 (face (font-latex-sectioning-2-face) fontified t)) . -20936) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) (undo-tree-id12363 . -1) (undo-tree-id12364 . -1) (#("y" 0 1 (face (font-latex-sectioning-2-face) fontified t)) . -20937) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) 20938 (#("t" 0 1 (face (font-latex-sectioning-2-face) fontified t)) . -20938) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (undo-tree-id12371 . -1) (undo-tree-id12372 . -1) (#("h" 0 1 (face (font-latex-sectioning-2-face) fontified t)) . -20939) (undo-tree-id12373 . -1) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (undo-tree-id12376 . -1) (#("o" 0 1 (face (font-latex-sectioning-2-face) fontified t)) . -20940) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (undo-tree-id12380 . -1) 20941 (20924 . 20941) (20923 . 20925) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -20923) (undo-tree-id12381 . -1) (20923 . 20924) (20916 . 20923) (20915 . 20916) (20914 . 20915) (20906 . 20914) (20905 . 20906) (20904 . 20905) 20904) nil (26619 60305 780617 0) 0 nil])
([nil nil ((20935 . 20951)) nil (26619 60305 780570 0) 0 nil])
([nil nil ((20983 . 20986) (20965 . 20983) (20964 . 20966) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -20964) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (20964 . 20965) (20954 . 20964) (20953 . 20954) (20952 . 20953) 20951) nil (26619 60305 780568 0) 0 nil])
([nil nil ((21000 . 21016) (20999 . 21001) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -20999) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (20999 . 21000) (#(")" 0 1 (fontified t)) . -20999) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) 21000 (20999 . 21000) (#(")" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -20999) (undo-tree-id12077 . -1) (20997 . 21000) (#("n" 0 1 (face (font-latex-sedate-face) fontified t)) . -20997) (undo-tree-id12078 . -1) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) (#("o" 0 1 (face (font-latex-sedate-face) fontified t)) . -20998) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (undo-tree-id12125 . -1) (undo-tree-id12126 . -1) (undo-tree-id12127 . -1) (undo-tree-id12128 . -1) (undo-tree-id12129 . -1) (undo-tree-id12130 . -1) (undo-tree-id12131 . -1) (undo-tree-id12132 . -1) (undo-tree-id12133 . -1) (undo-tree-id12134 . -1) (undo-tree-id12135 . -1) (undo-tree-id12136 . -1) (undo-tree-id12137 . -1) (undo-tree-id12138 . -1) (undo-tree-id12139 . -1) (undo-tree-id12140 . -1) (undo-tree-id12141 . -1) (undo-tree-id12142 . -1) (undo-tree-id12143 . -1) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) (undo-tree-id12148 . -1) (undo-tree-id12149 . -1) (undo-tree-id12150 . -1) (undo-tree-id12151 . -1) (undo-tree-id12152 . -1) (undo-tree-id12153 . -1) (undo-tree-id12154 . -1) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1) 20999 (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -20999) (undo-tree-id12157 . -1) (undo-tree-id12158 . -1) (undo-tree-id12159 . -1) (undo-tree-id12160 . -1) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1) (undo-tree-id12165 . -1) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) (undo-tree-id12171 . -1) (undo-tree-id12172 . -1) (undo-tree-id12173 . -1) (undo-tree-id12174 . -1) (undo-tree-id12175 . -1) (undo-tree-id12176 . -1) (undo-tree-id12177 . -1) (undo-tree-id12178 . -1) (undo-tree-id12179 . -1) (undo-tree-id12180 . -1) (undo-tree-id12181 . -1) (undo-tree-id12182 . -1) (undo-tree-id12183 . -1) (undo-tree-id12184 . -1) (undo-tree-id12185 . -1) (undo-tree-id12186 . -1) (undo-tree-id12187 . -1) (undo-tree-id12188 . -1) (undo-tree-id12189 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 21000) (#("C" 0 1 (fontified t)) . -21000) (undo-tree-id12190 . -1) (undo-tree-id12191 . -1) (undo-tree-id12192 . -1) (undo-tree-id12193 . -1) (undo-tree-id12194 . -1) (undo-tree-id12195 . -1) (undo-tree-id12196 . -1) (undo-tree-id12197 . -1) (undo-tree-id12198 . -1) (undo-tree-id12199 . -1) (undo-tree-id12200 . -1) (undo-tree-id12201 . -1) (undo-tree-id12202 . -1) (undo-tree-id12203 . -1) (undo-tree-id12204 . -1) (undo-tree-id12205 . -1) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (#(" " 0 1 (fontified t)) . -21001) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (#("i" 0 1 (fontified t)) . -21002) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (undo-tree-id12256 . -1) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (#("m" 0 1 (fontified t)) . -21003) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (undo-tree-id12279 . -1) (undo-tree-id12280 . -1) (undo-tree-id12281 . -1) (undo-tree-id12282 . -1) (undo-tree-id12283 . -1) (undo-tree-id12284 . -1) (undo-tree-id12285 . -1) (undo-tree-id12286 . -1) (undo-tree-id12287 . -1) (#("p" 0 1 (fontified t)) . -21004) (undo-tree-id12288 . -1) (undo-tree-id12289 . -1) (undo-tree-id12290 . -1) (undo-tree-id12291 . -1) (undo-tree-id12292 . -1) (undo-tree-id12293 . -1) (undo-tree-id12294 . -1) (undo-tree-id12295 . -1) (undo-tree-id12296 . -1) (undo-tree-id12297 . -1) (undo-tree-id12298 . -1) (undo-tree-id12299 . -1) (undo-tree-id12300 . -1) (undo-tree-id12301 . -1) (undo-tree-id12302 . -1) (undo-tree-id12303 . -1) (undo-tree-id12304 . -1) (undo-tree-id12305 . -1) (#("l" 0 1 (fontified t)) . -21005) (undo-tree-id12306 . -1) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) (undo-tree-id12309 . -1) (undo-tree-id12310 . -1) (undo-tree-id12311 . -1) (undo-tree-id12312 . -1) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (undo-tree-id12315 . -1) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (#("e" 0 1 (fontified t)) . -21006) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1) (undo-tree-id12328 . -1) (undo-tree-id12329 . -1) (undo-tree-id12330 . -1) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) (#("m" 0 1 (fontified t)) . -21007) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) (undo-tree-id12345 . -1) (#("e" 0 1 (fontified t)) . -21008) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) 21009 (21000 . 21009) (20999 . 21001) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -20999) (undo-tree-id12353 . -1) (20999 . 21000) (20989 . 20999) (20988 . 20989) (20987 . 20988) 20986) nil (26619 60305 780536 0) 0 nil])
([nil nil ((20995 . 21005) (20994 . 20996) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -20994) (undo-tree-id12051 . -1) (20994 . 20995) (20989 . 20994) (20988 . 20989) (#("=" 0 1 (fontified t)) . -20988) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) 20989 (20988 . 20989) (20987 . 20988) 20981) nil (26619 60305 779978 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21006 . 21007) (#("
" 0 1 (fontified nil)) . -21025) (undo-tree-id12050 . -1) (21006 . 21026) 21005) nil (26619 60305 779963 0) 0 nil])
([nil nil ((21008 . 21011) (#("begin" 0 5 (face (font-lock-keyword-face font-latex-sedate-face) fontified t)) . 21008) (undo-tree-id12047 . -4) (undo-tree-id12048 . -5) (undo-tree-id12049 . -5)) nil (26619 60305 779958 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -21007) (undo-tree-id12037 . -2) (undo-tree-id12038 . -2) (undo-tree-id12039 . -2) (undo-tree-id12040 . -2) (undo-tree-id12041 . -2) (undo-tree-id12042 . -2) (undo-tree-id12043 . -2) (undo-tree-id12044 . -2) (undo-tree-id12045 . -2) (undo-tree-id12046 . -2) 21009 (21006 . 21009) 20992) nil (26619 60305 779949 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21011 . 21012) (nil fontified nil 21007 . 21012) (21007 . 21012)) nil (26619 60305 779928 0) 0 nil])
([nil nil ((#("begin
" 0 4 (fontified t) 4 5 (rear-nonsticky t fontified t) 5 6 (rear-nonsticky t fontified t)) . 21007) (undo-tree-id12009 . -5) (undo-tree-id12010 . -5) (undo-tree-id12011 . 1) (undo-tree-id12012 . -5) (undo-tree-id12013 . -5) (undo-tree-id12014 . -5) (undo-tree-id12015 . -5) (undo-tree-id12016 . -6) (undo-tree-id12017 . -6) (undo-tree-id12018 . -6) (undo-tree-id12019 . -6) (undo-tree-id12020 . -6) (undo-tree-id12021 . -6) (undo-tree-id12022 . -6) (undo-tree-id12023 . -6) (undo-tree-id12024 . -5) (undo-tree-id12025 . -5) (undo-tree-id12026 . -5) (undo-tree-id12027 . -5) (undo-tree-id12028 . -5) (undo-tree-id12029 . -5) (undo-tree-id12030 . -5) (undo-tree-id12031 . -5) (undo-tree-id12032 . -5) (undo-tree-id12033 . -5) (undo-tree-id12034 . -5) (undo-tree-id12035 . -6) (undo-tree-id12036 . -6) 21012) nil (26619 60312 965283 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -21007) (undo-tree-id12394 . -2) (undo-tree-id12395 . -2) (undo-tree-id12396 . -2) (undo-tree-id12397 . -2) (undo-tree-id12398 . -2) (undo-tree-id12399 . -2) (undo-tree-id12400 . -2) (undo-tree-id12401 . -2) 21009 (21007 . 21009) (21007 . 21008) (t 26619 60305 842735 998000)) nil (26619 60317 923746 0) 0 nil] [nil nil ((21007 . 21009) (21007 . 21008) (t 26619 60305 842735 998000)) ((#("
" 0 1 (fontified nil)) . 21007) (#("  " 0 2 (fontified t)) . 21007) (undo-tree-id1641 . -2)) (26619 60312 964831 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 22508 . 22509) (nil fontified nil 21007 . 22509) (21007 . 22509)) nil (26619 60317 923729 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 22509) (undo-tree-id12391 . 1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1)) nil (26619 60317 923723 0) 0 nil])
([nil nil ((21007 . 21022) (#("L" 0 1 (fontified t)) . -21007) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) 21008 (21007 . 21008) (21006 . 21008) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -21006) (undo-tree-id12406 . -1) (21006 . 21007) (t 26619 60317 982422 68000)) nil (26619 60350 882646 0) 0 nil])
([nil nil ((#("  write code and put it here
" 0 29 (face font-latex-verbatim-face fontified t)) . 8948) (undo-tree-id184 . -17) (undo-tree-id185 . -17) (undo-tree-id186 . -17) (undo-tree-id187 . -29) (undo-tree-id188 . -17) (undo-tree-id189 . -17) (undo-tree-id190 . -17) (undo-tree-id191 . -29) (undo-tree-id192 . -17) (undo-tree-id193 . -17) (undo-tree-id194 . -17) (undo-tree-id195 . -17) (undo-tree-id196 . -17) (undo-tree-id197 . -17) (undo-tree-id198 . -17) (undo-tree-id199 . -17) (undo-tree-id200 . -29) (undo-tree-id201 . -29) (undo-tree-id202 . -28) 8965 (t 26619 60350 942282 87000)) nil (26619 61239 389340 0) 0 nil])
([nil nil ((8968 . 8973) (#("i" 0 1 (face font-latex-verbatim-face fontified t)) . -8968) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) 8969 (8965 . 8969) (8961 . 8965) (8960 . 8961) (8948 . 8960) (8947 . 8948) 8912) nil (26619 61239 389296 0) 0 nil])
([nil nil ((8973 . 8987) (8967 . 8973) (8966 . 8967) (8954 . 8966) (8949 . 8951) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 8949) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (8948 . 8949) (8946 . 8952) (#("e" 0 1 (face (font-lock-constant-face) fontified t)) . -8946) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("r" 0 1 (face (font-lock-constant-face) fontified t)) . -8947) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("
" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -8948) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -8949) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -8950) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("i" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -8951) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("s" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -8952) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -8953) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) 8954 (8949 . 8951) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 8949) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (8948 . 8949) (8947 . 8952) (8926 . 8947) (#("i" 0 1 (face (font-lock-constant-face) fontified t)) . -8926) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 8927 (#("s" 0 1 (face (font-lock-constant-face) fontified t)) . -8927) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#(" " 0 1 (face (font-lock-constant-face) fontified t)) . -8928) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("c" 0 1 (face (font-lock-constant-face) fontified t)) . -8929) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("a" 0 1 (face (font-lock-constant-face) fontified t)) . -8930) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("l" 0 1 (face (font-lock-constant-face) fontified t)) . -8931) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("l" 0 1 (face (font-lock-constant-face) fontified t)) . -8932) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("e" 0 1 (face (font-lock-constant-face) fontified t)) . -8933) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("d" 0 1 (face (font-lock-constant-face) fontified t)) . -8934) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#(" " 0 1 (face (font-lock-constant-face) fontified t)) . -8935) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("L" 0 1 (face (font-lock-constant-face) fontified t)) . -8936) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("I" 0 1 (face (font-lock-constant-face) fontified t)) . -8937) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("F" 0 1 (face (font-lock-constant-face) fontified t)) . -8938) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("O" 0 1 (face (font-lock-constant-face) fontified t)) . -8939) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 8940 (8926 . 8940) (#(" " 0 1 (fontified nil)) . 8880) (8879 . 8880) (#(" " 0 1 (fontified nil)) . 8809) (8808 . 8809) (8921 . 8926) (8920 . 8922) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -8920) (8920 . 8921) (#(")" 0 1 (fontified t)) . -8920) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 8921 (8920 . 8921) (#(")" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -8920) (8912 . 8921) (8911 . 8912)) nil (26619 61239 389257 0) 0 nil])
([nil nil ((#(">" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . 8968) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1)) nil (26619 61239 388860 0) 0 nil])
([nil nil ((#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . 8968) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (26619 61239 388848 0) 0 nil])
([nil nil ((9048 . 9050) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9048) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (9048 . 9049)) nil (26619 61239 388835 0) 0 nil])
([nil nil ((9049 . 9053)) nil (26619 61239 388752 0) 0 nil])
([nil nil ((9054 . 9055)) nil (26619 61239 388741 0) 0 nil])
([nil nil ((9044 . 9046) (t 26619 61239 475691 522000)) nil (26619 61377 338684 0) 0 nil])
([nil nil ((9050 . 9052)) nil (26619 61377 338681 0) 0 nil])
([nil nil ((9110 . 9115) (9102 . 9110) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 9102) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) 9106 (9102 . 9106) (9101 . 9102) (9099 . 9101) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9099) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 9100) (9095 . 9100) (9094 . 9096) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9094) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (9094 . 9095) (9087 . 9094) (9083 . 9087) (#(" " 0 1 (face font-latex-verbatim-face fontified nil)) . 9082) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (9083 . 9084) (9081 . 9083) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . -9081) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . 9082) (9081 . 9082) (9080 . 9082) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -9080) (9080 . 9081) (9074 . 9080) (#("a" 0 1 (face font-latex-verbatim-face fontified t)) . -9074) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("t" 0 1 (face font-latex-verbatim-face fontified t)) . -9075) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("a" 0 1 (face font-latex-verbatim-face fontified t)) . -9076) (undo-tree-id518 . -1) (undo-tree-id519 . -1) 9077 (9068 . 9077) (9060 . 9068) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 9060) (undo-tree-id520 . -4) (undo-tree-id521 . -4) 9064 (9060 . 9064) (9059 . 9060)) nil (26619 61377 338667 0) 0 nil])
([nil nil ((9103 . 9104) (#("u" 0 1 (face font-latex-verbatim-face fontified t)) . -9103) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("l" 0 1 (face font-latex-verbatim-face fontified t)) . -9104) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) 9105 (9099 . 9105)) nil (26619 61377 338572 0) 0 nil])
([nil nil ((9135 . 9136) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9135) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 9136) (9135 . 9136) (9132 . 9135) (9131 . 9133) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9131) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (9131 . 9132) (9125 . 9131) (#("p" 0 1 (face font-latex-verbatim-face fontified t)) . -9125) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (#("a" 0 1 (face font-latex-verbatim-face fontified t)) . -9126) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("p" 0 1 (face font-latex-verbatim-face fontified t)) . -9127) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("p" 0 1 (face font-latex-verbatim-face fontified t)) . -9128) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 9129 (9126 . 9129) (#("u" 0 1 (face font-latex-verbatim-face fontified t)) . -9126) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) 9127 (#("s" 0 1 (face font-latex-verbatim-face fontified t)) . -9127) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("h" 0 1 (face font-latex-verbatim-face fontified t)) . -9128) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 9129 (9120 . 9129)) nil (26619 61377 338503 0) 0 nil])
([nil nil ((9136 . 9137)) nil (26619 61377 338192 0) 0 nil])
([nil nil ((9137 . 9141)) nil (26619 61377 338189 0) 0 nil])
([nil nil ((9141 . 9148)) nil (26619 61377 338186 0) 0 nil])
([nil nil ((9148 . 9150) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9148) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (9148 . 9149)) nil (26619 61377 338183 0) 0 nil])
([nil nil ((9158 . 9160) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9158) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 9159) (9149 . 9159)) nil (26619 61377 338170 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -9154) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("v" 0 1 (face font-latex-verbatim-face fontified t)) . -9155) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (#("a" 0 1 (face font-latex-verbatim-face fontified t)) . -9156) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("l" 0 1 (face font-latex-verbatim-face fontified t)) . -9157) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#(")" 0 1 (face font-latex-verbatim-face fontified t)) . -9158) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#(":" 0 1 (face font-latex-verbatim-face fontified t)) . -9159) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) 9160) nil (26619 61377 338136 0) 0 nil])
([nil nil ((#("," 0 1 (face font-latex-verbatim-face fontified t)) . -9153) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 9154) nil (26619 61377 337576 0) 0 nil])
([nil nil ((9153 . 9155) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9153) (9153 . 9154)) nil (26619 61377 337435 0) 0 nil])
([nil nil ((9155 . 9156)) nil (26619 61377 337430 0) 0 nil])
([nil nil ((9156 . 9160)) nil (26619 61377 337427 0) 0 nil])
([nil nil ((9156 . 9164) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 9156) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) 9160) nil (26619 61377 337423 0) 0 nil])
([nil nil ((9164 . 9184)) nil (26619 61377 337390 0) 0 nil])
([nil nil ((9184 . 9186) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9184) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (9184 . 9185)) nil (26619 61377 337385 0) 0 nil])
([nil nil ((9188 . 9189) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9188) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 9189) (9185 . 9189)) nil (26619 61377 337336 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-latex-verbatim-face fontified t)) . -9189) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) 9190 (9189 . 9190) (t 26619 61377 446126 329000)) nil (26619 61419 223025 0) 0 nil])
([nil nil ((9206 . 9207) 9206) nil (26619 61419 223006 0) 0 nil])
([nil nil ((9207 . 9221)) nil (26619 61419 223002 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -9217) (undo-tree-id547 . -4) (undo-tree-id548 . -4) 9221) nil (26619 61419 222999 0) 0 nil])
([nil nil ((#("that " 0 5 (fontified t)) . -9212) (undo-tree-id545 . -5) (undo-tree-id546 . -5) 9217) nil (26619 61419 222989 0) 0 nil])
([nil nil ((#("Note " 0 5 (fontified t)) . -9207) (undo-tree-id543 . -5) (undo-tree-id544 . -5) 9212) nil (26619 61419 222979 0) 0 nil])
([nil nil ((9207 . 9228)) nil (26619 61419 222969 0) 0 nil])
([nil nil ((9228 . 9232)) nil (26619 61419 222965 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -9229) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("o" 0 1 (fontified t)) . -9230) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("p" 0 1 (fontified t)) . -9231) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) 9232) nil (26619 61419 222960 0) 0 nil])
([nil nil ((9229 . 9230)) nil (26619 61419 222930 0) 0 nil])
([nil nil ((9230 . 9234)) nil (26619 61419 222927 0) 0 nil])
([nil nil ((9234 . 9236) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -9234) (9234 . 9235)) nil (26619 61419 222924 0) 0 nil])
([nil nil ((9238 . 9256) (#("}" 0 1 (fontified nil)) . -9238) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 9239) (9235 . 9239)) nil (26619 61419 222918 0) 0 nil])
([nil nil ((9256 . 9264)) nil (26619 61419 222913 0) 0 nil])
([nil nil ((#("natural. " 0 9 (fontified t)) . -9255) (undo-tree-id532 . -9) (undo-tree-id533 . -9) 9264) nil (26619 61419 222909 0) 0 nil])
([nil nil ((9255 . 9261)) nil (26619 61419 222899 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -9256) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("a" 0 1 (fontified t)) . -9257) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (#("y" 0 1 (fontified t)) . -9258) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("." 0 1 (fontified t)) . -9259) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#(" " 0 1 (fontified t)) . -9260) (undo-tree-id530 . -1) (undo-tree-id531 . -1) 9261) nil (26619 61419 222892 0) 0 nil])
([nil nil ((9256 . 9261)) nil (26619 61419 222823 0) 0 nil])
([nil nil ((#("  write code and put it here
" 0 29 (face font-latex-verbatim-face fontified t)) . 9508) (undo-tree-id572 . -28) (undo-tree-id573 . -28) (undo-tree-id574 . -28) (undo-tree-id575 . -28) (undo-tree-id576 . -28) (undo-tree-id577 . -28) (undo-tree-id578 . -28) (undo-tree-id579 . -28) (undo-tree-id580 . -28) (undo-tree-id581 . -28) (undo-tree-id582 . -28) (undo-tree-id583 . -28) (undo-tree-id584 . -29) (undo-tree-id585 . -29) 9536 (t 26619 61419 327250 73000)) nil (26619 61454 674027 0) 0 nil])
([nil nil ((#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -9567) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("]" 0 1 (face font-latex-verbatim-face fontified t)) . 9568) (9567 . 9569) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -9567) (9567 . 9568) (9566 . 9567) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . -9566) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . 9567) (9566 . 9567) (9565 . 9567) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -9565) (9565 . 9566) (9553 . 9565) (9545 . 9553) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 9545) (undo-tree-id560 . -4) (undo-tree-id561 . -4) 9549 (9545 . 9549) (#("s" 0 1 (face font-latex-verbatim-face fontified t)) . -9545) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 9546 (9545 . 9546) (9544 . 9545) (9542 . 9544) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9542) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 9543) (9538 . 9543) (9537 . 9539) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9537) (9537 . 9538) (9535 . 9537) (9531 . 9535) (9529 . 9531) (9528 . 9529) (#("_" 0 1 (face font-latex-verbatim-face fontified t)) . -9528) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (#("_" 0 1 (face font-latex-verbatim-face fontified t)) . -9529) (undo-tree-id566 . -1) (undo-tree-id567 . -1) 9530 (9528 . 9530) (9525 . 9528) (#("e" 0 1 (face font-latex-verbatim-face fontified t)) . -9525) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (#("f" 0 1 (face font-latex-verbatim-face fontified t)) . -9526) (undo-tree-id570 . -1) (undo-tree-id571 . -1) 9527 (9525 . 9527) (9521 . 9525) (9520 . 9521) (9508 . 9520) (9507 . 9508) 9472) nil (26619 61454 673982 0) 0 nil])
([nil nil ((9567 . 9568)) nil (26619 61454 673901 0) 0 nil])
([nil nil ((9568 . 9572)) nil (26619 61454 673899 0) 0 nil])
([nil nil ((9572 . 9579)) nil (26619 61454 673888 0) 0 nil])
([nil nil ((9579 . 9581) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9579) (9579 . 9580) (t 26619 61454 754200 173000)) nil (26619 61477 945799 0) 0 nil])
([nil nil ((9580 . 9587)) nil (26619 61477 945796 0) 0 nil])
([nil nil ((9587 . 9589)) nil (26619 61477 945794 0) 0 nil])
([nil nil ((9590 . 9591)) nil (26619 61477 945792 0) 0 nil])
([nil nil ((9591 . 9592)) nil (26619 61477 945791 0) 0 nil])
([nil nil ((9592 . 9596)) nil (26619 61477 945789 0) 0 nil])
([nil nil ((9592 . 9600) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 9592) (undo-tree-id606 . -4) (undo-tree-id607 . -4) 9596) nil (26619 61477 945786 0) 0 nil])
([nil nil ((9600 . 9611)) nil (26619 61477 945779 0) 0 nil])
([nil nil ((9611 . 9613) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9611) (9611 . 9612)) nil (26619 61477 945777 0) 0 nil])
([nil nil ((9612 . 9615)) nil (26619 61477 945774 0) 0 nil])
([nil nil ((#("v" 0 1 (face font-latex-verbatim-face fontified t)) . -9612) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (#("a" 0 1 (face font-latex-verbatim-face fontified t)) . -9613) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("l" 0 1 (face font-latex-verbatim-face fontified t)) . -9614) (undo-tree-id604 . -1) (undo-tree-id605 . -1) 9615) nil (26619 61477 945771 0) 0 nil])
([nil nil ((#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9611) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#(")" 0 1 (face font-latex-verbatim-face fontified t)) . 9612)) nil (26619 61477 945756 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-latex-verbatim-face fontified t)) . -9605) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("p" 0 1 (face font-latex-verbatim-face fontified t)) . -9606) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (#("p" 0 1 (face font-latex-verbatim-face fontified t)) . -9607) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("e" 0 1 (face font-latex-verbatim-face fontified t)) . -9608) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("n" 0 1 (face font-latex-verbatim-face fontified t)) . -9609) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#("d" 0 1 (face font-latex-verbatim-face fontified t)) . -9610) (undo-tree-id596 . -1) (undo-tree-id597 . -1) 9611) nil (26619 61477 945746 0) 0 nil])
([nil nil ((9605 . 9611)) nil (26619 61477 945700 0) 0 nil])
([nil nil ((9611 . 9613) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9611) (9611 . 9612)) nil (26619 61477 945697 0) 0 nil])
([nil nil ((9618 . 9619) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9618) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 9619) (9612 . 9619)) nil (26619 61477 945685 0) 0 nil])
([nil nil ((#("insert(val, 0)" 0 6 (face font-latex-verbatim-face fontified t) 6 13 (face font-latex-verbatim-face fontified t) 13 14 (face font-latex-verbatim-face fontified t)) . 9605) (undo-tree-id636 . -13) (undo-tree-id637 . -14) (undo-tree-id638 . -14) (undo-tree-id639 . -14) (undo-tree-id640 . -14) (undo-tree-id641 . -14) (undo-tree-id642 . -14) (undo-tree-id643 . -14) (undo-tree-id644 . -14) (undo-tree-id645 . -14) (undo-tree-id646 . -14) (undo-tree-id647 . -14) (undo-tree-id648 . -13) (undo-tree-id649 . -14) (undo-tree-id650 . -13) (undo-tree-id651 . -14) (undo-tree-id652 . -13) (undo-tree-id653 . -14) (undo-tree-id654 . -13) (undo-tree-id655 . -14) (undo-tree-id656 . -13) (undo-tree-id657 . -14) (undo-tree-id658 . -13) (undo-tree-id659 . -14) (undo-tree-id660 . -13) (undo-tree-id661 . -14) (undo-tree-id662 . -6) (undo-tree-id663 . -7) (undo-tree-id664 . -14) (undo-tree-id665 . -14) (undo-tree-id666 . -13) (undo-tree-id667 . -13) (undo-tree-id668 . -14) (undo-tree-id669 . -6) (undo-tree-id670 . -7) (undo-tree-id671 . -13) (undo-tree-id672 . -12) (undo-tree-id673 . -12) (undo-tree-id674 . -11) (undo-tree-id675 . -11) (undo-tree-id676 . -10) (undo-tree-id677 . -10) (undo-tree-id678 . -9) (undo-tree-id679 . -9) (undo-tree-id680 . -8) (undo-tree-id681 . -8) (undo-tree-id682 . -7) (undo-tree-id683 . -7) (undo-tree-id684 . -6) (undo-tree-id685 . -6) (undo-tree-id686 . -7) (undo-tree-id687 . -6) (undo-tree-id688 . -5) (undo-tree-id689 . -5) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -14) (t 26619 61478 27228 388000)) nil (26619 61540 234498 0) 0 nil])
([nil nil ((9605 . 9611)) nil (26619 61540 234365 0) 0 nil])
([nil nil ((9611 . 9613) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9611) (9611 . 9612)) nil (26619 61540 234363 0) 0 nil])
([nil nil ((9615 . 9616) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9615) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 9616) (9612 . 9616)) nil (26619 61540 234360 0) 0 nil])
([nil nil ((9616 . 9617)) nil (26619 61540 234355 0) 0 nil])
([nil nil ((9617 . 9621)) nil (26619 61540 234353 0) 0 nil])
([nil nil ((9621 . 9626)) nil (26619 61540 234352 0) 0 nil])
([nil nil ((9626 . 9631)) nil (26619 61540 234350 0) 0 nil])
([nil nil ((9631 . 9633) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -9631) (9631 . 9632)) nil (26619 61540 234348 0) 0 nil])
([nil nil ((9636 . 9637) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -9636) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 9637) (9632 . 9637)) nil (26619 61540 234345 0) 0 nil])
([nil nil ((9637 . 9638)) nil (26619 61540 234342 0) 0 nil])
([nil nil ((9638 . 9642)) nil (26619 61540 234340 0) 0 nil])
([nil nil ((9638 . 9646) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 9638) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) 9642) nil (26619 61540 234338 0) 0 nil])
([nil nil ((9646 . 9651)) nil (26619 61540 234325 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-latex-verbatim-face fontified t)) . -9649) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#("r" 0 1 (face font-latex-verbatim-face fontified t)) . -9650) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) 9651) nil (26619 61540 234322 0) 0 nil])
([nil nil ((9649 . 9667)) nil (26619 61540 234283 0) 0 nil])
([nil nil ((9667 . 9669) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -9667) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (9667 . 9668)) nil (26619 61540 234280 0) 0 nil])
([nil nil ((9669 . 9670) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . -9669) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . 9670) (9668 . 9670)) nil (26619 61540 234271 0) 0 nil])
([nil nil ((9670 . 9671)) nil (26619 61540 234266 0) 0 nil])
([nil nil ((9671 . 9675)) nil (26619 61540 234264 0) 0 nil])
([nil nil ((9671 . 9679) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 9671) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) 9675) nil (26619 61540 234254 0) 0 nil])
([nil nil ((9704 . 9720) (9696 . 9704) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 9696) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) 9700 (#("r" 0 1 (face font-latex-verbatim-face fontified t)) . -9700) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) 9701 (9700 . 9701) (9696 . 9700) (9695 . 9696) (9694 . 9695) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . -9694) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . 9695) (9693 . 9695) (9692 . 9694) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -9692) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (9692 . 9693) (9679 . 9692) (t 26619 61540 310277 938000)) nil (26619 61597 909635 0) 0 nil])
([nil nil ((9812 . 9817) (#("qu" 0 2 (fontified t)) . -9812) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -2) (undo-tree-id704 . -2) (undo-tree-id705 . -2) (undo-tree-id706 . -2) (undo-tree-id707 . -2) (undo-tree-id708 . -2) (undo-tree-id709 . -2) 9814 (#("e" 0 1 (fontified t)) . -9814) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) 9815 (9814 . 9815) (9812 . 9814) (9811 . 9813) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -9811) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (9811 . 9812) (9807 . 9811) (9806 . 9807) (9801 . 9806) (9795 . 9800) (#("stack" 0 5 (fontified t)) . -9795) (undo-tree-id717 . -5) (undo-tree-id718 . -5) 9800 (9795 . 9800) (9794 . 9796) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -9794) (9794 . 9795) (9790 . 9794) (9789 . 9790) (9783 . 9789) (9772 . 9783) (9751 . 9772) (#("d" 0 1 (fontified t)) . -9751) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (#("i" 0 1 (fontified t)) . -9752) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (#("d" 0 1 (fontified t)) . -9753) (undo-tree-id723 . -1) (undo-tree-id724 . -1) 9754 (9751 . 9754) (9745 . 9751) (#("note " 0 5 (fontified t)) . -9745) (undo-tree-id725 . -5) (undo-tree-id726 . -5) 9750 (#("the " 0 4 (fontified t)) . -9750) (undo-tree-id727 . -4) (undo-tree-id728 . -4) 9754 (#("implementations " 0 16 (fontified t)) . -9754) (undo-tree-id729 . -16) (undo-tree-id730 . -16) 9770 (#("for " 0 4 (fontified t)) . -9770) (undo-tree-id731 . -4) (undo-tree-id732 . -4) 9774 (9754 . 9774) (#("code " 0 5 (fontified t)) . -9754) (undo-tree-id733 . -5) (undo-tree-id734 . -5) 9759 (9748 . 9759) (#(" " 0 1 (fontified t)) . -9748) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (#("t" 0 1 (fontified t)) . -9749) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (#("h" 0 1 (fontified t)) . -9750) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (#("i" 0 1 (fontified t)) . -9751) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (#("s" 0 1 (fontified t)) . -9752) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (#(" " 0 1 (fontified t)) . -9753) (undo-tree-id745 . -1) (undo-tree-id746 . -1) 9754 (9740 . 9754) (9738 . 9740) (9737 . 9738) 9737) nil (26619 61629 642997 0) 0 nil])
([nil nil ((#("
\\begin{lstlisting}[language=Python]
  write code and put it here
\\end{lstlisting}
" 0 1 (fontified t) 1 7 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t) 8 18 (face (font-lock-function-name-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 37 (face font-latex-verbatim-face syntax-table (15) fontified t) 37 66 (face font-latex-verbatim-face fontified t) 66 67 (face (font-lock-keyword-face font-latex-sedate-face) syntax-table (15) fontified t) 67 70 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 81 (face (font-lock-function-name-face) fontified t) 81 82 (face (rainbow-delimiters-depth-1-face) fontified t) 82 83 (fontified t)) . 8636) (undo-tree-id778 . -66) (undo-tree-id779 . -83) (undo-tree-id780 . -66) (undo-tree-id781 . -66) (undo-tree-id782 . -82) (undo-tree-id783 . -36) (undo-tree-id784 . -66) (undo-tree-id785 . -82) (undo-tree-id786 . -65) (undo-tree-id787 . -65) (undo-tree-id788 . -36) (undo-tree-id789 . -36) (undo-tree-id790 . -36) (undo-tree-id791 . -36) (undo-tree-id792 . -1) (undo-tree-id793 . -37) (undo-tree-id794 . -66) (undo-tree-id795 . -66) (undo-tree-id796 . -66) (undo-tree-id797 . -83) (undo-tree-id798 . -83) 8702 (t 26619 61597 987865 489000)) nil (26619 61674 365657 0) 0 nil] [nil nil ((9545 . 9549) (9544 . 9545) (t 26619 61597 987865 489000) 9544) ((#("
" 0 1 (face font-latex-verbatim-face fontified t)) . 9544) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (#("ubly" 0 4 (face font-latex-verbatim-face fontified t)) . 9545) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (undo-tree-id773 . -1) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4)) (26619 61629 642379 0) 0 nil])
([nil nil ((8636 . 8637)) nil (26647 63807 241616 0) 0 nil])
nil
([nil nil ((16789 . 16790) (t 26619 61674 445153 717000) 16715) nil (26647 64444 801093 0) 0 nil] [nil nil ((#("\\subsection{C implementation}
" 0 11 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 28 (face (font-latex-sectioning-3-face) fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t)) . 22994) (undo-tree-id7 . -30) (undo-tree-id8 . -30) (undo-tree-id9 . -30) (undo-tree-id10 . -30) (undo-tree-id11 . -30) (undo-tree-id12 . -30) (undo-tree-id13 . -29) (t 26619 61674 445153 717000)) ((22994 . 23024)) (26647 63806 847997 0) 0 nil])
([nil nil ((16790 . 16791)) nil (26647 64444 801087 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22994) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) ((22994 . 22995)) (26647 63806 847862 0) 0 nil])
([nil nil ((16791 . 16796) (t 26647 64444 867506 645000)) nil (26648 526 619117 0) 0 nil])
nil
([nil nil ((#("jjjjj
" 0 5 (fontified t) 5 6 (fontified t)) . 16791) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . 1) 16796) nil (26648 526 619115 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16791) (undo-tree-id129 . 1)) nil (26648 526 619101 0) 0 nil])
([nil nil ((#("\\subsection{Bonus: Bellman Ford Algorithm}
The Bellman Ford search algorithm is similar to Dijkstra's but handles negative edge weights.

" 0 11 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 41 (face (font-latex-sectioning-3-face) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t) 43 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t)) . 16653) (undo-tree-id111 . -137) (undo-tree-id112 . -137) (undo-tree-id113 . -137) (undo-tree-id114 . -137) (undo-tree-id115 . -138) (undo-tree-id116 . -138) (undo-tree-id117 . -43) (undo-tree-id118 . -43) (undo-tree-id119 . -137) (undo-tree-id120 . -43) (undo-tree-id121 . -137) (undo-tree-id122 . -137) (undo-tree-id123 . -137) (undo-tree-id124 . -137) (undo-tree-id125 . -137) (undo-tree-id126 . -137) (undo-tree-id127 . -138) (undo-tree-id128 . -138) 16790) nil (26648 526 619097 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 16003 . 16004) (#("
" 0 1 (fontified nil)) . -16141) (16003 . 16142) 15935) nil (26648 526 619067 0) 0 nil])
([nil nil ((16003 . 16004) 15935) nil (26648 526 619064 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 16218) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("$" 0 1 (fontified nil)) . 16219) (16217 . 16219) (#("$" 0 1 (fontified nil)) . -16217) (undo-tree-id17 . -1) (16217 . 16219) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . -16217) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (16217 . 16218) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16217) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 16218) (undo-tree-id41 . -1) (#("$" 0 1 (fontified nil)) . 16218) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (16217 . 16218) (#("$" 0 1 (fontified nil)) . -16217) (16217 . 16218) (#("$" 0 1 (face font-latex-math-face fontified t)) . -16217) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (16218 . 16220) (#("$" 0 1 (fontified nil)) . -16218) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (16217 . 16219) (#("$" 0 1 (fontified nil)) . -16217) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 16218) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (16217 . 16218) (#("$" 0 1 (fontified nil)) . -16217) (16217 . 16218) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16217) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (16217 . 16218) (#("#" 0 1 (face font-latex-math-face fontified t)) . -16217) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 16218 (16217 . 16218) (#(" " 0 1 (face font-latex-math-face fontified t)) . -16217) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 16218 (16217 . 16218) (16216 . 16217) (#("n" 0 1 (face font-latex-math-face fontified t)) . -16216) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#(" " 0 1 (face font-latex-math-face fontified t)) . -16217) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 16218 (16217 . 16218) (16216 . 16217) (#("$" 0 1 (fontified nil)) . 16217) (16215 . 16217) (#("$" 0 1 (fontified nil)) . -16215) (16215 . 16217) (#("$" 0 1 (fontified nil)) . -16215) (16215 . 16216) (16203 . 16215) (16201 . 16203) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 16201) (#("x" 0 1 (fontified t)) . -16201) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 16202 (16201 . 16202) (#("$" 0 1 (fontified nil)) . 16202) (16200 . 16202) (#("$" 0 1 (fontified nil)) . -16200) (16200 . 16202) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . -16200) (16200 . 16201) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16200) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 16201) (#("$" 0 1 (fontified nil)) . 16201) (16200 . 16201) (#("$" 0 1 (fontified nil)) . -16200) (16200 . 16201) (#("$" 0 1 (face font-latex-math-face fontified t)) . -16200) (16201 . 16203) (#("$" 0 1 (fontified nil)) . -16201) (16200 . 16202) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16200) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 16201) (16200 . 16201) (16199 . 16200) (16198 . 16199) (16197 . 16198) (#("$" 0 1 (fontified nil)) . 16198) (16196 . 16198) (#("$" 0 1 (fontified nil)) . -16196) (16196 . 16198) (#("$" 0 1 (fontified nil)) . -16196) (16196 . 16197) (#(" " 0 1 (fontified nil)) . 16186) (16185 . 16186) (16185 . 16196) (16183 . 16185) (16180 . 16183) (16172 . 16180) (16151 . 16172) (16130 . 16151) (16119 . 16130) (#("the " 0 4 (fontified t)) . -16119) (undo-tree-id83 . -4) (undo-tree-id84 . -4) 16123 (#("case " 0 5 (fontified t)) . -16123) (undo-tree-id85 . -5) (undo-tree-id86 . -5) 16128 (16123 . 16128) (#(" " 0 1 (fontified nil)) . 16119) (16118 . 16119) (16111 . 16123) (#("handles
" 0 8 (fontified t)) . -16111) (undo-tree-id87 . -8) (undo-tree-id88 . -8) 16119 (#("negative " 0 9 (fontified t)) . -16119) (undo-tree-id89 . -9) (undo-tree-id90 . -9) 16128 (#("edge " 0 5 (fontified t)) . -16128) (undo-tree-id91 . -5) (undo-tree-id92 . -5) 16133 (#("weights. " 0 9 (fontified t)) . -16133) (undo-tree-id93 . -9) (undo-tree-id94 . -9) 16142 (#("It " 0 3 (fontified t)) . -16142) (undo-tree-id95 . -3) (undo-tree-id96 . -3) 16145 (#("does " 0 5 (fontified t)) . -16145) (undo-tree-id97 . -5) (undo-tree-id98 . -5) 16150 (#("this " 0 5 (fontified t)) . -16150) (undo-tree-id99 . -5) (undo-tree-id100 . -5) 16155 (#("by " 0 3 (fontified t)) . -16155) (undo-tree-id101 . -3) (undo-tree-id102 . -3) 16158 (#("having" 0 6 (fontified t)) . -16158) (undo-tree-id103 . -6) (undo-tree-id104 . -6) 16164 (16150 . 16164) (#("d" 0 1 (fontified t)) . -16150) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("o" 0 1 (fontified t)) . -16151) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("e" 0 1 (fontified t)) . -16152) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 16153 (16142 . 16153) (#(" " 0 1 (fontified nil)) . 16119) (16118 . 16119) (16141 . 16142)) nil (26648 526 619044 0) 0 nil])
([nil nil ((16218 . 16219)) nil (26648 526 618833 0) 0 nil])
([nil nil ((16218 . 16233)) nil (26648 526 618831 0) 0 nil])
([nil nil ((16233 . 16254)) nil (26648 526 618827 0) 0 nil])
([nil nil ((#("The" 0 3 (fontified t)) . -16255) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3) 16258 (#(" " 0 1 (fontified t)) . -16258) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("p" 0 1 (fontified t)) . -16259) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("e" 0 1 (fontified t)) . -16260) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 16261 (16255 . 16261) (16254 . 16255) (#(" " 0 1 (fontified nil)) . -16254) (#(" " 0 1 (fontified nil)) . 16253) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (16254 . 16255) (16247 . 16254) (#("graph,
" 0 7 (fontified t)) . -16247) (undo-tree-id168 . -7) (undo-tree-id169 . -7) 16254 (#("and " 0 4 (fontified t)) . -16254) (undo-tree-id170 . -4) (undo-tree-id171 . -4) 16258 (#("using " 0 6 (fontified t)) . -16258) (undo-tree-id172 . -6) (undo-tree-id173 . -6) 16264 (#("path " 0 5 (fontified t)) . -16264) (undo-tree-id174 . -5) (undo-tree-id175 . -5) 16269 (#("distances " 0 10 (fontified t)) . -16269) (undo-tree-id176 . -10) (undo-tree-id177 . -10) 16279 (#("computed " 0 9 (fontified t)) . -16279) (undo-tree-id178 . -9) (undo-tree-id179 . -9) 16288 (#("from " 0 5 (fontified t)) . -16288) (undo-tree-id180 . -5) (undo-tree-id181 . -5) 16293 (#("the " 0 4 (fontified t)) . -16293) (undo-tree-id182 . -4) (undo-tree-id183 . -4) 16297 (#("pr" 0 2 (fontified t)) . -16297) (undo-tree-id184 . -2) (undo-tree-id185 . -2) 16299 (16290 . 16299) (16269 . 16290) (#("distacnes " 0 10 (fontified t)) . -16269) (undo-tree-id186 . -10) (undo-tree-id187 . -10) 16279 (#("c" 0 1 (fontified t)) . -16279) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 16280 (16264 . 16280) (#("edge " 0 5 (fontified t)) . -16264) (undo-tree-id190 . -5) (undo-tree-id191 . -5) 16269 (16265 . 16269) (16264 . 16265) (#("up" 0 2 (fontified t)) . -16264) (undo-tree-id192 . -2) (undo-tree-id193 . -2) 16266 (#("a" 0 1 (fontified t)) . -16266) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("d" 0 1 (fontified t)) . -16267) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 16268 (16258 . 16268) (#(" " 0 1 (fontified nil)) . 16254) (16253 . 16254) (16252 . 16258) (#("." 0 1 (fontified t)) . -16252) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#(" " 0 1 (fontified t)) . -16253) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 16254 (t 26648 526 690427 370000)) nil (26648 592 422308 0) 0 nil])
([nil nil ((16253 . 16254) 16186) nil (26648 618 101337 0) 0 nil] [nil nil ((nil rear-nonsticky nil 16559 . 16560) (nil fontified nil 16187 . 16560) (16187 . 16560) 16186) ((#("\\begin{lstlisting}
Dijkstra(G = (V,E), startNode)
    S = startNode # S is the set of explored nodes
    d(startNode) = 0 # d(v) is the shortest path from startNode to v

    while S != V
        choose v in (V \\ S) such that d(u) +|(u,v)| is minimized where u
        is in S
        Add v to S
        Set d(v) = d(u) + |(u,v)|
# Taken from Qilin's notes
\\end{lstlisting}" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 6 7 (face (rainbow-delimiters-depth-1-face) fontified nil) 7 17 (face (font-lock-function-name-face) fontified nil) 17 18 (face (rainbow-delimiters-depth-1-face) fontified nil) 18 19 (fontified nil) 19 357 (face font-latex-verbatim-face fontified nil) 357 358 (syntax-table (15) face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 358 361 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil) 361 362 (face (rainbow-delimiters-depth-1-face) fontified nil) 362 372 (face (font-lock-function-name-face) fontified nil) 372 373 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky nil)) . 16187) (undo-tree-id210 . -15) (undo-tree-id211 . -15) (undo-tree-id212 . -372) (undo-tree-id213 . -15) (undo-tree-id214 . -15) (undo-tree-id215 . -15) (undo-tree-id216 . -15) (undo-tree-id217 . -15) (undo-tree-id218 . -15) (undo-tree-id219 . -15) (nil fontified t 16206 . 16544) (nil fontified t 16205 . 16206) (nil fontified t 16204 . 16205) (nil fontified t 16194 . 16204) (nil fontified t 16193 . 16194) (nil fontified t 16187 . 16193) (nil rear-nonsticky t 16559 . 16560)) (26648 591 971965 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 16629 . 16630) (nil fontified nil 16257 . 16630) (16257 . 16630)) nil (26648 618 101335 0) 0 nil])
([nil nil (16202) nil (26648 591 492237 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 16254) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . 2) (undo-tree-id225 . -1) 16255) nil (26648 618 101331 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 16186) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1)) ((16186 . 16187)) (26648 591 30746 0) 0 nil])
([nil nil ((16628 . 16629) 16612) nil (26648 618 101311 0) 0 nil])
([nil nil ((16185 . 16186) 16119) ((#("
" 0 1 (fontified t)) . 16185) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1)) (26648 591 30481 0) 0 nil])
([nil nil ((16425 . 16426) 16425) nil (26648 618 101305 0) 0 nil])
nil
([nil nil ((16426 . 16430) (t 26648 618 166585 175000)) nil (26648 768 502963 0) 0 nil])
([nil nil ((#("        " 0 8 (face font-latex-verbatim-face fontified nil)) . -16584) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (16572 . 16584) (#("        " 0 8 (face font-latex-verbatim-face fontified nil)) . -16561) (16549 . 16561) (#("        " 0 8 (face font-latex-verbatim-face fontified nil)) . -16541) (16529 . 16541) (#("        " 0 8 (face font-latex-verbatim-face fontified nil)) . -16464) (16452 . 16464) (#("    " 0 4 (face font-latex-verbatim-face fontified nil)) . -16439) (undo-tree-id236 . -4) (16431 . 16439) 16560) nil (26648 768 502960 0) 0 nil])
([nil nil ((16452 . 16453) (16451 . 16452) (16449 . 16450) (#("V" 0 1 (face font-latex-verbatim-face fontified t)) . -16449) (undo-tree-id230 . -1) (undo-tree-id231 . -1) 16450 (16449 . 16450) (16448 . 16450) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -16448) (16448 . 16449) (16445 . 16448) (16444 . 16446) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -16444) (16444 . 16445) (16436 . 16444) (16430 . 16436)) nil (26648 768 502944 0) 0 nil])
([nil nil (16302) nil (26648 768 502934 0) 0 nil])
([nil nil ((16274 . 16285) (#("Dijkstra" 0 8 (face font-latex-verbatim-face fontified t)) . 16274) (undo-tree-id226 . -7) (undo-tree-id227 . 8) (undo-tree-id228 . -8) (undo-tree-id229 . -8)) nil (26648 768 502928 0) 0 nil])
([nil nil ((16267 . 16277) (#("the " 0 4 (fontified t)) . -16267) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) 16271 (#("g" 0 1 (fontified t)) . -16271) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 16272 (16264 . 16272) (#(" " 0 1 (fontified nil)) . 16258) (16257 . 16258) (16243 . 16264) (16240 . 16243) (#("$" 0 1 (fontified nil)) . 16240) (16239 . 16240) (#("$" 0 1 (fontified nil)) . -16239) (16239 . 16240) (#("$" 0 1 (face font-latex-math-face fontified t)) . -16239) (16240 . 16242) (#("$" 0 1 (fontified nil)) . -16240) (16240 . 16241) (#("$" 0 1 (fontified nil)) . -16240) (16239 . 16241) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16239) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 16240) (16239 . 16240) (16238 . 16239) (#("$" 0 1 (fontified nil)) . 16239) (16237 . 16239) (#("$" 0 1 (fontified nil)) . -16237) (16237 . 16239) (#("$" 0 1 (fontified nil)) . -16237) (16237 . 16238) (#("$" 0 1 (fontified nil)) . -16237) (16237 . 16238) (16223 . 16237) (#("$" 0 1 (fontified nil)) . 16223) (16222 . 16223) (#("$" 0 1 (fontified nil)) . -16222) (16222 . 16223) (#("$" 0 1 (face font-latex-math-face fontified t)) . -16222) (16223 . 16225) (#("$" 0 1 (fontified nil)) . -16223) (16222 . 16224) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16222) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 16223) (16222 . 16223) (16221 . 16222) (16220 . 16221) (16219 . 16220) (#("$" 0 1 (fontified nil)) . 16220) (16218 . 16220) (#("$" 0 1 (fontified nil)) . -16218) (16218 . 16220) (#("$" 0 1 (fontified nil)) . -16218) (16218 . 16219) (16206 . 16218) (16204 . 16206) (16198 . 16204) (#("neighb" 0 6 (fontified t)) . -16198) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) 16204 (16195 . 16204) (16190 . 16195) (#(" " 0 1 (fontified nil)) . 16189) (16174 . 16191) (16165 . 16174) (#("repeatedly " 0 11 (fontified t)) . -16165) (undo-tree-id64 . -11) (undo-tree-id65 . -11) 16176 (#("checking " 0 9 (fontified t)) . -16176) (undo-tree-id66 . -9) (undo-tree-id67 . -9) 16185 (16171 . 16185) (16165 . 16171) (#("searching " 0 10 (fontified t)) . -16165) (undo-tree-id68 . -10) (undo-tree-id69 . -10) (undo-tree-id70 . -10) 16175 (#("nodes " 0 6 (fontified t)) . -16175) (undo-tree-id71 . -6) (undo-tree-id72 . -6) 16181 (#("next " 0 5 (fontified t)) . -16181) (undo-tree-id73 . -5) (undo-tree-id74 . -5) 16186 (#("to " 0 3 (fontified t)) . -16186) (undo-tree-id75 . -3) (undo-tree-id76 . -3) 16189 (16175 . 16189) (#("through" 0 7 (fontified t)) . -16175) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) 16182 (16165 . 16182) (t 26648 768 572835 578000)) nil (26651 30744 421671 0) 0 nil])
([nil nil ((#("$$repeating Dijkstra's
algorithm $N-1$ times, where $N$ is the number of nodes in a graph." 0 1 (fontified t) 1 2 (fontified t) 2 23 (fontified t) 23 33 (fontified t) 33 34 (fontified t) 34 37 (fontified t) 37 38 (fontified t) 38 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 90 (fontified t)) . 16277) (undo-tree-id46 . -89) (undo-tree-id47 . -24) (undo-tree-id48 . -23) (undo-tree-id49 . -22) (undo-tree-id50 . -89) (undo-tree-id51 . 90) (undo-tree-id52 . -89) (undo-tree-id53 . -89) (undo-tree-id54 . -89) 16366) nil (26651 30744 421592 0) 0 nil])
([nil nil ((16314 . 16317) (16310 . 16314) (16289 . 16310) (#("n" 0 1 (fontified t)) . -16289) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 16290 (16277 . 16290)) nil (26651 30744 421575 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16277) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 16278 (#("Note " 0 5 (fontified t)) . -16278) (undo-tree-id42 . -5) (undo-tree-id43 . -5) 16283 (16277 . 16283)) nil (26651 30744 421567 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16202) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 16203 (16198 . 16203) (#("all " 0 4 (fontified t)) . -16198) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) 16202 (16201 . 16202) (16199 . 16201)) nil (26651 30744 421556 0) 0 nil])
([nil nil ((16383 . 16388) (#("d" 0 1 (fontified t)) . -16383) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 16384 (16364 . 16384) (16343 . 16364) (16337 . 16343) (#(" " 0 1 (fontified nil)) . 16327) (16326 . 16327) (16327 . 16337) (16306 . 16327) (#("$" 0 1 (fontified nil)) . 16307) (16305 . 16307) (#("$" 0 1 (fontified nil)) . -16305) (16305 . 16307) (#("$" 0 1 (fontified nil)) . -16305) (16305 . 16306) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16305) (16305 . 16306) (16304 . 16305) (16303 . 16304) (16302 . 16303) (#("n" 0 1 (face font-latex-math-face fontified t)) . -16302) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("-" 0 1 (face font-latex-math-face fontified t)) . -16303) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("1" 0 1 (face font-latex-math-face fontified t)) . -16304) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 16305 (16304 . 16305) (16303 . 16304) (16302 . 16303) (#("$" 0 1 (fontified nil)) . 16303) (16301 . 16303) (#("$" 0 1 (fontified nil)) . -16301) (16301 . 16303) (#("$" 0 1 (fontified nil)) . -16301) (16301 . 16302) (16281 . 16301)) nil (26651 30744 421540 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . 16388) (undo-tree-id11 . 1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1)) nil (26651 30744 421505 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 16388) (undo-tree-id7 . 1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) nil (26651 30744 421484 0) 0 nil])
([nil nil ((16388 . 16389)) nil (26651 30744 421476 0) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -16388) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 16389) nil (26651 30744 421474 0) 0 nil])
([nil nil ((16401 . 16409) (#(" " 0 1 (fontified nil)) . 16396) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (16395 . 16396) (16388 . 16401)) nil (26651 30744 421463 0) 0 nil])
([nil nil ((16409 . 16430)) nil (26651 30744 421425 0) 0 nil])
([nil nil ((16430 . 16433)) nil (26651 30744 421422 0) 0 nil])
([nil nil ((16433 . 16434)) nil (26651 30744 421418 0) 0 nil])
([nil nil ((#("Dijkstra" 0 8 (fontified t)) . -16426) (undo-tree-id197 . -8) (undo-tree-id198 . -8) (undo-tree-id199 . -8) (undo-tree-id200 . -8) (undo-tree-id201 . -8) (undo-tree-id202 . -8) (undo-tree-id203 . -8) (undo-tree-id204 . -8) (undo-tree-id205 . -8) (undo-tree-id206 . -8) (undo-tree-id207 . -8) (undo-tree-id208 . -8) 16434 (t 26651 30744 502864 202000)) nil (26651 30759 787457 0) 0 nil])
([nil nil ((#("repeating " 0 10 (fontified t)) . -16416) (undo-tree-id183 . -10) (undo-tree-id184 . -10) (undo-tree-id185 . -10) (undo-tree-id186 . -10) (undo-tree-id187 . -10) (undo-tree-id188 . -10) (undo-tree-id189 . -10) (undo-tree-id190 . -10) (undo-tree-id191 . -10) (undo-tree-id192 . -10) (undo-tree-id193 . -10) (undo-tree-id194 . -10) (undo-tree-id195 . -10) (undo-tree-id196 . -10) 16426) nil (26651 30759 787435 0) 0 nil])
([nil nil ((#("exactly " 0 8 (fontified t)) . -16408) (undo-tree-id167 . -8) (undo-tree-id168 . -8) (undo-tree-id169 . -8) (undo-tree-id170 . -8) (undo-tree-id171 . -8) (undo-tree-id172 . -8) (undo-tree-id173 . -8) (undo-tree-id174 . -8) (undo-tree-id175 . -8) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (undo-tree-id178 . -8) (undo-tree-id179 . -8) (undo-tree-id180 . -8) (undo-tree-id181 . -8) (undo-tree-id182 . -8) 16416) nil (26651 30759 787395 0) 0 nil])
([nil nil ((#("not " 0 4 (fontified t)) . -16404) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) 16408) nil (26651 30759 787352 0) 0 nil])
([nil nil ((#("is " 0 3 (fontified t)) . -16401) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) 16404) nil (26651 30759 787270 0) 0 nil])
([nil nil ((#("Ford " 0 5 (fontified t)) . -16396) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -5) 16401) nil (26651 30759 787190 0) 0 nil])
([nil nil ((#("Bellman
" 0 8 (fontified t)) . -16388) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (undo-tree-id99 . -8) (undo-tree-id100 . -8) (undo-tree-id101 . -8) (undo-tree-id102 . -8) (undo-tree-id103 . -8) (undo-tree-id104 . -8) (undo-tree-id105 . -8) (undo-tree-id106 . -8) 16396) nil (26651 30759 787106 0) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-2-face font-latex-italic-face) fontified nil)) . -16407) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 16408) (undo-tree-id262 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face font-latex-italic-face) fontified t)) . 16408) (#(" " 0 1 (face (font-latex-italic-face) fontified t)) . -16408) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) 16409 (16408 . 16409) (16407 . 16409) (#("{" 0 1 (face (font-latex-italic-face) fontified nil)) . -16407) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (16407 . 16408) (16404 . 16407) (#("n" 0 1 (face (font-latex-italic-face) fontified t)) . -16404) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("s" 0 1 (face (font-latex-italic-face) fontified t)) . -16405) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("n" 0 1 (face (font-latex-italic-face) fontified t)) . -16406) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) 16407 (16401 . 16407) (16400 . 16402) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -16400) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (16400 . 16401) (16394 . 16400) (16393 . 16394) (#("almost " 0 7 (fontified t)) . -16393) (undo-tree-id299 . -7) (undo-tree-id300 . -7) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -2) (undo-tree-id304 . -2) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -5) (undo-tree-id310 . -5) (undo-tree-id311 . -6) (undo-tree-id312 . -6) (undo-tree-id313 . -7) (undo-tree-id314 . -7) (undo-tree-id315 . -7) 16400 (#(" " 0 1 (fontified nil)) . 16393) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (16392 . 16393) (16392 . 16400) (16390 . 16392) (16388 . 16390) (t 26651 30759 857013 180000)) nil (26651 30833 210710 0) 0 nil])
([nil nil ((16602 . 16609) (16601 . 16602) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 16600) (16591 . 16602) (16570 . 16591) (16549 . 16570) (16548 . 16550) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -16548) (16548 . 16549) (16545 . 16548) (16540 . 16545) (#("footnote{... " 0 8 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t) 9 13 (face (font-lock-constant-face) fontified t)) . -16540) (undo-tree-id226 . -13) (undo-tree-id227 . -13) (undo-tree-id228 . -13) 16553 (#("and " 0 4 (face (font-lock-constant-face) fontified t)) . -16553) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) 16557 (16549 . 16557) (16548 . 16550) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -16548) (16548 . 16549) (16540 . 16548) (16539 . 16540) (#(" " 0 1 (fontified t)) . -16539) (undo-tree-id232 . -1) (undo-tree-id233 . -1) 16540 (#(" " 0 1 (fontified nil)) . 16530) (16529 . 16530) (16531 . 16540) (16528 . 16531) (16507 . 16528) (16486 . 16507) (#(" " 0 1 (fontified t)) . -16486) (undo-tree-id234 . -1) (undo-tree-id235 . -1) 16487 (16474 . 16487) (#("v" 0 1 (fontified t)) . -16474) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 16475 (16469 . 16475) (#(" " 0 1 (fontified nil)) . 16462) (16461 . 16462) (16458 . 16469) (#("l" 0 1 (fontified t)) . -16458) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 16459 (#("p" 0 1 (fontified t)) . -16459) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 16460 (16442 . 16460) (16440 . 16442) (16428 . 16440) (16407 . 16428) (#("}" 0 1 (fontified nil)) . -16407) (16407 . 16408) (#("N" 0 1 (fontified t)) . -16407) (undo-tree-id242 . -1) (undo-tree-id243 . 1) (undo-tree-id244 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16408) (undo-tree-id245 . -1) (undo-tree-id246 . -1) 16409 (16408 . 16409) (#("}" 0 1 (fontified nil)) . -16408) (16408 . 16409)) nil (26651 30833 210579 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16610) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1)) nil (26651 30833 210524 0) 0 nil])
([nil nil ((#("ote this is not exactly repeating Dijk
" 0 3 (fontified t) 3 38 (fontified t) 38 39 (fontified t)) . 16610) (undo-tree-id211 . -38) (undo-tree-id212 . -38) (undo-tree-id213 . -38) (undo-tree-id214 . -38) (undo-tree-id215 . -38) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -38) (undo-tree-id219 . -38) (undo-tree-id220 . -38) (undo-tree-id221 . -39) (undo-tree-id222 . -39) 16648) nil (26651 30833 210517 0) 0 nil])
([nil nil ((16610 . 16611)) nil (26651 30833 210495 0) 0 nil])
([nil nil ((#("a" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . 16591) (undo-tree-id209 . -1) (undo-tree-id210 . -1)) nil (26651 30833 210491 0) 0 nil])
([nil nil ((16469 . 16474) (#("but" 0 3 (fontified t)) . 16469) (undo-tree-id339 . -2) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (t 26651 30833 281162 488000)) nil (26651 30859 784610 0) 0 nil])
([nil nil ((16469 . 16472) (#("where" 0 5 (fontified t)) . 16469) (undo-tree-id323 . -4) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5)) nil (26651 30859 784601 0) 0 nil])
([nil nil ((16478 . 16487) (#("time" 0 4 (fontified t)) . 16478) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -4) (undo-tree-id322 . -4)) nil (26651 30859 784570 0) 0 nil])
([nil nil ((16723 . 16730) (#("g" 0 1 (fontified t)) . -16723) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#("h" 0 1 (fontified t)) . -16724) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("i" 0 1 (fontified t)) . -16725) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#("b" 0 1 (fontified t)) . -16726) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) 16727 (16721 . 16727) (16700 . 16721) (16684 . 16700) (#("exploring, " 0 11 (fontified t)) . -16684) (undo-tree-id386 . -11) (undo-tree-id387 . -11) (undo-tree-id388 . -11) 16695 (#("Bell" 0 4 (fontified t)) . -16695) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) 16699 (16692 . 16699) (16679 . 16692) (#(" " 0 1 (fontified nil)) . 16668) (16667 . 16668) (16671 . 16679) (16668 . 16671) (#("e" 0 1 (fontified t)) . -16668) (undo-tree-id392 . -1) (undo-tree-id393 . -1) 16669 (16668 . 16669) (#("nighbou" 0 7 (fontified t)) . -16668) (undo-tree-id394 . -7) (undo-tree-id395 . -7) 16675 (16659 . 16675) (#("high" 0 4 (fontified t)) . -16659) (undo-tree-id396 . -4) (undo-tree-id397 . -4) 16663 (16650 . 16663) (#("priortizes " 0 11 (fontified t)) . -16650) (undo-tree-id398 . -11) (undo-tree-id399 . -11) 16661 (16650 . 16661) (#("picks " 0 6 (fontified t)) . -16650) (undo-tree-id400 . -6) (undo-tree-id401 . -6) 16656 (#("the " 0 4 (fontified t)) . -16656) (undo-tree-id402 . -4) (undo-tree-id403 . -4) 16660 (16657 . 16660) (#("e" 0 1 (fontified t)) . -16657) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (#("h" 0 1 (fontified t)) . -16658) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (#(" " 0 1 (fontified t)) . -16659) (undo-tree-id408 . -1) (undo-tree-id409 . -1) 16660 (16650 . 16660) (#("takes " 0 6 (fontified t)) . -16650) (undo-tree-id410 . -6) (undo-tree-id411 . -6) 16656 (#("a " 0 2 (fontified t)) . -16656) (undo-tree-id412 . -2) (undo-tree-id413 . -2) 16658 (#("greedy " 0 7 (fontified t)) . -16658) (undo-tree-id414 . -7) (undo-tree-id415 . -7) 16665 (#("a" 0 1 (fontified t)) . -16665) (undo-tree-id416 . -1) (undo-tree-id417 . -1) 16666 (16650 . 16666) (#("picks " 0 6 (fontified t)) . -16650) (undo-tree-id418 . -6) (undo-tree-id419 . -6) (undo-tree-id420 . -6) 16656 (#("the " 0 4 (fontified t)) . -16656) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) 16660 (#("minimum " 0 8 (fontified t)) . -16660) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) 16668 (#("path" 0 4 (fontified t)) . -16668) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) 16672 (16671 . 16672) (16650 . 16671) (#("prefers " 0 8 (fontified t)) . -16650) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) 16658 (16654 . 16658) (16649 . 16654) (16647 . 16649) (16636 . 16647) (16615 . 16636) (t 26651 30859 856532 631000)) nil (26651 30939 609304 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16707) (#(";" 0 1 (fontified t)) . 16707) (#("g" 0 1 (fontified t)) . 16707) (#("n" 0 1 (fontified t)) . 16707) (#("i" 0 1 (fontified t)) . 16707) (#("r" 0 1 (fontified t)) . 16707) (#("o" 0 1 (fontified t)) . 16707) (#("l" 0 1 (fontified t)) . 16707) (#("p" 0 1 (fontified t)) . 16707) (#("x" 0 1 (fontified t)) . 16707) (#("e" 0 1 (fontified t)) . 16707) (#(" " 0 1 (fontified t)) . 16707) (#("n" 0 1 (fontified t)) . 16707) (#("e" 0 1 (fontified t)) . 16707) (#("h" 0 1 (fontified t)) . 16707) (undo-tree-id723 . -1) (#("w" 0 1 (fontified t)) . 16707) (#(" " 0 1 (fontified t)) . 16707) (#("s" 0 1 (fontified t)) . 16707) (#("r" 0 1 (fontified t)) . 16707) (#("u" 0 1 (fontified t)) . 16707) (#("o" 0 1 (fontified t)) . 16707) (#("b" 0 1 (fontified t)) . 16707) (#("h" 0 1 (fontified t)) . 16707) (#("g" 0 1 (fontified t)) . 16707) (#("i" 0 1 (fontified t)) . 16707) (#("e" 0 1 (fontified t)) . 16707) (#("n" 0 1 (fontified t)) . 16707) (#("
" 0 1 (fontified t)) . 16707) (#("t" 0 1 (fontified t)) . 16707) (#("s" 0 1 (fontified t)) . 16707) (#("o" 0 1 (fontified t)) . 16707) (#("c" 0 1 (fontified t)) . 16707) (#(" " 0 1 (fontified t)) . 16707) (#("w" 0 1 (fontified t)) . 16707) (#("o" 0 1 (fontified t)) . 16707) (#("l" 0 1 (fontified t)) . 16707) (16705 . 16707) (#("," 0 1 (fontified t)) . -16705) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) 16706 (16685 . 16706) (#("nodes " 0 6 (fontified t)) . -16685) (undo-tree-id729 . -6) (undo-tree-id730 . -6) 16691 (16690 . 16691) (16685 . 16690) (#(" " 0 1 (fontified nil)) . 16675) (16674 . 16675) (16669 . 16685) (16663 . 16669) (#("closest " 0 8 (fontified t)) . -16663) (undo-tree-id731 . -8) (undo-tree-id732 . -8) 16671 (#("unvisted" 0 8 (fontified t)) . -16671) (undo-tree-id733 . -8) (undo-tree-id734 . -8) 16679 (16659 . 16679) (t 26651 30939 681156 744000)) nil (26651 31126 136836 0) 0 nil])
([nil nil ((16726 . 16740) (16724 . 16726) (#("h" 0 1 (face (font-lock-constant-face) fontified t)) . -16724) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) 16725 (16718 . 16725) (#("t" 0 1 (face (font-lock-constant-face) fontified t)) . -16718) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) 16719 (16714 . 16719) (#("r" 0 1 (face (font-lock-constant-face) fontified t)) . -16714) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) 16715 (16708 . 16715) (#("l" 0 1 (face (font-lock-constant-face) fontified t)) . -16708) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) 16709 (16692 . 16709) (#("a" 0 1 (face (font-lock-constant-face) fontified t)) . -16692) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (#("l" 0 1 (face (font-lock-constant-face) fontified t)) . -16693) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("s" 0 1 (face (font-lock-constant-face) fontified t)) . -16694) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (#("o" 0 1 (face (font-lock-constant-face) fontified t)) . -16695) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#(" " 0 1 (face (font-lock-constant-face) fontified t)) . -16696) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) 16697 (16685 . 16697) (#("It " 0 3 (face (font-lock-constant-face) fontified t)) . -16685) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) 16688 (#("may " 0 4 (face (font-lock-constant-face) fontified t)) . -16688) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) 16692 (#("be " 0 3 (face (font-lock-constant-face) fontified t)) . -16692) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) 16695 (#("h" 0 1 (face (font-lock-constant-face) fontified t)) . -16695) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) 16696 (16685 . 16696) (#("Alternative: " 0 13 (face (font-lock-constant-face) fontified t)) . -16685) (undo-tree-id648 . -13) (undo-tree-id649 . -13) (undo-tree-id650 . -10) (undo-tree-id651 . -11) (undo-tree-id652 . -12) (undo-tree-id653 . -12) (undo-tree-id654 . -12) (undo-tree-id655 . -13) (undo-tree-id656 . -13) (undo-tree-id657 . -13) (undo-tree-id658 . -13) (undo-tree-id659 . -13) (undo-tree-id660 . -13) (undo-tree-id661 . -13) (undo-tree-id662 . -13) (undo-tree-id663 . -13) (undo-tree-id664 . -13) (undo-tree-id665 . -13) (undo-tree-id666 . -13) (undo-tree-id667 . -13) (undo-tree-id668 . -13) (undo-tree-id669 . -13) (undo-tree-id670 . -13) (undo-tree-id671 . -13) (undo-tree-id672 . -13) (undo-tree-id673 . -13) (undo-tree-id674 . -13) (undo-tree-id675 . -13) (undo-tree-id676 . -13) (undo-tree-id677 . -13) (undo-tree-id678 . -13) (undo-tree-id679 . -13) (undo-tree-id680 . -13) (undo-tree-id681 . -13) (undo-tree-id682 . -13) 16698 (#("closest" 0 7 (face (font-lock-constant-face) fontified t)) . -16698) (undo-tree-id683 . -7) (undo-tree-id684 . -7) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -5) (undo-tree-id702 . -5) (undo-tree-id703 . -6) (undo-tree-id704 . -6) (undo-tree-id705 . -7) (undo-tree-id706 . -7) (undo-tree-id707 . -7) (undo-tree-id708 . -7) 16705 (16702 . 16705) (#("t" 0 1 (face (font-lock-constant-face) fontified t)) . -16702) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (#("e" 0 1 (face (font-lock-constant-face) fontified t)) . -16703) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) 16704 (16698 . 16704) (#(" " 0 1 (fontified nil)) . 16675) (16674 . 16675) (16685 . 16698) (16684 . 16686) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -16684) (16684 . 16685) (16683 . 16684) (16676 . 16683) (16675 . 16676) (16674 . 16675)) nil (26651 31126 136775 0) 0 nil])
([nil nil (16740) nil (26651 31126 136371 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16674) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) 16675) nil (26651 31126 136369 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16405) (#("e" 0 1 (fontified t)) . 16405) (#("r" 0 1 (fontified t)) . 16405) (#("a" 0 1 (fontified t)) . 16405) (#(" " 0 1 (fontified t)) . 16405) (#("u" 0 1 (fontified t)) . 16405) (#("o" 0 1 (fontified t)) . 16405) (#("y" 0 1 (fontified t)) . 16405) (#(" " 0 1 (fontified t)) . 16405) (#("e" 0 1 (fontified t)) . 16405) (#("k" 0 1 (fontified t)) . 16405) (#("i" 0 1 (fontified t)) . 16405) (#("l" 0 1 (fontified t)) . 16405) (#(" " 0 1 (fontified t)) . 16405) (#("}" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16405) (#("t" 0 1 (fontified t)) . 16405) (#("s" 0 1 (fontified t)) . 16405) (#("o" 0 1 (fontified t)) . 16405) (#("m" 0 1 (fontified t)) . 16405) (#("l" 0 1 (fontified t)) . 16405) (#("a" 0 1 (fontified t)) . 16405) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16405) (#("t" 0 1 (fontified t)) . 16405) (#("i" 0 1 (fontified t)) . 16405) (#("t" 0 1 (fontified t)) . 16405) (#("x" 0 1 (fontified t)) . 16405) (#("e" 0 1 (fontified t)) . 16405) (#("t" 0 1 (fontified t)) . 16405) (#("\\" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t)) . 16405) (#("
" 0 1 (fontified t)) . 16405) (#(" " 0 1 (fontified nil)) . 16397) (16396 . 16397) (16392 . 16405)) nil (26651 31126 136350 0) 0 nil])
([nil nil ((16791 . 16794)) nil (26651 31126 136336 0) 0 nil])
([nil nil ((16794 . 16795) (#(" " 0 1 (fontified nil)) . 16793) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (16794 . 16795)) nil (26651 31126 136334 0) 0 nil])
([nil nil ((16795 . 16796)) nil (26651 31126 136329 0) 0 nil])
([nil nil ((16796 . 16801)) nil (26651 31126 136327 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -16796) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (#("i" 0 1 (fontified t)) . -16797) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("k" 0 1 (fontified t)) . -16798) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("e" 0 1 (fontified t)) . -16799) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#(" " 0 1 (fontified t)) . -16800) (undo-tree-id479 . -1) (undo-tree-id480 . -1) 16801) nil (26651 31126 136324 0) 0 nil])
([nil nil ((16796 . 16809)) nil (26651 31126 136292 0) 0 nil])
([nil nil ((16809 . 16816)) nil (26651 31126 136290 0) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -16813) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (#("i" 0 1 (fontified t)) . -16814) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (#("j" 0 1 (fontified t)) . -16815) (undo-tree-id469 . -1) (undo-tree-id470 . -1) 16816) nil (26651 31126 136288 0) 0 nil])
([nil nil ((16813 . 16817)) nil (26651 31126 136276 0) 0 nil])
([nil nil ((#("Dij" 0 3 (fontified t)) . -16814) (undo-tree-id463 . -3) (undo-tree-id464 . -3) 16817) nil (26651 31126 136274 0) 0 nil])
([nil nil ((#("of " 0 3 (fontified t)) . -16811) (undo-tree-id461 . -3) (undo-tree-id462 . -3) 16814) nil (26651 31126 136269 0) 0 nil])
([nil nil ((#("think " 0 6 (fontified t)) . -16805) (undo-tree-id459 . -6) (undo-tree-id460 . -6) 16811) nil (26651 31126 136264 0) 0 nil])
([nil nil ((#("to " 0 3 (fontified t)) . -16802) (undo-tree-id457 . -3) (undo-tree-id458 . -3) 16805) nil (26651 31126 136258 0) 0 nil])
([nil nil ((#("like " 0 5 (fontified t)) . -16797) (undo-tree-id455 . -5) (undo-tree-id456 . -5) 16802) nil (26651 31126 136253 0) 0 nil])
([nil nil ((#("I " 0 2 (fontified t)) . -16795) (undo-tree-id453 . -2) (undo-tree-id454 . -2) 16797) nil (26651 31126 136248 0) 0 nil])
([nil nil ((16795 . 16807)) nil (26651 31126 136243 0) 0 nil])
([nil nil ((#("Essentially," 0 12 (fontified t)) . -16795) (undo-tree-id451 . -12) (undo-tree-id452 . -12) 16807) nil (26651 31126 136241 0) 0 nil])
([nil nil ((16795 . 16807)) nil (26651 31126 136236 0) 0 nil])
([nil nil ((16807 . 16809)) nil (26651 31126 136234 0) 0 nil])
([nil nil ((16809 . 16815)) nil (26651 31126 136233 0) 0 nil])
([nil nil ((16815 . 16824)) nil (26651 31126 136231 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16823) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 16824) nil (26651 31126 136229 0) 0 nil])
([nil nil ((16823 . 16844)) nil (26651 31126 136224 0) 0 nil])
([nil nil ((16844 . 16855)) nil (26651 31126 136222 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -16853) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("k" 0 1 (fontified t)) . -16854) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) 16855) nil (26651 31126 136219 0) 0 nil])
([nil nil ((16853 . 16859)) nil (26651 31126 136194 0) 0 nil])
([nil nil ((16871 . 16880) (#(" " 0 1 (fontified nil)) . 16865) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (16864 . 16865) (16859 . 16871)) nil (26651 31126 136191 0) 0 nil])
([nil nil ((16880 . 16881)) nil (26651 31126 136173 0) 0 nil])
([nil nil ((16945 . 16946) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 16945) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (16935 . 16945) (16934 . 16935) (#("$" 0 1 (fontified nil)) . 16935) (16933 . 16935) (#("$" 0 1 (fontified nil)) . -16933) (undo-tree-id741 . -1) (16933 . 16935) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . -16933) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (16933 . 16934) (#("%" 0 1 (font-lock-multiline t face font-lock-comment-face fontified t)) . -16933) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) 16934 (16933 . 16934) (#("%" 0 1 (font-lock-multiline t face font-lock-comment-face fontified t)) . -16933) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) 16934 (16933 . 16934) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16933) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 16934) (undo-tree-id763 . -1) (#("$" 0 1 (fontified nil)) . 16934) (16933 . 16934) (#("$" 0 1 (fontified nil)) . -16933) (16933 . 16934) (#("$" 0 1 (face font-latex-math-face fontified t)) . -16933) (16934 . 16936) (#("$" 0 1 (fontified nil)) . -16934) (16933 . 16935) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -16933) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 16934) (16933 . 16934) (16932 . 16933) (16931 . 16932) (16930 . 16931) (#("$" 0 1 (fontified nil)) . 16931) (16929 . 16931) (#("$" 0 1 (fontified nil)) . -16929) (16929 . 16931) (#("$" 0 1 (fontified nil)) . -16929) (16929 . 16930) (16913 . 16929) (16892 . 16913) (#("o" 0 1 (fontified t)) . -16892) (undo-tree-id764 . -1) (undo-tree-id765 . -1) 16893 (16881 . 16893) (t 26651 31126 208937 933000)) nil (26651 31157 808112 0) 0 nil])
([nil nil ((#("    for i in range(len(G)-1)
" 0 29 (face font-latex-verbatim-face fontified t)) . 17121) (undo-tree-id766 . -28) (undo-tree-id767 . -28) (undo-tree-id768 . -28) (undo-tree-id769 . -28) (undo-tree-id770 . -28) (undo-tree-id771 . -28) (undo-tree-id772 . -28) (undo-tree-id773 . -27) (undo-tree-id774 . -28) (undo-tree-id775 . -27) (undo-tree-id776 . -28) (undo-tree-id777 . -27) (undo-tree-id778 . -28) (undo-tree-id779 . -27) (undo-tree-id780 . -28) (undo-tree-id781 . -27) (undo-tree-id782 . -28) (undo-tree-id783 . -27) (undo-tree-id784 . -28) (undo-tree-id785 . -27) (undo-tree-id786 . -28) (undo-tree-id787 . -24) (undo-tree-id788 . -25) (undo-tree-id789 . -22) (undo-tree-id790 . -23) (undo-tree-id791 . -18) (undo-tree-id792 . -19) (undo-tree-id793 . -28) (undo-tree-id794 . -28) (undo-tree-id795 . -28) (undo-tree-id796 . -27) (undo-tree-id797 . -28) (undo-tree-id798 . -27) (undo-tree-id799 . -28) (undo-tree-id800 . -27) (undo-tree-id801 . -28) (undo-tree-id802 . -27) (undo-tree-id803 . -28) (undo-tree-id804 . -27) (undo-tree-id805 . -28) (undo-tree-id806 . -27) (undo-tree-id807 . -28) (undo-tree-id808 . -27) (undo-tree-id809 . -28) (undo-tree-id810 . -24) (undo-tree-id811 . -25) (undo-tree-id812 . -22) (undo-tree-id813 . -23) (undo-tree-id814 . -18) (undo-tree-id815 . -19) (undo-tree-id816 . -28) (undo-tree-id817 . -28) (undo-tree-id818 . -29) (undo-tree-id819 . -29) 17149 (t 26651 31157 880678 454000)) nil (26651 33126 88320 0) 0 nil])
([nil nil ((#("            " 0 12 (face font-latex-verbatim-face fontified nil)) . -17254) (17246 . 17254) (#("            " 0 12 (face font-latex-verbatim-face fontified nil)) . -17235) (17227 . 17235) (#("            " 0 12 (face font-latex-verbatim-face fontified nil)) . -17219) (17211 . 17219) (#("            " 0 12 (face font-latex-verbatim-face fontified nil)) . -17146) (17138 . 17146) (#("        " 0 8 (face font-latex-verbatim-face fontified nil)) . -17125) (17121 . 17125) 17262) nil (26651 33126 88216 0) 0 nil])
([nil nil ((#("    S = startNode # S is the set of explored nodes
" 0 51 (face font-latex-verbatim-face fontified t)) . 17000) (undo-tree-id820 . -50) (undo-tree-id821 . -51) (undo-tree-id822 . -51) (undo-tree-id823 . -51) (t 26651 33126 159288 195000)) nil (26651 33131 857425 0) 0 nil])
([nil nil ((#("\\begin{lstlisting}
BellmanFord(G = (V,E), startNode)
    d(startNode) = 0 # d(v) is the shortest path from startNode to v

    while S != V
        choose v in (V \\ S) such that d(u) +|(u,v)| is minimized where u
        is in S
        Add v to S
        Set d(v) = d(u) + |(u,v)|
# Taken from Qilin's notes
\\end{lstlisting}
" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 17 (face (font-lock-function-name-face) fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (syntax-table (15) face font-latex-verbatim-face fontified t) 19 53 (face font-latex-verbatim-face fontified t) 53 122 (face font-latex-verbatim-face fontified t) 122 123 (face font-latex-verbatim-face fontified t) 123 127 (face font-latex-verbatim-face fontified t) 127 148 (face font-latex-verbatim-face fontified t) 148 221 (face font-latex-verbatim-face fontified t) 221 237 (face font-latex-verbatim-face fontified t) 237 256 (face font-latex-verbatim-face fontified t) 256 282 (face font-latex-verbatim-face fontified t) 282 309 (face font-latex-verbatim-face fontified t) 309 310 (face (font-lock-keyword-face font-latex-sedate-face) fontified t syntax-table (15)) 310 313 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 313 314 (face (rainbow-delimiters-depth-1-face) fontified t) 314 324 (face (font-lock-function-name-face) fontified t) 324 325 (face (rainbow-delimiters-depth-1-face) fontified t) 325 326 (fontified t)) . 16947) (undo-tree-id845 . -309) (undo-tree-id846 . -309) (undo-tree-id847 . -309) (undo-tree-id848 . -325) (undo-tree-id849 . -53) (undo-tree-id850 . -53) (undo-tree-id851 . -31) (undo-tree-id852 . -309) (undo-tree-id853 . -31) (undo-tree-id854 . -31) (undo-tree-id855 . -31) (undo-tree-id856 . -31) (undo-tree-id857 . -122) (undo-tree-id858 . -122) (undo-tree-id859 . -122) (undo-tree-id860 . -122) (undo-tree-id861 . -122) (undo-tree-id862 . -122) (undo-tree-id863 . -122) (undo-tree-id864 . -122) (undo-tree-id865 . -122) (undo-tree-id866 . -122) (undo-tree-id867 . -122) (undo-tree-id868 . -122) (undo-tree-id869 . -122) (undo-tree-id870 . -53) (undo-tree-id871 . -53) (undo-tree-id872 . -19) (undo-tree-id873 . -19) (undo-tree-id874 . -53) (undo-tree-id875 . -122) (undo-tree-id876 . -123) (undo-tree-id877 . -140) (undo-tree-id878 . -213) (undo-tree-id879 . -229) (undo-tree-id880 . -248) (undo-tree-id881 . -282) (undo-tree-id882 . -309) (undo-tree-id883 . -309) (undo-tree-id884 . -309) (undo-tree-id885 . -326) 17256 (t 26651 33131 930772 829000)) nil (26651 34891 227132 0) 0 nil])
([nil nil ((16795 . 17121)) nil (26651 34891 227065 0) 0 nil])
([nil nil ((17120 . 17121) 17104) nil (26651 34891 227063 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-latex-verbatim-face fontified t)) . 17102) (undo-tree-id843 . -1) (undo-tree-id844 . -1)) nil (26651 34893 646362 0) 0 nil])
([nil nil ((#("Qilin's not" 0 11 (face font-latex-verbatim-face fontified t)) . 17090) (undo-tree-id986 . -11) (undo-tree-id987 . -11) (undo-tree-id988 . -10) (undo-tree-id989 . -8) (undo-tree-id990 . -8) (undo-tree-id991 . -11) (undo-tree-id992 . -11) (undo-tree-id993 . -11) (undo-tree-id994 . -11) (undo-tree-id995 . -11) (undo-tree-id996 . -11) (undo-tree-id997 . -11) (undo-tree-id998 . -11) 17101) nil (26651 34905 530380 0) 0 nil] [nil nil ((#("
" 0 1 (face font-latex-verbatim-face fontified t)) . 17102) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1)) ((17102 . 17103)) (26651 34893 30551 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-latex-verbatim-face fontified t)) . 17090) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1)) nil (26651 34905 530355 0) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) syntax-table (15) fontified t)) . 17102) (undo-tree-id836 . -1) (undo-tree-id837 . -1)) ((17102 . 17103)) (26651 34892 671003 0) 0 nil])
([nil nil ((#("# Taken from 
" 0 13 (face font-latex-verbatim-face fontified t) 13 14 (face font-latex-verbatim-face fontified t)) . 17077) (undo-tree-id886 . -13) (undo-tree-id887 . -13) (undo-tree-id888 . -13) (undo-tree-id889 . -13) (undo-tree-id890 . -13) (undo-tree-id891 . -13) (undo-tree-id892 . -14) (undo-tree-id893 . -14) (undo-tree-id894 . -14) (undo-tree-id895 . -13) (undo-tree-id896 . -13) (undo-tree-id897 . -13) (undo-tree-id898 . -13) (undo-tree-id899 . -13) (undo-tree-id900 . -13) (undo-tree-id901 . -13) (undo-tree-id902 . -13) (undo-tree-id903 . -13) (undo-tree-id904 . -13) (undo-tree-id905 . -13) (undo-tree-id906 . -13) (undo-tree-id907 . -13) (undo-tree-id908 . -13) (undo-tree-id909 . -13) (undo-tree-id910 . -13) (undo-tree-id911 . -13) (undo-tree-id912 . -13) (undo-tree-id913 . -13) (undo-tree-id914 . -13) (undo-tree-id915 . -13) (undo-tree-id916 . -13) (undo-tree-id917 . -13) (undo-tree-id918 . -13) (undo-tree-id919 . -13) (undo-tree-id920 . -13) (undo-tree-id921 . -13) (undo-tree-id922 . -13) (undo-tree-id923 . -13) (undo-tree-id924 . -13) (undo-tree-id925 . -13) (undo-tree-id926 . -13) (undo-tree-id927 . -13) (undo-tree-id928 . -13) (undo-tree-id929 . -13) (undo-tree-id930 . -13) (undo-tree-id931 . -13) (undo-tree-id932 . -13) (undo-tree-id933 . -13) (undo-tree-id934 . -13) (undo-tree-id935 . -13) (undo-tree-id936 . -13) (undo-tree-id937 . -13) (undo-tree-id938 . -13) (undo-tree-id939 . -13) (undo-tree-id940 . -13) (undo-tree-id941 . -13) (undo-tree-id942 . -13) (undo-tree-id943 . -13) (undo-tree-id944 . -13) (undo-tree-id945 . -13) (undo-tree-id946 . -14) (undo-tree-id947 . -14) 17090) nil (26651 34905 530290 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-latex-verbatim-face fontified t)) . 17102) (undo-tree-id834 . -1) (undo-tree-id835 . -1)) ((17102 . 17103)) (26651 34892 340787 0) 0 nil])
([nil nil ((16847 . 16848) (t 26651 34905 605386 249000) 16814) nil (26651 35047 612176 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-latex-verbatim-face fontified t)) . 17102) (undo-tree-id832 . -1) (undo-tree-id833 . -1)) ((17102 . 17103)) (26651 34891 936366 0) 0 nil])
([nil nil ((16848 . 16852)) nil (26651 35047 612174 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-latex-verbatim-face fontified t)) . 17102) (undo-tree-id830 . -1) (undo-tree-id831 . -1)) ((17102 . 17103)) (26651 34891 740325 0) 0 nil])
([nil nil ((16852 . 16873)) nil (26651 35047 612173 0) 0 nil])
([nil nil ((#("{" 0 1 (face font-latex-verbatim-face fontified t)) . 17102) (undo-tree-id828 . -1) (undo-tree-id829 . -1)) ((17102 . 17103)) (26651 34891 455977 0) 0 nil])
([nil nil ((16873 . 16881)) nil (26651 35047 612171 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-latex-verbatim-face fontified t)) . 17102) (undo-tree-id826 . -1) (undo-tree-id827 . -1)) ((17102 . 17103)) (26651 34891 227263 0) 0 nil])
([nil nil ((16881 . 16892)) nil (26651 35047 612170 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-latex-verbatim-face fontified t)) . 17102) (undo-tree-id824 . -1) (undo-tree-id825 . -1)) ((17102 . 17103)) (26651 34891 227010 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-latex-verbatim-face fontified t)) . -16891) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) 16892) nil (26651 35047 612168 0) 0 nil])
nil
([nil nil ((16891 . 16912)) nil (26651 35047 612163 0) 0 nil])
([nil nil ((16912 . 16926)) nil (26651 35047 612162 0) 0 nil])
([nil nil ((#("." 0 1 (face font-latex-verbatim-face fontified t)) . -16925) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) 16926) nil (26651 35047 612160 0) 0 nil])
([nil nil ((16925 . 16926)) nil (26651 35047 612141 0) 0 nil])
([nil nil ((16926 . 16930)) nil (26651 35047 612140 0) 0 nil])
([nil nil ((16930 . 16938)) nil (26651 35047 612138 0) 0 nil])
([nil nil ((#("each" 0 4 (face font-latex-verbatim-face fontified t)) . -16934) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) 16938) nil (26651 35047 612136 0) 0 nil])
([nil nil ((16934 . 16953)) nil (26651 35047 612131 0) 0 nil])
([nil nil ((16953 . 16954)) nil (26651 35047 612130 0) 0 nil])
([nil nil ((16954 . 16958)) nil (26651 35047 612128 0) 0 nil])
([nil nil ((16954 . 16962) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 16954) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) 16958) nil (26651 35047 612126 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -16956) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -16957) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -16958) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -16959) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -16960) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -16961) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) 16962) nil (26651 35047 612089 0) 0 nil])
([nil nil ((#("vertices:
  " 0 10 (face font-latex-verbatim-face fontified t) 10 12 (face font-latex-verbatim-face fontified t)) . -16944) (undo-tree-id1168 . -12) (undo-tree-id1169 . -12) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -2) (undo-tree-id1173 . -2) (undo-tree-id1174 . -3) (undo-tree-id1175 . -3) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -5) (undo-tree-id1179 . -5) (undo-tree-id1180 . -6) (undo-tree-id1181 . -6) (undo-tree-id1182 . -7) (undo-tree-id1183 . -7) (undo-tree-id1184 . -8) (undo-tree-id1185 . -8) (undo-tree-id1186 . -9) (undo-tree-id1187 . -9) (undo-tree-id1188 . 3) (undo-tree-id1189 . -10) (undo-tree-id1190 . -10) (undo-tree-id1191 . -10) (undo-tree-id1192 . -10) (undo-tree-id1193 . -12) (undo-tree-id1194 . -12) (undo-tree-id1195 . -12) (undo-tree-id1196 . -12) (undo-tree-id1197 . -12) (undo-tree-id1198 . -12) (undo-tree-id1199 . -12) (undo-tree-id1200 . -12) (undo-tree-id1201 . -12) (undo-tree-id1202 . -12) (undo-tree-id1203 . -12) (undo-tree-id1204 . -12) (undo-tree-id1205 . -10) (undo-tree-id1206 . -12) (undo-tree-id1207 . -12) (undo-tree-id1208 . -12) 16956) nil (26651 35047 611991 0) 0 nil])
([nil nil ((#("in " 0 3 (face font-latex-verbatim-face fontified t)) . -16941) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -2) (undo-tree-id1126 . -2) (undo-tree-id1127 . -3) (undo-tree-id1128 . -3) (undo-tree-id1129 . -3) (undo-tree-id1130 . -3) (undo-tree-id1131 . -3) (undo-tree-id1132 . -3) (undo-tree-id1133 . -3) (undo-tree-id1134 . -3) (undo-tree-id1135 . -3) (undo-tree-id1136 . -3) (undo-tree-id1137 . -3) (undo-tree-id1138 . -3) (undo-tree-id1139 . -3) (undo-tree-id1140 . -3) (undo-tree-id1141 . -3) (undo-tree-id1142 . -3) (undo-tree-id1143 . -3) (undo-tree-id1144 . -3) (undo-tree-id1145 . -3) (undo-tree-id1146 . -3) (undo-tree-id1147 . -3) (undo-tree-id1148 . -3) (undo-tree-id1149 . -3) (undo-tree-id1150 . -3) (undo-tree-id1151 . -3) (undo-tree-id1152 . -3) (undo-tree-id1153 . -3) (undo-tree-id1154 . -3) (undo-tree-id1155 . -3) (undo-tree-id1156 . -3) (undo-tree-id1157 . -3) (undo-tree-id1158 . -3) (undo-tree-id1159 . -3) (undo-tree-id1160 . -3) (undo-tree-id1161 . -3) (undo-tree-id1162 . -3) (undo-tree-id1163 . -3) (undo-tree-id1164 . -3) (undo-tree-id1165 . -3) (undo-tree-id1166 . -3) (undo-tree-id1167 . -3) 16944) nil (26651 35047 611896 0) 0 nil])
([nil nil ((#("vertex " 0 7 (face font-latex-verbatim-face fontified t)) . -16934) (undo-tree-id1061 . -7) (undo-tree-id1062 . -7) (undo-tree-id1063 . -2) (undo-tree-id1064 . -3) (undo-tree-id1065 . -3) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -5) (undo-tree-id1069 . -5) (undo-tree-id1070 . -6) (undo-tree-id1071 . -6) (undo-tree-id1072 . -7) (undo-tree-id1073 . -7) (undo-tree-id1074 . -7) (undo-tree-id1075 . -7) (undo-tree-id1076 . -7) (undo-tree-id1077 . -7) (undo-tree-id1078 . -7) (undo-tree-id1079 . -7) (undo-tree-id1080 . -7) (undo-tree-id1081 . -7) (undo-tree-id1082 . -7) (undo-tree-id1083 . -7) (undo-tree-id1084 . -7) (undo-tree-id1085 . -7) (undo-tree-id1086 . -7) (undo-tree-id1087 . -7) (undo-tree-id1088 . -7) (undo-tree-id1089 . -7) (undo-tree-id1090 . -7) (undo-tree-id1091 . -7) (undo-tree-id1092 . -7) (undo-tree-id1093 . -7) (undo-tree-id1094 . -7) (undo-tree-id1095 . -7) (undo-tree-id1096 . -7) (undo-tree-id1097 . -7) (undo-tree-id1098 . -7) (undo-tree-id1099 . -7) (undo-tree-id1100 . -7) (undo-tree-id1101 . -7) (undo-tree-id1102 . -7) (undo-tree-id1103 . -7) (undo-tree-id1104 . -7) (undo-tree-id1105 . -7) (undo-tree-id1106 . -7) (undo-tree-id1107 . -7) (undo-tree-id1108 . -7) (undo-tree-id1109 . -7) (undo-tree-id1110 . -7) (undo-tree-id1111 . -7) (undo-tree-id1112 . -7) (undo-tree-id1113 . -7) (undo-tree-id1114 . -7) (undo-tree-id1115 . -7) (undo-tree-id1116 . -7) (undo-tree-id1117 . -7) (undo-tree-id1118 . -7) (undo-tree-id1119 . -7) (undo-tree-id1120 . -7) 16941) nil (26651 35047 611816 0) 0 nil])
([nil nil ((#("for " 0 4 (face font-latex-verbatim-face fontified t)) . -16930) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) 16934) nil (26651 35047 611711 0) 0 nil])
([nil nil ((16933 . 16939) (#("anyNode" 0 7 (face font-latex-verbatim-face fontified t)) . -16932) (undo-tree-id1346 . -7) (undo-tree-id1347 . -7) 16939 (16932 . 16939) (#("node" 0 4 (face font-latex-verbatim-face fontified t)) . -16932) (undo-tree-id1348 . -4) (undo-tree-id1349 . -4) (undo-tree-id1350 . -4) 16936 (16932 . 16936) (16931 . 16933) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -16931) (16931 . 16932) (16930 . 16931) (16926 . 16930) (16925 . 16926) (t 26651 35047 686826 946000) 16880) nil (26651 35109 895049 0) 0 nil])
([nil nil ((#("    
" 0 4 (face font-latex-verbatim-face fontified t) 4 5 (face font-latex-verbatim-face fontified t)) . 16940) (undo-tree-id1340 . -4) (undo-tree-id1341 . -4) (undo-tree-id1342 . -4) (undo-tree-id1343 . -4) (undo-tree-id1344 . -4) (undo-tree-id1345 . -4) 16944) nil (26651 35109 895034 0) 0 nil])
([nil nil ((16985 . 16986) (16964 . 16985) (16944 . 16964) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -16944) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 16945) (16943 . 16945) (16942 . 16944) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -16942) (16942 . 16943) (16939 . 16942)) nil (26651 35109 895021 0) 0 nil])
([nil nil ((#("    d() = inf #d(v) is the shortest path from startNode to v
" 0 5 (face font-latex-verbatim-face fontified t) 5 6 (face font-latex-verbatim-face fontified t) 6 16 (face font-latex-verbatim-face fontified t) 16 18 (face font-latex-verbatim-face fontified t) 18 60 (face font-latex-verbatim-face fontified t) 60 61 (face font-latex-verbatim-face fontified t)) . 16926) (undo-tree-id1280 . -60) (undo-tree-id1281 . -60) (undo-tree-id1282 . 1) (undo-tree-id1283 . -60) (undo-tree-id1284 . -60) (undo-tree-id1285 . -60) (undo-tree-id1286 . -6) (undo-tree-id1287 . -60) (undo-tree-id1288 . -61) (undo-tree-id1289 . -61) (undo-tree-id1290 . -39) (undo-tree-id1291 . -40) (undo-tree-id1292 . -41) (undo-tree-id1293 . -42) (undo-tree-id1294 . -42) (undo-tree-id1295 . -43) (undo-tree-id1296 . -43) (undo-tree-id1297 . -44) (undo-tree-id1298 . -44) (undo-tree-id1299 . -45) (undo-tree-id1300 . -45) (undo-tree-id1301 . -46) (undo-tree-id1302 . -46) (undo-tree-id1303 . -47) (undo-tree-id1304 . -47) (undo-tree-id1305 . -48) (undo-tree-id1306 . -48) (undo-tree-id1307 . -49) (undo-tree-id1308 . -49) (undo-tree-id1309 . -50) (undo-tree-id1310 . -50) (undo-tree-id1311 . -51) (undo-tree-id1312 . -51) (undo-tree-id1313 . -52) (undo-tree-id1314 . -52) (undo-tree-id1315 . -53) (undo-tree-id1316 . -53) (undo-tree-id1317 . -54) (undo-tree-id1318 . -54) (undo-tree-id1319 . -55) (undo-tree-id1320 . -55) (undo-tree-id1321 . -56) (undo-tree-id1322 . -56) (undo-tree-id1323 . -57) (undo-tree-id1324 . -57) (undo-tree-id1325 . -58) (undo-tree-id1326 . -58) (undo-tree-id1327 . -59) (undo-tree-id1328 . -59) (undo-tree-id1329 . -60) (undo-tree-id1330 . -60) (undo-tree-id1331 . -60) (undo-tree-id1332 . -60) (undo-tree-id1333 . -60) (undo-tree-id1334 . -60) (undo-tree-id1335 . -60) (undo-tree-id1336 . -60) (undo-tree-id1337 . -60) (undo-tree-id1338 . -60) (undo-tree-id1339 . -61) 16986) nil (26651 35109 895012 0) 0 nil])
([nil nil ((16926 . 16987) 16986) nil (26651 35109 894900 0) 0 nil])
([nil nil ((17055 . 17056) (t 26651 35109 967572 425000) 16991) nil (26651 35122 762377 0) 0 nil])
([nil nil ((17056 . 17060)) nil (26651 35122 762374 0) 0 nil])
([nil nil ((#("    " 0 4 (face font-latex-verbatim-face fontified nil)) . 17056) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) (undo-tree-id1353 . -4) (undo-tree-id1354 . -4) (undo-tree-id1355 . -4) (17060 . 17061)) nil (26651 35122 762369 0) 0 nil])
([nil nil ((17117 . 17123) (17096 . 17117) (#("o" 0 1 (face font-latex-verbatim-face fontified t)) . -17096) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (#("d" 0 1 (face font-latex-verbatim-face fontified t)) . -17097) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (#("b" 0 1 (face font-latex-verbatim-face fontified t)) . -17098) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) 17099 (17086 . 17099) (#("+" 0 1 (face font-latex-verbatim-face fontified t)) . -17086) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -17087) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) 17088 (17082 . 17088) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -17082) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (#("r" 0 1 (face font-latex-verbatim-face fontified t)) . -17083) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) 17084 (17081 . 17084) (17080 . 17081) (17079 . 17080) (17076 . 17079) (#("{" 0 1 (face font-latex-verbatim-face fontified nil)) . -17076) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (#("}" 0 1 (face font-latex-verbatim-face fontified t)) . 17077) (17076 . 17078) (#("{" 0 1 (face font-latex-verbatim-face fontified nil)) . -17076) (17076 . 17077) (17061 . 17076) (17057 . 17061) (t 26651 35122 832120 343000)) nil (26651 35229 713709 0) 0 nil])
([nil nil ((17121 . 17122) (17114 . 17121) (#("the " 0 4 (face font-latex-verbatim-face fontified t)) . -17114) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -3) (undo-tree-id1476 . -3) (undo-tree-id1477 . -4) (undo-tree-id1478 . -4) (undo-tree-id1479 . -4) (undo-tree-id1480 . -4) (undo-tree-id1481 . -4) (undo-tree-id1482 . -4) (undo-tree-id1483 . -4) (undo-tree-id1484 . -4) (undo-tree-id1485 . -4) (undo-tree-id1486 . -4) (undo-tree-id1487 . -4) (undo-tree-id1488 . -4) (undo-tree-id1489 . -4) (undo-tree-id1490 . -4) (undo-tree-id1491 . -4) (undo-tree-id1492 . -4) (undo-tree-id1493 . -4) (undo-tree-id1494 . -4) (undo-tree-id1495 . -4) (undo-tree-id1496 . -4) (undo-tree-id1497 . -4) (undo-tree-id1498 . -4) 17118 (#("graph" 0 5 (face font-latex-verbatim-face fontified t)) . -17118) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -2) (undo-tree-id1504 . -2) (undo-tree-id1505 . -3) (undo-tree-id1506 . -3) (undo-tree-id1507 . -4) (undo-tree-id1508 . -4) (undo-tree-id1509 . -5) (undo-tree-id1510 . -5) (undo-tree-id1511 . -5) (undo-tree-id1512 . -5) (undo-tree-id1513 . -5) (undo-tree-id1514 . -5) (undo-tree-id1515 . -5) (undo-tree-id1516 . -5) (undo-tree-id1517 . -5) (undo-tree-id1518 . -5) 17123) nil (26651 35229 713671 0) 0 nil])
([nil nil ((17130 . 17132) (17122 . 17130) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 17122) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) 17126 (17122 . 17126)) nil (26651 35229 713590 0) 0 nil])
([nil nil ((17210 . 17211) (17209 . 17211) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -17209) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (17209 . 17210) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -17209) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (#("]" 0 1 (face font-latex-verbatim-face fontified t)) . 17210) (17209 . 17211) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -17209) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (17209 . 17210) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -17209) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (#(")" 0 1 (face font-latex-verbatim-face fontified t)) . 17210) (#("v" 0 1 (face font-latex-verbatim-face fontified t)) . -17210) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) 17211 (17210 . 17211) (17209 . 17211) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -17209) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (17209 . 17210) (17196 . 17209) (#("dist" 0 4 (face font-latex-verbatim-face fontified t)) . -17196) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -3) (undo-tree-id1444 . -4) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) 17200 (17196 . 17200) (17193 . 17196) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . -17193) (#("]" 0 1 (face font-latex-verbatim-face fontified nil)) . 17194) (17192 . 17194) (17191 . 17193) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -17191) (17191 . 17192) (#("0" 0 1 (face font-latex-verbatim-face fontified t)) . -17191) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) 17192 (17180 . 17192) (17168 . 17180) (#("        " 0 8 (face font-latex-verbatim-face fontified t)) . 17168) (undo-tree-id1449 . -8) (undo-tree-id1450 . -8) 17176 (17168 . 17176) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 17168) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) 17172 (17168 . 17172) (17167 . 17168) (17149 . 17167) (17148 . 17149) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -17148) (17147 . 17149) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -17147) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (#("v" 0 1 (face font-latex-verbatim-face fontified t)) . -17148) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (#(")" 0 1 (face font-latex-verbatim-face fontified t)) . -17149) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) 17150 (17149 . 17150) (#(")" 0 1 (fontified nil)) . -17149) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 17150) (17149 . 17150) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -17149) (17147 . 17150) (#("v" 0 1 (face font-latex-verbatim-face fontified t)) . -17147) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) 17148 (17145 . 17148) (17144 . 17146) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -17144) (17144 . 17145) (17141 . 17144) (17134 . 17141) (#("edg" 0 3 (face font-latex-verbatim-face fontified t)) . -17134) (undo-tree-id1461 . -3) (undo-tree-id1462 . -3) (undo-tree-id1463 . -3) 17137 (17132 . 17137)) nil (26651 35229 713570 0) 0 nil])
([nil nil ((17191 . 17192) (#("[" 0 1 (face font-latex-verbatim-face fontified t)) . 17191) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1)) nil (26651 35229 713460 0) 0 nil])
([nil nil ((17193 . 17194) (#("]" 0 1 (face font-latex-verbatim-face fontified t)) . 17193) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1)) nil (26651 35229 713448 0) 0 nil])
([nil nil ((17256 . 17258) (#("w" 0 1 (face font-latex-verbatim-face fontified t)) . -17256) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) 17257 (17256 . 17257) (17253 . 17256) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -17253) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 17254) (17252 . 17254) (17251 . 17253) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -17251) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (17251 . 17252) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -17251) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (#("]" 0 1 (face font-latex-verbatim-face fontified t)) . 17252) (#("u" 0 1 (face font-latex-verbatim-face fontified t)) . -17252) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) 17253 (17252 . 17253) (17251 . 17253) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -17251) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (17251 . 17252) (17239 . 17251) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . -17239) (#(")" 0 1 (face font-latex-verbatim-face fontified nil)) . 17240) (17239 . 17240) (17238 . 17239) (17237 . 17239) (#("(" 0 1 (face font-latex-verbatim-face fontified nil)) . -17237) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (17237 . 17238) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -17237) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (#("]" 0 1 (face font-latex-verbatim-face fontified t)) . 17238) (17237 . 17239) (#("[" 0 1 (face font-latex-verbatim-face fontified nil)) . -17237) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (17237 . 17238) (17229 . 17237) (17213 . 17229) (#("            " 0 12 (face font-latex-verbatim-face fontified t)) . 17213) (undo-tree-id1394 . -12) (undo-tree-id1395 . -12) 17225 (17213 . 17225) (#("        " 0 8 (face font-latex-verbatim-face fontified t)) . 17213) (undo-tree-id1396 . -8) (undo-tree-id1397 . -8) 17221 (17213 . 17221) (#("    " 0 4 (face font-latex-verbatim-face fontified t)) . 17213) (undo-tree-id1398 . -4) (undo-tree-id1399 . -4) 17217 (17213 . 17217) (17212 . 17213)) nil (26651 35229 713431 0) 0 nil])
([nil nil (17229) nil (26651 35257 736009 0) 0 nil])
([nil nil ((17229 . 17233) (t 26651 35229 788823 833000)) nil (26651 35257 736007 0) 0 nil])
([nil nil (17233) nil (26651 35257 736005 0) 0 nil])
([nil nil ((17229 . 17230) (#("s" 0 1 (face font-latex-verbatim-face fontified t)) . 17229) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (#("\\" 0 1 (face (font-latex-verbatim-face font-latex-sedate-face) fontified t)) . -17229) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (#("S" 0 1 (face (font-latex-verbatim-face font-latex-sedate-face) fontified t)) . -17230) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) 17231 (17230 . 17231) (17229 . 17230)) nil (26651 35257 736001 0) 0 nil])
([nil nil ((#("    while S != V
        choose v in (V \\ S) such that d(u) +|(u,v)| is minimized where u
        is in S
        Add v to S
        Set d(v) = d(u) + |(u,v)|
" 0 4 (face font-latex-verbatim-face fontified t) 4 25 (face font-latex-verbatim-face fontified t) 25 98 (face font-latex-verbatim-face fontified t) 98 114 (face font-latex-verbatim-face fontified t) 114 133 (face font-latex-verbatim-face fontified t) 133 159 (face font-latex-verbatim-face fontified t)) . 17264) (undo-tree-id1535 . -141) (undo-tree-id1536 . -141) (undo-tree-id1537 . -16) (undo-tree-id1538 . -141) (undo-tree-id1539 . -159) (undo-tree-id1540 . -158) (undo-tree-id1541 . -159) (undo-tree-id1542 . -141) (undo-tree-id1543 . -16) (undo-tree-id1544 . -16) (undo-tree-id1545 . -16) (undo-tree-id1546 . -16) (undo-tree-id1547 . -16) (undo-tree-id1548 . -33) (undo-tree-id1549 . -105) (undo-tree-id1550 . -105) (undo-tree-id1551 . -122) (undo-tree-id1552 . -122) (undo-tree-id1553 . -140) (undo-tree-id1554 . -141) (undo-tree-id1555 . -140) (undo-tree-id1556 . -141) (undo-tree-id1557 . -140) (undo-tree-id1558 . -141) (undo-tree-id1559 . -140) (undo-tree-id1560 . -141) (undo-tree-id1561 . -140) (undo-tree-id1562 . -141) (undo-tree-id1563 . -140) (undo-tree-id1564 . -141) (undo-tree-id1565 . -140) (undo-tree-id1566 . -141) (undo-tree-id1567 . -138) (undo-tree-id1568 . -139) (undo-tree-id1569 . -141) (undo-tree-id1570 . -16) (undo-tree-id1571 . -141) (undo-tree-id1572 . -141) (undo-tree-id1573 . -141) (undo-tree-id1574 . -140) (undo-tree-id1575 . -141) (undo-tree-id1576 . -140) (undo-tree-id1577 . -141) (undo-tree-id1578 . -140) (undo-tree-id1579 . -141) (undo-tree-id1580 . -140) (undo-tree-id1581 . -141) (undo-tree-id1582 . -140) (undo-tree-id1583 . -141) (undo-tree-id1584 . -140) (undo-tree-id1585 . -141) (undo-tree-id1586 . -140) (undo-tree-id1587 . -141) (undo-tree-id1588 . -138) (undo-tree-id1589 . -139) (undo-tree-id1590 . -141) (undo-tree-id1591 . -122) (undo-tree-id1592 . -105) (undo-tree-id1593 . -105) (undo-tree-id1594 . -33) (undo-tree-id1595 . -33) (undo-tree-id1596 . -16) (undo-tree-id1597 . -16) (undo-tree-id1598 . -16) (undo-tree-id1599 . -16) (undo-tree-id1600 . -16) (undo-tree-id1601 . -16) (undo-tree-id1602 . -16) (undo-tree-id1603 . -16) (undo-tree-id1604 . -33) (undo-tree-id1605 . -105) (undo-tree-id1606 . -105) (undo-tree-id1607 . -122) (undo-tree-id1608 . -122) (undo-tree-id1609 . -125) (undo-tree-id1610 . -140) (undo-tree-id1611 . -141) (undo-tree-id1612 . -140) (undo-tree-id1613 . -141) (undo-tree-id1614 . -140) (undo-tree-id1615 . -141) (undo-tree-id1616 . -140) (undo-tree-id1617 . -141) (undo-tree-id1618 . -140) (undo-tree-id1619 . -141) (undo-tree-id1620 . -140) (undo-tree-id1621 . -141) (undo-tree-id1622 . -140) (undo-tree-id1623 . -141) (undo-tree-id1624 . -138) (undo-tree-id1625 . -139) (undo-tree-id1626 . -141) (undo-tree-id1627 . -141) (undo-tree-id1628 . -159) (undo-tree-id1629 . -159) 17405) nil (26651 35257 735960 0) 0 nil])
([nil nil ((#("istance" 0 7 (face font-latex-verbatim-face fontified t)) . 17234) (undo-tree-id1661 . -6) (undo-tree-id1662 . -7) (undo-tree-id1663 . -7) (t 26651 35257 813282 76000)) nil (26651 35398 436446 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-latex-verbatim-face fontified t)) . 17241) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1)) nil (26651 35398 436438 0) 0 nil])
([nil nil ((#("stance" 0 6 (face font-latex-verbatim-face fontified t)) . 17241) (undo-tree-id1648 . 6) (undo-tree-id1649 . -5) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -6) (undo-tree-id1656 . -6)) nil (26651 35398 436426 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-latex-verbatim-face fontified t)) . -17241) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) 17242 (17241 . 17242) (t 26651 35398 513182 915000)) nil (26651 35432 866006 0) 0 nil])
([nil nil ((17249 . 17253) (#("
" 0 1 (face font-latex-verbatim-face fontified t)) . -17249) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . 1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) 17250 (#("   " 0 3 (face font-latex-verbatim-face fontified nil)) . 17249) (undo-tree-id1702 . -3) (undo-tree-id1703 . -3) (undo-tree-id1704 . -3) (undo-tree-id1705 . -3) (undo-tree-id1706 . -3) (undo-tree-id1707 . -3) (undo-tree-id1708 . -3) (17252 . 17253) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -17252) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) 17253 (17249 . 17253)) nil (26651 35432 865993 0) 0 nil])
([nil nil ((#("    
" 0 4 (face font-latex-verbatim-face fontified t) 4 5 (face font-latex-verbatim-face fontified t)) . 17249) (undo-tree-id1674 . -4) (undo-tree-id1675 . -4) (undo-tree-id1676 . 1) (undo-tree-id1677 . -4) (undo-tree-id1678 . -4) (undo-tree-id1679 . -4) (undo-tree-id1680 . -5) (undo-tree-id1681 . -4) (undo-tree-id1682 . 1) (undo-tree-id1683 . -4) (undo-tree-id1684 . -4) (undo-tree-id1685 . -4) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (undo-tree-id1688 . -4) (undo-tree-id1689 . -4) (undo-tree-id1690 . -4) (undo-tree-id1691 . -4) (undo-tree-id1692 . -4) (undo-tree-id1693 . -5) (undo-tree-id1694 . -5) 17253) nil (26651 35432 865918 0) 0 nil])
([nil nil ((17265 . 17266) 17249) nil (26651 35432 865883 0) 0 nil])
([nil nil ((17266 . 17267)) nil (26651 35432 865882 0) 0 nil])
([nil nil ((17267 . 17276)) nil (26651 35432 865880 0) 0 nil])
([nil nil ((#("pseh" 0 4 (fontified t)) . -17272) (undo-tree-id1672 . -4) (undo-tree-id1673 . -4) 17276) nil (26651 35432 865879 0) 0 nil])
([nil nil ((#("This " 0 5 (fontified t)) . -17267) (undo-tree-id1670 . -5) (undo-tree-id1671 . -5) 17272) nil (26651 35432 865873 0) 0 nil])
([nil nil ((17267 . 17276)) nil (26651 35432 865868 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -17275) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) 17276) nil (26651 35432 865866 0) 0 nil])
([nil nil ((17275 . 17279)) nil (26651 35432 865861 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -17277) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (#("c" 0 1 (fontified t)) . -17278) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) 17279) nil (26651 35432 865858 0) 0 nil])
([nil nil ((17277 . 17293)) nil (26651 35432 865838 0) 0 nil])
([nil nil ((#("missing " 0 8 (fontified t)) . -17285) (undo-tree-id1741 . -8) (undo-tree-id1742 . -8) (undo-tree-id1743 . -8) 17293 (t 26651 35432 942859 194000)) nil (26651 35461 219074 0) 0 nil])
([nil nil ((#("is " 0 3 (fontified t)) . -17282) (undo-tree-id1738 . -3) (undo-tree-id1739 . -3) (undo-tree-id1740 . -3) 17285) nil (26651 35461 219066 0) 0 nil])
([nil nil ((17282 . 17303)) nil (26651 35461 219059 0) 0 nil])
([nil nil ((17303 . 17323)) nil (26651 35461 219058 0) 0 nil])
([nil nil ((17323 . 17331)) nil (26651 35461 219056 0) 0 nil])
([nil nil ((17331 . 17332)) nil (26651 35461 219055 0) 0 nil])
([nil nil ((17332 . 17338)) nil (26651 35461 219053 0) 0 nil])
([nil nil ((17338 . 17340) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -17338) (17338 . 17339)) nil (26651 35461 219052 0) 0 nil])
([nil nil ((17339 . 17347)) nil (26651 35461 219049 0) 0 nil])
([nil nil ((17347 . 17348)) nil (26651 35461 219048 0) 0 nil])
([nil nil ((17355 . 17361) (#(" " 0 1 (fontified nil)) . 17331) (17330 . 17331) (17348 . 17355)) nil (26651 35461 219046 0) 0 nil])
([nil nil ((17361 . 17365) (#("}" 0 1 (face (font-latex-italic-face) fontified nil)) . -17361) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 17362) (17361 . 17362)) nil (26651 35461 219043 0) 0 nil])
([nil nil ((17365 . 17371)) nil (26651 35461 219040 0) 0 nil])
([nil nil ((#("Anegati" 0 7 (fontified t)) . -17364) (undo-tree-id1720 . -7) (undo-tree-id1721 . -7) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -3) (undo-tree-id1728 . -3) (undo-tree-id1729 . -4) (undo-tree-id1730 . -4) (undo-tree-id1731 . -5) (undo-tree-id1732 . -5) (undo-tree-id1733 . -6) (undo-tree-id1734 . -6) (undo-tree-id1735 . -7) (undo-tree-id1736 . -7) (undo-tree-id1737 . -7) 17371) nil (26651 35461 219037 0) 0 nil])
([nil nil ((17364 . 17365)) nil (26651 35461 218996 0) 0 nil])
([nil nil ((17466 . 17480) (17451 . 17466) (#("c" 0 1 (fontified t)) . -17451) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) 17452 (17451 . 17452) (#("shortest " 0 9 (fontified t)) . -17451) (undo-tree-id1751 . -9) (undo-tree-id1752 . -9) (undo-tree-id1753 . -9) 17460 (#("c" 0 1 (fontified t)) . -17460) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) 17461 (17460 . 17461) (#("path " 0 5 (fontified t)) . -17460) (undo-tree-id1756 . -5) (undo-tree-id1757 . -5) (undo-tree-id1758 . -5) 17465 (#("i" 0 1 (fontified t)) . -17465) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) 17466 (17445 . 17466) (17441 . 17445) (17420 . 17441) (17406 . 17420) (#(" " 0 1 (fontified nil)) . 17401) (17400 . 17401) (17399 . 17406) (17382 . 17399) (#("y" 0 1 (fontified t)) . -17382) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (#("o" 0 1 (fontified t)) . -17383) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (#("u" 0 1 (fontified t)) . -17384) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (#(" " 0 1 (fontified t)) . -17385) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) 17386 (17385 . 17386) (#(" " 0 1 (fontified t)) . -17385) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) 17386 (17365 . 17386) (t 26651 35461 294912 96000)) nil (26651 35563 336580 0) 0 nil])
([nil nil ((17477 . 17479) (#(" " 0 1 (fontified nil)) . 17476) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (17477 . 17478) (#(" " 0 1 (fontified nil)) . 17470) (17469 . 17470) (17456 . 17477) (17454 . 17456) (17433 . 17454)) nil (26651 35563 336525 0) 0 nil])
([nil nil ((#("



" 0 4 (fontified t)) . 15739) (undo-tree-id1772 . -3) (undo-tree-id1773 . -3) (undo-tree-id1774 . -3) (undo-tree-id1775 . -3) (undo-tree-id1776 . -3) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) 15742 (t 26651 35563 414218 641000)) nil (26651 35625 198763 0) 0 nil])
([nil nil ((11406 . 11407) (t 26651 35625 270033 905000) 11325) nil (26651 35768 331647 0) 0 nil])
([nil nil ((17474 . 17475) (17473 . 17474) (t 26651 35678 546699 983000) 17467) nil (26651 35774 617445 0) 0 nil] [nil nil ((17474 . 17475) (17473 . 17474) (t 26651 35678 546699 983000) 17467) ((#("
" 0 1 (fontified t)) . 17473) (undo-tree-id1779 . -1) (#("
" 0 1 (fontified t)) . 17474) (undo-tree-id1780 . -1)) (26651 35768 331315 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18855 . 18856) (nil fontified nil 17475 . 18856) (17475 . 18856)) nil (26651 35774 617439 0) 0 nil])
nil
([nil nil ((#("  \\node[list,on chain] (E) {-9};
  \\node[list,on chain] (F) {98};
  \\node[list,on chain] (I) {-9};
  \\node[list,on chain] (J) {15};
" 0 2 (fontified t) 2 7 (face (font-latex-sedate-face) fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t) 8 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t) 28 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 35 (fontified t) 35 40 (face (font-latex-sedate-face) fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t) 61 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 68 (fontified t) 68 73 (face (font-latex-sedate-face) fontified t) 73 74 (face (rainbow-delimiters-depth-1-face) fontified t) 74 87 (fontified t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 93 (fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 101 (fontified t) 101 106 (face (font-latex-sedate-face) fontified t) 106 107 (face (rainbow-delimiters-depth-1-face) fontified t) 107 120 (fontified t) 120 121 (face (rainbow-delimiters-depth-1-face) fontified t) 121 126 (fontified t) 126 127 (face (rainbow-delimiters-depth-1-face) fontified t) 127 129 (fontified t) 129 130 (face (rainbow-delimiters-depth-1-face) fontified t) 130 132 (fontified t)) . 17771) (undo-tree-id1887 . -99) (undo-tree-id1888 . -99) (undo-tree-id1889 . -99) (undo-tree-id1890 . -131) (undo-tree-id1891 . -132) (undo-tree-id1892 . -132) (undo-tree-id1893 . -132) (undo-tree-id1894 . -132) (undo-tree-id1895 . -132) (undo-tree-id1896 . -132) (undo-tree-id1897 . -132) (undo-tree-id1898 . -99) (undo-tree-id1899 . -99) (undo-tree-id1900 . -99) (undo-tree-id1901 . -99) (undo-tree-id1902 . -66) (undo-tree-id1903 . -66) (undo-tree-id1904 . -66) (undo-tree-id1905 . -66) (undo-tree-id1906 . -99) (undo-tree-id1907 . -99) (undo-tree-id1908 . -99) (undo-tree-id1909 . -99) (undo-tree-id1910 . -99) (undo-tree-id1911 . -99) (undo-tree-id1912 . -99) (undo-tree-id1913 . -99) (undo-tree-id1914 . -99) (undo-tree-id1915 . -99) (undo-tree-id1916 . -99) (undo-tree-id1917 . -99) (undo-tree-id1918 . -99) (undo-tree-id1919 . -99) (undo-tree-id1920 . -99) (undo-tree-id1921 . -99) (undo-tree-id1922 . -99) (undo-tree-id1923 . -99) (undo-tree-id1924 . -99) (undo-tree-id1925 . -99) (undo-tree-id1926 . -99) (undo-tree-id1927 . -99) (undo-tree-id1928 . -99) (undo-tree-id1929 . -99) (undo-tree-id1930 . -99) (undo-tree-id1931 . -99) (undo-tree-id1932 . -99) (undo-tree-id1933 . -99) (undo-tree-id1934 . -99) (undo-tree-id1935 . -99) (undo-tree-id1936 . -99) (undo-tree-id1937 . -99) (undo-tree-id1938 . -99) (undo-tree-id1939 . -99) (undo-tree-id1940 . -99) (undo-tree-id1941 . -99) (undo-tree-id1942 . -99) (undo-tree-id1943 . -99) (undo-tree-id1944 . -99) (undo-tree-id1945 . -99) (undo-tree-id1946 . -99) (undo-tree-id1947 . -99) (undo-tree-id1948 . -99) (undo-tree-id1949 . -99) (undo-tree-id1950 . -99) (undo-tree-id1951 . -99) (undo-tree-id1952 . -99) (undo-tree-id1953 . -99) (undo-tree-id1954 . -99) (undo-tree-id1955 . -99) (undo-tree-id1956 . -99) (undo-tree-id1957 . -99) (undo-tree-id1958 . -99) (undo-tree-id1959 . -99) (undo-tree-id1960 . -99) (undo-tree-id1961 . -99) (undo-tree-id1962 . -99) (undo-tree-id1963 . -99) (undo-tree-id1964 . -99) (undo-tree-id1965 . -99) (undo-tree-id1966 . -99) (undo-tree-id1967 . -99) (undo-tree-id1968 . -99) (undo-tree-id1969 . -99) (undo-tree-id1970 . -99) (undo-tree-id1971 . -99) (undo-tree-id1972 . -99) (undo-tree-id1973 . -99) (undo-tree-id1974 . -99) (undo-tree-id1975 . -99) (undo-tree-id1976 . -99) (undo-tree-id1977 . -99) (undo-tree-id1978 . -99) (undo-tree-id1979 . -99) (undo-tree-id1980 . -99) (undo-tree-id1981 . -66) (undo-tree-id1982 . -66) (undo-tree-id1983 . -66) (undo-tree-id1984 . -66) (undo-tree-id1985 . -33) (undo-tree-id1986 . -33) (undo-tree-id1987 . -33) (undo-tree-id1988 . -33) (undo-tree-id1989 . -33) (undo-tree-id1990 . -33) (undo-tree-id1991 . -33) (undo-tree-id1992 . -33) (undo-tree-id1993 . -33) (undo-tree-id1994 . -33) (undo-tree-id1995 . -33) (undo-tree-id1996 . -33) (undo-tree-id1997 . -66) (undo-tree-id1998 . -66) (undo-tree-id1999 . -66) (undo-tree-id2000 . -66) (undo-tree-id2001 . -99) (undo-tree-id2002 . -99) (undo-tree-id2003 . -99) (undo-tree-id2004 . -99) (undo-tree-id2005 . -99) (undo-tree-id2006 . -99) (undo-tree-id2007 . -132) (undo-tree-id2008 . -132) 17870 (t 26651 35774 697226 673000)) nil (26651 35807 982055 0) 0 nil])
([nil nil ((#("    (\\x1,\\y2) -- (E) node[midway, above] {-5};

  \\draw[*->] let \\p1 = (E.two), \\p2 = (E.center) in 
    (\\x1,\\y2) -- (F) node[midway, above] {10};

  \\draw[*->] let \\p1 = (F.two), \\p2 = (F.center) in 
    (\\x1,\\y2) -- (I) node[midway, above] {-1};

  \\draw[*->] let \\p1 = (I.two), \\p2 = (I.center) in 
    (\\x1,\\y2) -- (J) node[midway, above] {2};

  \\draw[*->] let \\p1 = (J.two), \\p2 = (J.center) in 
    (\\x1,\\y2) -- (K) node[midway, above] {4};
" 0 5 (fontified t) 5 7 (face (font-latex-sedate-face) fontified t) 7 9 (fontified t) 9 11 (face (font-latex-sedate-face) fontified t) 11 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t) 45 50 (fontified t) 50 55 (face (font-latex-sedate-face) fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-1-face) fontified t) 60 65 (fontified t) 65 67 (face (font-latex-sedate-face) fontified t) 67 80 (fontified t) 80 82 (face (font-latex-sedate-face) fontified t) 82 106 (fontified t) 106 108 (face (font-latex-sedate-face) fontified t) 108 110 (fontified t) 110 112 (face (font-latex-sedate-face) fontified t) 112 126 (fontified t) 126 127 (face (rainbow-delimiters-depth-1-face) fontified t) 127 140 (fontified t) 140 141 (face (rainbow-delimiters-depth-1-face) fontified t) 141 142 (fontified t) 142 143 (face (rainbow-delimiters-depth-1-face) fontified t) 143 145 (fontified t) 145 146 (face (rainbow-delimiters-depth-1-face) fontified t) 146 151 (fontified t) 151 156 (face (font-latex-sedate-face) fontified t) 156 157 (face (rainbow-delimiters-depth-1-face) fontified t) 157 160 (fontified t) 160 161 (face (rainbow-delimiters-depth-1-face) fontified t) 161 166 (fontified t) 166 168 (face (font-latex-sedate-face) fontified t) 168 181 (fontified t) 181 183 (face (font-latex-sedate-face) fontified t) 183 207 (fontified t) 207 209 (face (font-latex-sedate-face) fontified t) 209 211 (fontified t) 211 213 (face (font-latex-sedate-face) fontified t) 213 227 (fontified t) 227 228 (face (rainbow-delimiters-depth-1-face) fontified t) 228 241 (fontified t) 241 242 (face (rainbow-delimiters-depth-1-face) fontified t) 242 243 (fontified t) 243 244 (face (rainbow-delimiters-depth-1-face) fontified t) 244 246 (fontified t) 246 247 (face (rainbow-delimiters-depth-1-face) fontified t) 247 252 (fontified t) 252 257 (face (font-latex-sedate-face) fontified t) 257 258 (face (rainbow-delimiters-depth-1-face) fontified t) 258 261 (fontified t) 261 262 (face (rainbow-delimiters-depth-1-face) fontified t) 262 267 (fontified t) 267 269 (face (font-latex-sedate-face) fontified t) 269 282 (fontified t) 282 284 (face (font-latex-sedate-face) fontified t) 284 308 (fontified t) 308 310 (face (font-latex-sedate-face) fontified t) 310 312 (fontified t) 312 314 (face (font-latex-sedate-face) fontified t) 314 328 (fontified t) 328 329 (face (rainbow-delimiters-depth-1-face) fontified t) 329 342 (fontified t) 342 343 (face (rainbow-delimiters-depth-1-face) fontified t) 343 344 (fontified t) 344 345 (face (rainbow-delimiters-depth-1-face) fontified t) 345 346 (fontified t) 346 347 (face (rainbow-delimiters-depth-1-face) fontified t) 347 352 (fontified t) 352 357 (face (font-latex-sedate-face) fontified t) 357 358 (face (rainbow-delimiters-depth-1-face) fontified t) 358 361 (fontified t) 361 362 (face (rainbow-delimiters-depth-1-face) fontified t) 362 367 (fontified t) 367 369 (face (font-latex-sedate-face) fontified t) 369 382 (fontified t) 382 384 (face (font-latex-sedate-face) fontified t) 384 408 (fontified t) 408 410 (face (font-latex-sedate-face) fontified t) 410 412 (fontified t) 412 414 (face (font-latex-sedate-face) fontified t) 414 428 (fontified t) 428 429 (face (rainbow-delimiters-depth-1-face) fontified t) 429 442 (fontified t) 442 443 (face (rainbow-delimiters-depth-1-face) fontified t) 443 444 (fontified t) 444 445 (face (rainbow-delimiters-depth-1-face) fontified t) 445 446 (fontified t) 446 447 (face (rainbow-delimiters-depth-1-face) fontified t) 447 449 (fontified t)) . 18256) (undo-tree-id1781 . -403) (undo-tree-id1782 . -403) (undo-tree-id1783 . -448) (undo-tree-id1784 . -47) (undo-tree-id1785 . -48) (undo-tree-id1786 . -48) (undo-tree-id1787 . -48) (undo-tree-id1788 . -48) (undo-tree-id1789 . -101) (undo-tree-id1790 . -101) (undo-tree-id1791 . -101) (undo-tree-id1792 . -101) (undo-tree-id1793 . -148) (undo-tree-id1794 . -148) (undo-tree-id1795 . -148) (undo-tree-id1796 . -148) (undo-tree-id1797 . -149) (undo-tree-id1798 . -149) (undo-tree-id1799 . -149) (undo-tree-id1800 . -149) (undo-tree-id1801 . -202) (undo-tree-id1802 . -202) (undo-tree-id1803 . -202) (undo-tree-id1804 . -202) (undo-tree-id1805 . -249) (undo-tree-id1806 . -249) (undo-tree-id1807 . -249) (undo-tree-id1808 . -249) (undo-tree-id1809 . -250) (undo-tree-id1810 . -250) (undo-tree-id1811 . -250) (undo-tree-id1812 . -250) (undo-tree-id1813 . -303) (undo-tree-id1814 . -303) (undo-tree-id1815 . -303) (undo-tree-id1816 . -303) (undo-tree-id1817 . -349) (undo-tree-id1818 . -349) (undo-tree-id1819 . -349) (undo-tree-id1820 . -349) (undo-tree-id1821 . -350) (undo-tree-id1822 . -350) (undo-tree-id1823 . -350) (undo-tree-id1824 . -350) (undo-tree-id1825 . -403) (undo-tree-id1826 . -403) (undo-tree-id1827 . -403) (undo-tree-id1828 . -403) (undo-tree-id1829 . -403) (undo-tree-id1830 . -403) (undo-tree-id1831 . -403) (undo-tree-id1832 . -403) (undo-tree-id1833 . -350) (undo-tree-id1834 . -350) (undo-tree-id1835 . -350) (undo-tree-id1836 . -350) (undo-tree-id1837 . -349) (undo-tree-id1838 . -349) (undo-tree-id1839 . -349) (undo-tree-id1840 . -349) (undo-tree-id1841 . -303) (undo-tree-id1842 . -303) (undo-tree-id1843 . -303) (undo-tree-id1844 . -303) (undo-tree-id1845 . -250) (undo-tree-id1846 . -250) (undo-tree-id1847 . -250) (undo-tree-id1848 . -250) (undo-tree-id1849 . -249) (undo-tree-id1850 . -249) (undo-tree-id1851 . -249) (undo-tree-id1852 . -249) (undo-tree-id1853 . -202) (undo-tree-id1854 . -202) (undo-tree-id1855 . -202) (undo-tree-id1856 . -202) (undo-tree-id1857 . -149) (undo-tree-id1858 . -149) (undo-tree-id1859 . -149) (undo-tree-id1860 . -149) (undo-tree-id1861 . -148) (undo-tree-id1862 . -148) (undo-tree-id1863 . -148) (undo-tree-id1864 . -148) (undo-tree-id1865 . -101) (undo-tree-id1866 . -101) (undo-tree-id1867 . -101) (undo-tree-id1868 . -101) (undo-tree-id1869 . -48) (undo-tree-id1870 . -48) (undo-tree-id1871 . -48) (undo-tree-id1872 . -48) (undo-tree-id1873 . -47) (undo-tree-id1874 . -47) (undo-tree-id1875 . -47) (undo-tree-id1876 . -47) (undo-tree-id1877 . -48) (undo-tree-id1878 . -48) (undo-tree-id1879 . -48) (undo-tree-id1880 . -48) (undo-tree-id1881 . -47) (undo-tree-id1882 . -47) (undo-tree-id1883 . -47) (undo-tree-id1884 . -47) (undo-tree-id1885 . -449) (undo-tree-id1886 . -449)) nil (26651 35807 981847 0) 0 nil])
([nil nil ((#("  \\draw[*->] let \\p1 = (D.two), \\p2 = (E.center) in 
" 0 2 (fontified t) 2 7 (face (font-latex-sedate-face) fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t) 8 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 17 (fontified t) 17 19 (face (font-latex-sedate-face) fontified t) 19 32 (fontified t) 32 34 (face (font-latex-sedate-face) fontified t) 34 53 (fontified t)) . 18203) (undo-tree-id2156 . -52) (undo-tree-id2157 . -53) (undo-tree-id2158 . -53) (undo-tree-id2159 . -53) (undo-tree-id2160 . -53) (undo-tree-id2161 . -53) (undo-tree-id2162 . -53) (undo-tree-id2163 . -53) (undo-tree-id2164 . -53) (undo-tree-id2165 . -53) (undo-tree-id2166 . -53) (undo-tree-id2167 . -53) (undo-tree-id2168 . -53) (undo-tree-id2169 . -53) (undo-tree-id2170 . -53) (undo-tree-id2171 . -53) (undo-tree-id2172 . -53) (undo-tree-id2173 . -53) (undo-tree-id2174 . -53) (undo-tree-id2175 . -53) (undo-tree-id2176 . -53) (undo-tree-id2177 . -53) (undo-tree-id2178 . -53) (undo-tree-id2179 . -53) (undo-tree-id2180 . -53) (undo-tree-id2181 . -53) (undo-tree-id2182 . -53) (undo-tree-id2183 . -53) (undo-tree-id2184 . -53) (undo-tree-id2185 . -53) (undo-tree-id2186 . -53) (undo-tree-id2187 . -53) (undo-tree-id2188 . -53) (undo-tree-id2189 . -53) (undo-tree-id2190 . -53) (undo-tree-id2191 . -53) (undo-tree-id2192 . -53) (undo-tree-id2193 . -53) (undo-tree-id2194 . -53) (undo-tree-id2195 . -53) (undo-tree-id2196 . -53) (undo-tree-id2197 . -53) (undo-tree-id2198 . -53) (undo-tree-id2199 . -53) (undo-tree-id2200 . -53) (undo-tree-id2201 . -53) (undo-tree-id2202 . -53) (undo-tree-id2203 . -53) (undo-tree-id2204 . -53) (undo-tree-id2205 . -53) (undo-tree-id2206 . -53) (undo-tree-id2207 . -53) (undo-tree-id2208 . -53) (undo-tree-id2209 . -53) (undo-tree-id2210 . -53) (undo-tree-id2211 . -53) (undo-tree-id2212 . -53) (undo-tree-id2213 . -53) (undo-tree-id2214 . -53) (undo-tree-id2215 . -53) (undo-tree-id2216 . -53) (undo-tree-id2217 . -53) (undo-tree-id2218 . -53) (undo-tree-id2219 . -53) (undo-tree-id2220 . -53) (undo-tree-id2221 . -53) (undo-tree-id2222 . -53) (undo-tree-id2223 . -53) (undo-tree-id2224 . -53) (undo-tree-id2225 . -53) (undo-tree-id2226 . -53) (undo-tree-id2227 . -53) (undo-tree-id2228 . -53) (undo-tree-id2229 . -53) (undo-tree-id2230 . -53) (undo-tree-id2231 . -53) (undo-tree-id2232 . -53) (undo-tree-id2233 . -53) (undo-tree-id2234 . -53) (undo-tree-id2235 . -53) (undo-tree-id2236 . -53) (undo-tree-id2237 . -53) (undo-tree-id2238 . -53) (undo-tree-id2239 . -53) (undo-tree-id2240 . -53) (undo-tree-id2241 . -53) (undo-tree-id2242 . -53) (undo-tree-id2243 . -53) (undo-tree-id2244 . -53) (undo-tree-id2245 . -53) (undo-tree-id2246 . -53) (undo-tree-id2247 . -53) (undo-tree-id2248 . -53) (undo-tree-id2249 . -53) (undo-tree-id2250 . -53) (undo-tree-id2251 . -53) (undo-tree-id2252 . -53) (undo-tree-id2253 . -53) (undo-tree-id2254 . -53) (undo-tree-id2255 . -53) (undo-tree-id2256 . -53) (undo-tree-id2257 . -53) (undo-tree-id2258 . -53) (undo-tree-id2259 . -53) (undo-tree-id2260 . -53) (undo-tree-id2261 . -53) (undo-tree-id2262 . -53) (undo-tree-id2263 . -53) (undo-tree-id2264 . -53) (undo-tree-id2265 . -53) (undo-tree-id2266 . -53) (undo-tree-id2267 . -53) (undo-tree-id2268 . -53) (undo-tree-id2269 . -53) (undo-tree-id2270 . -53) (undo-tree-id2271 . -53) (undo-tree-id2272 . -53) (t 26651 35808 63120 325000)) nil (26651 35832 480268 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18203) (undo-tree-id2153 . 1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1)) nil (26651 35832 480085 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18202) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1)) nil (26651 35832 480067 0) 0 nil])
([nil nil ((17667 . 17668) (#("12" 0 2 (fontified t)) . 17667) (undo-tree-id2279 . -1) (t 26651 35832 561881 402000)) nil (26651 35855 171857 0) 0 nil])
([nil nil ((17699 . 17700) (#("b" 0 1 (fontified t)) . -17699) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (#("B" 0 1 (fontified t)) . -17700) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) 17701 (17699 . 17701) (#("99" 0 2 (fontified t)) . 17699) (undo-tree-id2278 . -1)) nil (26651 35855 171852 0) 0 nil])
([nil nil ((17731 . 17732) (#("37" 0 2 (fontified t)) . 17731) (undo-tree-id2273 . -1)) nil (26651 35855 171839 0) 0 nil])
([nil nil ((17763 . 17764) (#("4" 0 1 (fontified t)) . 17763) (#("-" 0 1 (fontified t)) . 17763)) nil (26651 35881 883458 0) 0 nil])
([nil nil ((#("\\begin{tikzpicture}[list/.style={
    rectangle split, rectangle split parts=2,
    draw, rectangle split horizontal, rounded corners
  }, >=stealth, start chain]

  \\node[list,on chain] (A) {A};
  \\node[list,on chain] (B) {B};
  \\node[list,on chain] (C) {C};
  \\node[list,on chain] (D) {D};

  \\node[on chain,draw,inner sep=6pt] (K) {};
  \\draw (K.north east) -- (K.south west);
  \\draw (K.north west) -- (K.south east);

  \\draw[*->] let \\p1 = (A.two), \\p2 = (A.center) in 
    (\\x1,\\y2) -- (B) node[midway, above] {5};

  \\draw[*->] let \\p1 = (B.two), \\p2 = (B.center) in 
    (\\x1,\\y2) -- (C) node[midway, above] {3};

  \\draw[*->] let \\p1 = (C.two), \\p2 = (C.center) in 
    (\\x1,\\y2) -- (D) node[midway, above] {-7};
\\end{tikzpicture}
" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 18 (face (font-lock-function-name-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 34 (fontified t) 34 38 (fontified t) 38 79 (fontified t) 79 80 (fontified t) 80 88 (fontified t) 88 117 (fontified t) 117 134 (fontified t) 134 136 (fontified t) 136 137 (face (rainbow-delimiters-depth-2-face) fontified t) 137 161 (fontified t) 161 162 (face (rainbow-delimiters-depth-1-face) fontified t) 162 164 (fontified t) 164 166 (fontified t) 166 171 (face (font-latex-sedate-face) fontified t) 171 172 (face (rainbow-delimiters-depth-1-face) fontified t) 172 185 (fontified t) 185 186 (face (rainbow-delimiters-depth-1-face) fontified t) 186 191 (fontified t) 191 192 (face (rainbow-delimiters-depth-1-face) fontified t) 192 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-1-face) fontified t) 194 196 (fontified t) 196 198 (fontified t) 198 203 (face (font-latex-sedate-face) fontified t) 203 204 (face (rainbow-delimiters-depth-1-face) fontified t) 204 217 (fontified t) 217 218 (face (rainbow-delimiters-depth-1-face) fontified t) 218 223 (fontified t) 223 224 (face (rainbow-delimiters-depth-1-face) fontified t) 224 225 (fontified t) 225 226 (face (rainbow-delimiters-depth-1-face) fontified t) 226 228 (fontified t) 228 230 (fontified t) 230 235 (face (font-latex-sedate-face) fontified t) 235 236 (face (rainbow-delimiters-depth-1-face) fontified t) 236 249 (fontified t) 249 250 (face (rainbow-delimiters-depth-1-face) fontified t) 250 255 (fontified t) 255 256 (face (rainbow-delimiters-depth-1-face) fontified t) 256 257 (fontified t) 257 258 (face (rainbow-delimiters-depth-1-face) fontified t) 258 260 (fontified t) 260 262 (fontified t) 262 267 (face (font-latex-sedate-face) fontified t) 267 268 (face (rainbow-delimiters-depth-1-face) fontified t) 268 281 (fontified t) 281 282 (face (rainbow-delimiters-depth-1-face) fontified t) 282 287 (fontified t) 287 288 (face (rainbow-delimiters-depth-1-face) fontified t) 288 289 (fontified t) 289 290 (face (rainbow-delimiters-depth-1-face) fontified t) 290 292 (fontified t) 292 293 (fontified t) 293 295 (fontified t) 295 300 (face (font-latex-sedate-face) fontified t) 300 301 (face (rainbow-delimiters-depth-1-face) fontified t) 301 328 (fontified t) 328 329 (face (rainbow-delimiters-depth-1-face) fontified t) 329 334 (fontified t) 334 335 (face (rainbow-delimiters-depth-1-face) fontified t) 335 336 (face (rainbow-delimiters-depth-1-face) fontified t) 336 340 (fontified t) 340 345 (face (font-latex-sedate-face) fontified t) 345 382 (fontified t) 382 387 (face (font-latex-sedate-face) fontified t) 387 425 (fontified t) 425 430 (face (font-latex-sedate-face) fontified t) 430 431 (face (rainbow-delimiters-depth-1-face) fontified t) 431 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-1-face) fontified t) 435 440 (fontified t) 440 442 (face (font-latex-sedate-face) fontified t) 442 455 (fontified t) 455 457 (face (font-latex-sedate-face) fontified t) 457 481 (fontified t) 481 483 (face (font-latex-sedate-face) fontified t) 483 485 (fontified t) 485 487 (face (font-latex-sedate-face) fontified t) 487 501 (fontified t) 501 502 (face (rainbow-delimiters-depth-1-face) fontified t) 502 515 (fontified t) 515 516 (face (rainbow-delimiters-depth-1-face) fontified t) 516 517 (fontified t) 517 518 (face (rainbow-delimiters-depth-1-face) fontified t) 518 519 (fontified t) 519 520 (face (rainbow-delimiters-depth-1-face) fontified t) 520 525 (fontified t) 525 530 (face (font-latex-sedate-face) fontified t) 530 531 (face (rainbow-delimiters-depth-1-face) fontified t) 531 534 (fontified t) 534 535 (face (rainbow-delimiters-depth-1-face) fontified t) 535 540 (fontified t) 540 542 (face (font-latex-sedate-face) fontified t) 542 555 (fontified t) 555 557 (face (font-latex-sedate-face) fontified t) 557 581 (fontified t) 581 583 (face (font-latex-sedate-face) fontified t) 583 585 (fontified t) 585 587 (face (font-latex-sedate-face) fontified t) 587 601 (fontified t) 601 602 (face (rainbow-delimiters-depth-1-face) fontified t) 602 615 (fontified t) 615 616 (face (rainbow-delimiters-depth-1-face) fontified t) 616 617 (fontified t) 617 618 (face (rainbow-delimiters-depth-1-face) fontified t) 618 619 (fontified t) 619 620 (face (rainbow-delimiters-depth-1-face) fontified t) 620 625 (fontified t) 625 630 (face (font-latex-sedate-face) fontified t) 630 631 (face (rainbow-delimiters-depth-1-face) fontified t) 631 634 (fontified t) 634 635 (face (rainbow-delimiters-depth-1-face) fontified t) 635 640 (fontified t) 640 642 (face (font-latex-sedate-face) fontified t) 642 655 (fontified t) 655 657 (face (font-latex-sedate-face) fontified t) 657 681 (fontified t) 681 683 (face (font-latex-sedate-face) fontified t) 683 685 (fontified t) 685 687 (face (font-latex-sedate-face) fontified t) 687 701 (fontified t) 701 702 (face (rainbow-delimiters-depth-1-face) fontified t) 702 715 (fontified t) 715 716 (face (rainbow-delimiters-depth-1-face) fontified t) 716 717 (fontified t) 717 718 (face (rainbow-delimiters-depth-1-face) fontified t) 718 720 (fontified t) 720 721 (face (rainbow-delimiters-depth-1-face) fontified t) 721 723 (fontified t) 723 724 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 724 727 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 727 728 (face (rainbow-delimiters-depth-1-face) fontified t) 728 739 (face (font-lock-function-name-face) fontified t) 739 740 (face (rainbow-delimiters-depth-1-face) fontified t) 740 741 (fontified t rear-nonsticky t)) . 17475) (undo-tree-id2442 . -740) (undo-tree-id2443 . -740) (undo-tree-id2444 . 452) (undo-tree-id2445 . -33) (undo-tree-id2446 . -740) (undo-tree-id2447 . -740) (undo-tree-id2448 . -88) (undo-tree-id2449 . -88) (undo-tree-id2450 . -81) (undo-tree-id2451 . -38) (undo-tree-id2452 . -116) (undo-tree-id2453 . -740) 18215 (t 26651 35892 591318 6000)) nil (26651 35946 167154 0) 0 nil] [nil nil ((#("rectangle split, rectangle split parts=2," 0 41 (fontified t)) . 17513) (undo-tree-id2311 . -40) (undo-tree-id2312 . -40) (undo-tree-id2313 . -40) (undo-tree-id2314 . -40) (undo-tree-id2315 . -20) (undo-tree-id2316 . -40) (undo-tree-id2317 . -26) (undo-tree-id2318 . -26) (undo-tree-id2319 . -26) (undo-tree-id2320 . -26) (undo-tree-id2321 . -17) (undo-tree-id2322 . -17) (undo-tree-id2323 . -17) (undo-tree-id2324 . -17) (undo-tree-id2325 . -15) (undo-tree-id2326 . -15) (undo-tree-id2327 . -15) (undo-tree-id2328 . -15) (undo-tree-id2329 . -10) (undo-tree-id2330 . -10) (undo-tree-id2331 . -10) (undo-tree-id2332 . -10) (undo-tree-id2333 . -8) (undo-tree-id2334 . -8) (undo-tree-id2335 . -8) (undo-tree-id2336 . -8) (undo-tree-id2337 . -14) (undo-tree-id2338 . -14) (undo-tree-id2339 . -14) (undo-tree-id2340 . -14) (undo-tree-id2341 . -15) (undo-tree-id2342 . -15) (undo-tree-id2343 . -15) (undo-tree-id2344 . -15) (undo-tree-id2345 . -25) (undo-tree-id2346 . -25) (undo-tree-id2347 . -25) (undo-tree-id2348 . -25) (undo-tree-id2349 . -31) (undo-tree-id2350 . -31) (undo-tree-id2351 . -31) (undo-tree-id2352 . -31) (undo-tree-id2353 . -37) (undo-tree-id2354 . -37) (undo-tree-id2355 . -37) (undo-tree-id2356 . -37) (undo-tree-id2357 . -38) (undo-tree-id2358 . -38) (undo-tree-id2359 . -38) (undo-tree-id2360 . -38) (undo-tree-id2361 . -39) (undo-tree-id2362 . -39) (undo-tree-id2363 . -39) (undo-tree-id2364 . -39) (undo-tree-id2365 . -40) (undo-tree-id2366 . -40) (undo-tree-id2367 . -40) (undo-tree-id2369 . -40) (undo-tree-id2371 . -41) 17553 (t 26651 35855 254119 947000)) ((17513 . 17554)) (26651 35881 403947 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17475 . 17476) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -18216) (17475 . 18217)) nil (26651 35955 309476 0) 0 nil])
([nil nil ((#(", rectangle split horizontal," 0 29 (fontified t)) . 17522) (undo-tree-id2280 . -28) (undo-tree-id2281 . -28) (undo-tree-id2282 . -28) (undo-tree-id2283 . -28) (undo-tree-id2284 . -28) (undo-tree-id2286 . -22) (undo-tree-id2288 . -22) (undo-tree-id2290 . -22) (undo-tree-id2292 . -10) (undo-tree-id2294 . -10) (undo-tree-id2296 . -16) (undo-tree-id2298 . -16) (undo-tree-id2300 . -27) (undo-tree-id2302 . -27) (undo-tree-id2304 . -28) (undo-tree-id2306 . -28) (undo-tree-id2308 . -28) (undo-tree-id2310 . -29) 17550) ((17522 . 17551) (t 26651 35874 155226 702000)) (26651 35880 878982 0) 0 nil])
([nil nil ((#("\\begin{tikzpicture}[list/.style={
    rectangle split, rectangle split parts=2,
    draw, rectangle split horizontal, rounded corners
  }, >=stealth, start chain]

  \\node[list,on chain] (A) {A};
  \\node[list,on chain] (B) {B};
  \\node[list,on chain] (C) {C};
  \\node[list,on chain] (D) {D};

  \\node[on chain,draw,inner sep=6pt] (K) {};
  \\draw (K.north east) -- (K.south west);
  \\draw (K.north west) -- (K.south east);

  \\draw[*->] let \\p1 = (A.two), \\p2 = (A.center) in 
    (\\x1,\\y2) -- (B) node[midway, above] {5};

  \\draw[*->] let \\p1 = (B.two), \\p2 = (B.center) in 
    (\\x1,\\y2) -- (C) node[midway, above] {3};

  \\draw[*->] let \\p1 = (C.two), \\p2 = (C.center) in 
    (\\x1,\\y2) -- (D) node[midway, above] {-7};
\\end{tikzpicture}
" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 18 (face (font-lock-function-name-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 34 (fontified t) 34 38 (fontified t) 38 79 (fontified t) 79 80 (fontified t) 80 88 (fontified t) 88 117 (fontified t) 117 134 (fontified t) 134 136 (fontified t) 136 137 (face (rainbow-delimiters-depth-2-face) fontified t) 137 161 (fontified t) 161 162 (face (rainbow-delimiters-depth-1-face) fontified t) 162 164 (fontified t) 164 166 (fontified t) 166 171 (face (font-latex-sedate-face) fontified t) 171 172 (face (rainbow-delimiters-depth-1-face) fontified t) 172 185 (fontified t) 185 186 (face (rainbow-delimiters-depth-1-face) fontified t) 186 191 (fontified t) 191 192 (face (rainbow-delimiters-depth-1-face) fontified t) 192 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-1-face) fontified t) 194 196 (fontified t) 196 198 (fontified t) 198 203 (face (font-latex-sedate-face) fontified t) 203 204 (face (rainbow-delimiters-depth-1-face) fontified t) 204 217 (fontified t) 217 218 (face (rainbow-delimiters-depth-1-face) fontified t) 218 223 (fontified t) 223 224 (face (rainbow-delimiters-depth-1-face) fontified t) 224 225 (fontified t) 225 226 (face (rainbow-delimiters-depth-1-face) fontified t) 226 228 (fontified t) 228 230 (fontified t) 230 235 (face (font-latex-sedate-face) fontified t) 235 236 (face (rainbow-delimiters-depth-1-face) fontified t) 236 249 (fontified t) 249 250 (face (rainbow-delimiters-depth-1-face) fontified t) 250 255 (fontified t) 255 256 (face (rainbow-delimiters-depth-1-face) fontified t) 256 257 (fontified t) 257 258 (face (rainbow-delimiters-depth-1-face) fontified t) 258 260 (fontified t) 260 262 (fontified t) 262 267 (face (font-latex-sedate-face) fontified t) 267 268 (face (rainbow-delimiters-depth-1-face) fontified t) 268 281 (fontified t) 281 282 (face (rainbow-delimiters-depth-1-face) fontified t) 282 287 (fontified t) 287 288 (face (rainbow-delimiters-depth-1-face) fontified t) 288 289 (fontified t) 289 290 (face (rainbow-delimiters-depth-1-face) fontified t) 290 292 (fontified t) 292 293 (fontified t) 293 295 (fontified t) 295 300 (face (font-latex-sedate-face) fontified t) 300 301 (face (rainbow-delimiters-depth-1-face) fontified t) 301 328 (fontified t) 328 329 (face (rainbow-delimiters-depth-1-face) fontified t) 329 334 (fontified t) 334 335 (face (rainbow-delimiters-depth-1-face) fontified t) 335 336 (face (rainbow-delimiters-depth-1-face) fontified t) 336 340 (fontified t) 340 345 (face (font-latex-sedate-face) fontified t) 345 382 (fontified t) 382 387 (face (font-latex-sedate-face) fontified t) 387 425 (fontified t) 425 430 (face (font-latex-sedate-face) fontified t) 430 431 (face (rainbow-delimiters-depth-1-face) fontified t) 431 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-1-face) fontified t) 435 440 (fontified t) 440 442 (face (font-latex-sedate-face) fontified t) 442 455 (fontified t) 455 457 (face (font-latex-sedate-face) fontified t) 457 481 (fontified t) 481 483 (face (font-latex-sedate-face) fontified t) 483 485 (fontified t) 485 487 (face (font-latex-sedate-face) fontified t) 487 501 (fontified t) 501 502 (face (rainbow-delimiters-depth-1-face) fontified t) 502 515 (fontified t) 515 516 (face (rainbow-delimiters-depth-1-face) fontified t) 516 517 (fontified t) 517 518 (face (rainbow-delimiters-depth-1-face) fontified t) 518 519 (fontified t) 519 520 (face (rainbow-delimiters-depth-1-face) fontified t) 520 525 (fontified t) 525 530 (face (font-latex-sedate-face) fontified t) 530 531 (face (rainbow-delimiters-depth-1-face) fontified t) 531 534 (fontified t) 534 535 (face (rainbow-delimiters-depth-1-face) fontified t) 535 540 (fontified t) 540 542 (face (font-latex-sedate-face) fontified t) 542 555 (fontified t) 555 557 (face (font-latex-sedate-face) fontified t) 557 581 (fontified t) 581 583 (face (font-latex-sedate-face) fontified t) 583 585 (fontified t) 585 587 (face (font-latex-sedate-face) fontified t) 587 601 (fontified t) 601 602 (face (rainbow-delimiters-depth-1-face) fontified t) 602 615 (fontified t) 615 616 (face (rainbow-delimiters-depth-1-face) fontified t) 616 617 (fontified t) 617 618 (face (rainbow-delimiters-depth-1-face) fontified t) 618 619 (fontified t) 619 620 (face (rainbow-delimiters-depth-1-face) fontified t) 620 625 (fontified t) 625 630 (face (font-latex-sedate-face) fontified t) 630 631 (face (rainbow-delimiters-depth-1-face) fontified t) 631 634 (fontified t) 634 635 (face (rainbow-delimiters-depth-1-face) fontified t) 635 640 (fontified t) 640 642 (face (font-latex-sedate-face) fontified t) 642 655 (fontified t) 655 657 (face (font-latex-sedate-face) fontified t) 657 681 (fontified t) 681 683 (face (font-latex-sedate-face) fontified t) 683 685 (fontified t) 685 687 (face (font-latex-sedate-face) fontified t) 687 701 (fontified t) 701 702 (face (rainbow-delimiters-depth-1-face) fontified t) 702 715 (fontified t) 715 716 (face (rainbow-delimiters-depth-1-face) fontified t) 716 717 (fontified t) 717 718 (face (rainbow-delimiters-depth-1-face) fontified t) 718 720 (fontified t) 720 721 (face (rainbow-delimiters-depth-1-face) fontified t) 721 723 (fontified t) 723 724 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 724 727 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 727 728 (face (rainbow-delimiters-depth-1-face) fontified t) 728 739 (face (font-lock-function-name-face) fontified t) 739 740 (face (rainbow-delimiters-depth-1-face) fontified t) 740 741 (fontified t)) . 17476) (undo-tree-id2454 . -723) (undo-tree-id2455 . -723) (undo-tree-id2456 . -723) (undo-tree-id2457 . -740) (undo-tree-id2458 . -134) (undo-tree-id2459 . -134) (undo-tree-id2460 . -134) (undo-tree-id2461 . -134) (undo-tree-id2462 . -134) (undo-tree-id2463 . -134) (undo-tree-id2464 . -134) (undo-tree-id2465 . -134) (undo-tree-id2466 . -134) (undo-tree-id2467 . -134) (undo-tree-id2468 . -134) (undo-tree-id2469 . -134) (undo-tree-id2470 . -134) (undo-tree-id2471 . -134) (undo-tree-id2472 . -134) (undo-tree-id2473 . -134) (undo-tree-id2474 . -134) (undo-tree-id2475 . -134) (undo-tree-id2476 . -723) (undo-tree-id2477 . -134) (undo-tree-id2478 . -134) (undo-tree-id2479 . -134) (undo-tree-id2480 . -134) (undo-tree-id2481 . -134) (undo-tree-id2482 . -134) (undo-tree-id2483 . -34) (undo-tree-id2484 . -34) (undo-tree-id2485 . -34) (undo-tree-id2486 . -34) (undo-tree-id2487 . -34) (undo-tree-id2488 . -80) (undo-tree-id2489 . -80) (undo-tree-id2490 . -80) (undo-tree-id2491 . -80) (undo-tree-id2492 . -134) (undo-tree-id2493 . -134) (undo-tree-id2494 . -134) (undo-tree-id2495 . -134) (undo-tree-id2496 . -163) (undo-tree-id2497 . -163) (undo-tree-id2498 . -163) (undo-tree-id2499 . -163) (undo-tree-id2500 . -164) (undo-tree-id2501 . -164) (undo-tree-id2502 . -164) (undo-tree-id2503 . -164) (undo-tree-id2504 . -196) (undo-tree-id2505 . -228) (undo-tree-id2506 . -228) (undo-tree-id2507 . -228) (undo-tree-id2508 . -228) (undo-tree-id2509 . -260) (undo-tree-id2510 . -292) (undo-tree-id2511 . -292) (undo-tree-id2512 . -292) (undo-tree-id2513 . -292) (undo-tree-id2514 . -293) (undo-tree-id2515 . -338) (undo-tree-id2516 . -338) (undo-tree-id2517 . -338) (undo-tree-id2518 . -338) (undo-tree-id2519 . -380) (undo-tree-id2520 . -422) (undo-tree-id2521 . -422) (undo-tree-id2522 . -422) (undo-tree-id2523 . -422) (undo-tree-id2524 . -423) (undo-tree-id2525 . -476) (undo-tree-id2526 . -476) (undo-tree-id2527 . -476) (undo-tree-id2528 . -476) (undo-tree-id2529 . -522) (undo-tree-id2530 . -522) (undo-tree-id2531 . -522) (undo-tree-id2532 . -522) (undo-tree-id2533 . -523) (undo-tree-id2534 . -523) (undo-tree-id2535 . -523) (undo-tree-id2536 . -523) (undo-tree-id2537 . -576) (undo-tree-id2538 . -576) (undo-tree-id2539 . -576) (undo-tree-id2540 . -576) (undo-tree-id2541 . -622) (undo-tree-id2542 . -622) (undo-tree-id2543 . -622) (undo-tree-id2544 . -622) (undo-tree-id2545 . -623) (undo-tree-id2546 . -623) (undo-tree-id2547 . -623) (undo-tree-id2548 . -623) (undo-tree-id2549 . -676) (undo-tree-id2550 . -676) (undo-tree-id2551 . -676) (undo-tree-id2552 . -676) (undo-tree-id2553 . -723) (undo-tree-id2554 . -723) (undo-tree-id2555 . -723) (undo-tree-id2556 . -723) (undo-tree-id2557 . -723) (undo-tree-id2558 . -723) (undo-tree-id2559 . -741) (undo-tree-id2560 . -741) 18199) nil (26651 35963 845058 0) 0 nil] [nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 17475)) ((17475 . 17476)) (26651 35954 784955 0) 0 nil])
([nil nil ((#("    
" 0 5 (fontified t)) . 17509) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) (undo-tree-id2375 . -4) (undo-tree-id2376 . -4) (undo-tree-id2377 . -4) (undo-tree-id2378 . -4) (undo-tree-id2379 . -4) (undo-tree-id2380 . -4) (undo-tree-id2381 . -4) (undo-tree-id2382 . -4) (undo-tree-id2383 . -4) (undo-tree-id2384 . -4) (undo-tree-id2385 . -4) (undo-tree-id2386 . -4) (undo-tree-id2387 . -4) (undo-tree-id2388 . -4) (undo-tree-id2389 . -4) (undo-tree-id2390 . -4) (undo-tree-id2391 . -4) (undo-tree-id2392 . -4) (undo-tree-id2393 . -4) (undo-tree-id2394 . -4) (undo-tree-id2395 . -4) (undo-tree-id2396 . -4) (undo-tree-id2397 . -4) (undo-tree-id2398 . -4) (undo-tree-id2399 . -4) (undo-tree-id2400 . -4) (undo-tree-id2401 . -4) (undo-tree-id2402 . -4) (undo-tree-id2403 . -4) (undo-tree-id2404 . -4) (undo-tree-id2405 . -4) (undo-tree-id2406 . -4) (undo-tree-id2407 . -4) (undo-tree-id2408 . -4) (undo-tree-id2409 . -4) (undo-tree-id2410 . -4) (undo-tree-id2411 . -4) (undo-tree-id2412 . -4) (undo-tree-id2413 . -4) (undo-tree-id2414 . -4) (undo-tree-id2415 . -4) (undo-tree-id2416 . -4) (undo-tree-id2417 . -4) (undo-tree-id2418 . -4) (undo-tree-id2419 . -4) (undo-tree-id2420 . -4) (undo-tree-id2421 . -4) (undo-tree-id2422 . -4) (undo-tree-id2423 . -4) (undo-tree-id2424 . -4) (undo-tree-id2425 . -4) (undo-tree-id2426 . -4) (undo-tree-id2427 . -4) (undo-tree-id2428 . -4) (undo-tree-id2429 . -4) (undo-tree-id2430 . -4) (undo-tree-id2431 . -4) (undo-tree-id2432 . -4) (undo-tree-id2433 . -4) (undo-tree-id2434 . -4) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -5) (undo-tree-id2441 . -5) 17513 (t 26651 35874 155226 702000)) ((17509 . 17514)) (26651 35880 878445 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18137 . 18138) (nil fontified nil 17476 . 18138) (17476 . 18138) (t 26651 35963 926718 479000)) nil (26651 35970 157237 0) 0 nil])
([nil nil ((17474 . 17475) 17474) ((#("
" 0 1 (fontified t)) . 17474) (t 26651 35946 248765 961000)) (26651 35946 167115 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 17474) (undo-tree-id2563 . 1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1)) nil (26651 35970 157233 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 18137) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1)) nil (26651 35970 157211 0) 0 nil])
([nil nil ((#("  \\node[on chain,draw,inner sep=6pt] (K) {};
  \\draw (K.north east) -- (K.south west);
  \\draw (K.north west) -- (K.south east);
" 0 2 (fontified t) 2 7 (face (font-latex-sedate-face) fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t) 8 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t) 43 45 (fontified t) 45 47 (fontified t) 47 52 (face (font-latex-sedate-face) fontified t) 52 89 (fontified t) 89 94 (face (font-latex-sedate-face) fontified t) 94 129 (fontified t)) . 17685) (undo-tree-id2584 . -87) (undo-tree-id2585 . -87) (undo-tree-id2586 . -87) (undo-tree-id2587 . -128) (undo-tree-id2588 . -87) (undo-tree-id2589 . -45) (undo-tree-id2590 . -87) (undo-tree-id2591 . -87) (undo-tree-id2592 . -87) (undo-tree-id2593 . -87) (undo-tree-id2594 . -129) (undo-tree-id2595 . -129) (undo-tree-id2596 . -87) (undo-tree-id2597 . -87) (undo-tree-id2598 . -87) (undo-tree-id2599 . -87) (undo-tree-id2600 . -45) (undo-tree-id2601 . -45) (undo-tree-id2602 . -45) (undo-tree-id2603 . -45) (undo-tree-id2604 . -45) (undo-tree-id2605 . -45) (undo-tree-id2606 . -45) (undo-tree-id2607 . -45) (undo-tree-id2608 . -87) (undo-tree-id2609 . -87) (undo-tree-id2610 . -87) (undo-tree-id2611 . -87) (undo-tree-id2612 . -87) (undo-tree-id2613 . -87) (undo-tree-id2614 . -129) (undo-tree-id2615 . -129) 17772 (t 26651 35970 233115 889000)) nil (26651 36009 268237 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17685) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1)) nil (26651 36023 795488 0) 0 nil])
([nil nil ((17472 . 17478) (t 26651 36009 352219 307000)) nil (26651 36031 267558 0) 0 nil] [nil nil ((#(" every iteration. For instance, consider the following
graph:" 0 55 (fontified t) 55 61 (fontified t)) . 17412) (undo-tree-id2616 . -60) (undo-tree-id2617 . -60) (undo-tree-id2618 . -60) (undo-tree-id2619 . -60) (undo-tree-id2620 . -61) (undo-tree-id2621 . -60) (undo-tree-id2622 . -60) (undo-tree-id2623 . -61) (undo-tree-id2624 . -61) (undo-tree-id2625 . -61) (undo-tree-id2626 . -61) (undo-tree-id2627 . -60) (undo-tree-id2628 . -60) (undo-tree-id2629 . -60) (undo-tree-id2630 . -61) (undo-tree-id2631 . -55) (undo-tree-id2632 . -60) (undo-tree-id2633 . -60) (undo-tree-id2634 . -60) (undo-tree-id2635 . -60) (undo-tree-id2636 . -60) (undo-tree-id2637 . -60) (undo-tree-id2638 . -60) (undo-tree-id2639 . -60) (undo-tree-id2640 . -61) (undo-tree-id2641 . -61) 17472 (t 26651 36009 352219 307000)) ((17412 . 17473)) (26651 36023 795133 0) 0 nil])
([nil nil ((3311 . 3312) (" " . 24574) (" " . 24186) ("        " . 23941) (" " . 23897) (#(" " 0 1 (face font-latex-verbatim-face)) . 23849) (#(" " 0 1 (face font-latex-verbatim-face)) . 23786) (#(" " 0 1 (face font-latex-verbatim-face)) . 23591) (#(" " 0 1 (fontified t)) . 17977) (#(" " 0 1 (fontified t)) . 17877) (#(" " 0 1 (fontified t)) . 17777) (" " . 13526) (#("  " 0 2 (face font-latex-verbatim-face)) . 11464) (" " . 11443) (" " . 10617) (" " . 9218) (" " . 8675) 3311 (3299 . 3311) (3297 . 3299) (3281 . 3297) (3280 . 3282) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -3280) (3280 . 3281) (3274 . 3280) (3273 . 3274) (#("(" 0 1 (fontified nil)) . -3273) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (#(")" 0 1 (fontified t)) . 3274) (3273 . 3275) (#("(" 0 1 (fontified nil)) . -3273) (3273 . 3274) (3272 . 3273) (3271 . 3272) (t 26651 36031 351412 218000) 3228) nil (26651 36333 704093 0) 0 nil])
nil
([nil nil ((3342 . 3343) (#("}" 0 1 (face (font-lock-function-name-face) fontified nil)) . -3342) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3343) (3336 . 3343) (3335 . 3337) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -3335) (3335 . 3336) (3332 . 3335) (3331 . 3332) (3328 . 3331) (3327 . 3328) (#("}" 0 1 (face (font-lock-function-name-face) fontified nil)) . -3327) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3328) (3321 . 3328) (3320 . 3322) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -3320) (3320 . 3321) (#(")" 0 1 (fontified t)) . -3320) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (#("f" 0 1 (fontified t)) . -3321) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (#("i" 0 1 (fontified t)) . -3322) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) 3323 (3320 . 3323) (#(")" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -3320) (3320 . 3321) (#(" " 0 1 (font-lock-multiline t fontified t)) . -3320) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (#(" " 0 1 (font-lock-multiline t fontified t)) . -3321) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) 3322 (3320 . 3322) (3315 . 3320) (3314 . 3315) (3313 . 3314) (t 26651 36333 780595 954000) 3312) nil (26651 36416 960746 0) 0 nil])
([nil nil ((#("\\" 0 1 (face font-latex-warning-face fontified t)) . -3332) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) 3333 (3331 . 3333) (3328 . 3331) 3328) nil (26651 36416 960715 0) 0 nil])
([nil nil ((3330 . 3331) (#("}" 0 1 (face (font-lock-function-name-face) fontified nil)) . -3330) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3331) (3321 . 3331) (3320 . 3322) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -3320) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (3320 . 3321) (3315 . 3320) (3314 . 3315) (3313 . 3314) 3276) nil (26651 36416 960696 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3365 . 3366) (#("
" 0 1 (fontified nil)) . -3383) (3365 . 3384)) nil (26651 36416 960687 0) 0 nil])
([nil nil ((3367 . 3370) (#("begin" 0 5 (face (font-lock-keyword-face font-latex-sedate-face) fontified t)) . 3367) (undo-tree-id2719 . -4) (undo-tree-id2720 . -5) (undo-tree-id2721 . -5)) nil (26651 36416 960684 0) 0 nil])
([nil nil ((#("  \\
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 3347) (undo-tree-id2695 . -3) (undo-tree-id2696 . -3) (undo-tree-id2697 . -3) (undo-tree-id2698 . -3) (undo-tree-id2699 . -3) (undo-tree-id2700 . -3) (undo-tree-id2701 . -3) (undo-tree-id2702 . -3) (undo-tree-id2703 . -3) (undo-tree-id2704 . -3) (undo-tree-id2705 . -3) (undo-tree-id2706 . -3) (undo-tree-id2707 . -3) (undo-tree-id2708 . -3) (undo-tree-id2709 . -3) (undo-tree-id2710 . -3) (undo-tree-id2711 . -3) (undo-tree-id2712 . -3) (undo-tree-id2713 . -3) (undo-tree-id2714 . -3) (undo-tree-id2715 . -3) (undo-tree-id2716 . -3) (undo-tree-id2717 . -4) (undo-tree-id2718 . -4) 3350) nil (26651 36416 960676 0) 0 nil])
([nil nil ((3350 . 3359) (3349 . 3350) (3346 . 3349) 3332) nil (26651 36416 960636 0) 0 nil])
([nil nil (3372) nil (26651 36416 960634 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3360) (undo-tree-id2673 . -1) (undo-tree-id2674 . 1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (#(" " 0 1 (fontified t)) . -3361) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) 3362) nil (26651 36416 960630 0) 0 nil])
([nil nil ((3390 . 3402) (3389 . 3391) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3389) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (3389 . 3390) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3389) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3390) (3389 . 3391) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3389) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (3389 . 3390) (3388 . 3389) (#("]" 0 1 (face (font-lock-variable-name-face) fontified nil)) . -3388) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3389) (3379 . 3389) (3378 . 3380) (#("[" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -3378) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (3378 . 3379) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3378) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3379) (#("e" 0 1 (face (font-lock-constant-face) fontified t)) . -3379) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) 3380 (3379 . 3380) (3378 . 3380) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -3378) (3378 . 3379) (3363 . 3378) (3363 . 3365) (3362 . 3363) (3359 . 3362) 3347) nil (26651 36416 960585 0) 0 nil])
([nil nil (3313) nil (26651 36453 647097 0) 0 nil])
([nil nil ((3280 . 3286) (3279 . 3281) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -3279) (3279 . 3280) (#(")" 0 1 (fontified t)) . -3279) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (#("c" 0 1 (fontified t)) . -3280) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (#("e" 0 1 (fontified t)) . -3281) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (#("n" 0 1 (fontified t)) . -3282) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (#("t" 0 1 (fontified t)) . -3283) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) 3284 (3279 . 3284) (#(")" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -3279) (3274 . 3280) (3273 . 3274) (3272 . 3273) (t 26651 36417 43423 230000) 3272) nil (26651 36453 647092 0) 0 nil])
([nil nil ((3453 . 3459) (3452 . 3454) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -3452) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (3452 . 3453) (3449 . 3452) (3448 . 3449) (3447 . 3448) 3445) nil (26651 36453 647067 0) 0 nil])
([nil nil ((#("  \\centering
" 0 2 (fontified t) 2 12 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 12 13 (fontified t)) . 3362) (undo-tree-id2744 . -11) (undo-tree-id2745 . -11) (undo-tree-id2746 . -11) (undo-tree-id2747 . -11) (undo-tree-id2748 . -12) (undo-tree-id2749 . -11) (undo-tree-id2750 . -12) (undo-tree-id2751 . -12) (undo-tree-id2752 . -12) (undo-tree-id2753 . -12) (undo-tree-id2754 . -11) (undo-tree-id2755 . -11) (undo-tree-id2756 . -11) (undo-tree-id2757 . -11) (undo-tree-id2758 . -11) (undo-tree-id2759 . -11) (undo-tree-id2760 . -11) (undo-tree-id2761 . -11) (undo-tree-id2762 . -11) (undo-tree-id2763 . -13) (undo-tree-id2764 . -13) 3373) nil (26651 36453 647057 0) 0 nil])
([nil nil ((3389 . 3390)) nil (26651 36453 647010 0) 0 nil])
([nil nil ((3389 . 3390) (#("2" 0 1 (face (font-lock-variable-name-face) fontified t)) . 3389) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (t 26651 36453 731435 172000)) nil (26651 36462 263521 0) 0 nil])
([nil nil ((3389 . 3390) (#("0" 0 1 (face (font-lock-variable-name-face) fontified t)) . 3389) (undo-tree-id2795 . -1) (t 26651 36462 347363 320000)) nil (26651 36473 337285 0) 0 nil])
([nil nil ((#("5" 0 1 (face (font-lock-variable-name-face) fontified t)) . 3390) (undo-tree-id2792 . 1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1)) nil (26651 36473 337277 0) 0 nil])
([nil nil ((3365 . 3374) (3364 . 3365) (3361 . 3364) (t 26651 36473 421627 58000) 3361) nil (26651 36479 289474 0) 0 nil])
([nil nil ((#("\\begin{fullwidth}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 16 (face (font-lock-function-name-face) fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 18 (fontified t)) . 3329) (undo-tree-id2799 . -12) (undo-tree-id2800 . -12) (undo-tree-id2801 . -12) (undo-tree-id2802 . -12) (undo-tree-id2803 . -17) (undo-tree-id2804 . -12) (undo-tree-id2805 . -12) (undo-tree-id2806 . -12) (undo-tree-id2807 . -12) (undo-tree-id2808 . -12) (undo-tree-id2809 . -12) (undo-tree-id2810 . -12) (undo-tree-id2811 . -12) (undo-tree-id2812 . -12) (undo-tree-id2813 . -12) (undo-tree-id2814 . -18) (undo-tree-id2815 . -18) 3341 (t 26651 36479 373463 938000)) nil (26651 36493 735350 0) 0 nil])
([nil nil ((#("\\end{fullwidth}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 4 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 14 (face (font-lock-function-name-face) fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 16 (fontified t)) . 3414) (undo-tree-id2796 . -15) (undo-tree-id2797 . -16) (undo-tree-id2798 . -16)) nil (26651 36493 735316 0) 0 nil])
([nil nil ((3341 . 3342) (3336 . 3341) (t 26651 36493 813112 966000)) nil (26651 36506 410560 0) 0 nil])
([nil nil ((3412 . 3418)) nil (26651 36506 410554 0) 0 nil])
([nil nil ((#("\\textbf{Michael Guerzhoy's Signature :D}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 7 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t) 8 24 (face (font-latex-bold-face) fontified t) 24 25 (face (font-latex-bold-face) fontified t) 25 39 (face (font-latex-bold-face) fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 41 (fontified t)) . 3288) (undo-tree-id2816 . -11) (undo-tree-id2817 . -11) (undo-tree-id2818 . -11) (undo-tree-id2819 . -11) (undo-tree-id2820 . -40) (undo-tree-id2821 . -11) (undo-tree-id2822 . -11) (undo-tree-id2823 . -11) (undo-tree-id2824 . -11) (undo-tree-id2825 . -11) (undo-tree-id2826 . -11) (undo-tree-id2827 . -11) (undo-tree-id2828 . -11) (undo-tree-id2829 . -11) (undo-tree-id2830 . -11) (undo-tree-id2831 . -41) 3299 (t 26651 36506 494392 134000)) nil (26651 36524 660664 0) 0 nil])
([nil nil ((3395 . 3405) (3393 . 3395) (3377 . 3393) (3376 . 3378) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -3376) (3376 . 3377) (3369 . 3376) (3368 . 3369) (3365 . 3368) 3333) nil (26651 36524 660611 0) 0 nil])
([nil nil ((3349 . 3350) (#("1" 0 1 (face (font-lock-variable-name-face) fontified t)) . 3349) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (t 26651 36524 744508 563000)) nil (26651 36533 487751 0) 0 nil])
([nil nil ((#("0" 0 1 (face (font-lock-variable-name-face) fontified t)) . 3347) (t 26651 36533 572050 686000)) nil (26651 36549 836078 0) 0 nil])
([nil nil ((#("." 0 1 (face (font-lock-variable-name-face) fontified t)) . 3347) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1)) nil (26651 36549 836075 0) 0 nil])
([nil nil ((#("2" 0 1 (face (font-lock-variable-name-face) fontified t)) . 3347)) nil (26651 36549 836068 0) 0 nil])
([nil nil ((3341 . 3346) (#("dith" 0 4 (face (font-lock-variable-name-face) fontified t)) . -3341) (undo-tree-id2845 . -4) (undo-tree-id2846 . -4) 3345 (3341 . 3345) (#("scale" 0 5 (face (font-lock-variable-name-face) fontified t)) . 3341) (undo-tree-id2847 . -4)) nil (26651 36549 836063 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -3348) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (#("t" 0 1 (face (font-latex-sedate-face) fontified t)) . -3349) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) 3350 (3349 . 3350) (3348 . 3349)) nil (26651 36549 836046 0) 0 nil])
([nil nil ((3348 . 3357) (3347 . 3348)) nil (26651 38055 668934 0) 0 nil])
([nil nil ((15967 . 15968) (#("}" 0 1 (face (font-lock-function-name-face) fontified nil)) . -15967) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 15968) (15960 . 15968) (15959 . 15961) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -15959) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (15959 . 15960) (15956 . 15959) (15955 . 15956) (15952 . 15955) (15951 . 15952) (#("}" 0 1 (face (font-lock-function-name-face) fontified nil)) . -15951) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 15952) (15944 . 15952) (15943 . 15945) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -15943) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (15943 . 15944) (15938 . 15943) (15937 . 15938) (15936 . 15937) (t 26651 36549 917022 479000) 15936) nil (26651 38157 638200 0) 0 nil] [nil nil ((9929 . 9932) (9928 . 9929) (t 26651 36549 917022 479000) 9928) ((#("
" 0 1 (fontified t)) . 9928) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (#("nus" 0 3 (fontified t)) . 9929) (undo-tree-id2857 . -3) (undo-tree-id2858 . -3) (undo-tree-id2859 . -3) (undo-tree-id2860 . -3) (undo-tree-id2861 . -3) (undo-tree-id2862 . -3)) (26651 38055 668562 0) 0 nil])
([nil nil (15968) nil (26651 38157 638184 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -15953) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (#(" " 0 1 (fontified t)) . -15954) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) 15955) nil (26651 38157 638179 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 16012) (16012 . 16014) (#(" " 0 1 (fontified nil)) . -16012) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (16013 . 16014) (#("
" 0 1 (fontified t)) . 16013) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (#(" " 0 1 (fontified t)) . -16013) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) 16014 (16012 . 16014) (#("  " 0 2 (fontified nil)) . -15953) (16013 . 16014) (15992 . 16013) (#("t" 0 1 (fontified t)) . -15992) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) 15993 (15986 . 15993) (15983 . 15986) (15981 . 15983) (15964 . 15981) (#("i" 0 1 (fontified t)) . -15964) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (#("s" 0 1 (fontified t)) . -15965) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (#(" " 0 1 (fontified t)) . -15966) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (#("j" 0 1 (fontified t)) . -15967) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (#("u" 0 1 (fontified t)) . -15968) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) 15969 (15964 . 15969) (15956 . 15964) (15955 . 15956) (15952 . 15955) 15937) nil (26651 38157 638111 0) 0 nil])
([nil nil ((16012 . 16013)) nil (26651 38157 637968 0) 0 nil])
([nil nil ((16013 . 16018)) nil (26651 38157 637967 0) 0 nil])
([nil nil ((16018 . 16026)) nil (26651 38157 637966 0) 0 nil])
([nil nil ((16026 . 16033)) nil (26651 38157 637964 0) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -16024) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (#("Q" 0 1 (fontified t)) . -16025) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (#("t" 0 1 (fontified t)) . -16026) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (#("o" 0 1 (fontified t)) . -16027) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (#(" " 0 1 (fontified t)) . -16028) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (#("m" 0 1 (fontified t)) . -16029) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (#("o" 0 1 (fontified t)) . -16030) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (#("r" 0 1 (fontified t)) . -16031) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (#("e" 0 1 (fontified t)) . -16032) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) 16033) nil (26651 38157 637959 0) 0 nil])
([nil nil ((16024 . 16045)) nil (26651 38157 637916 0) 0 nil])
([nil nil ((16045 . 16065)) nil (26651 38157 637911 0) 0 nil])
([nil nil (15809) nil (26651 45574 392490 0) 0 nil])
([nil nil ((15793 . 15794) (#("
" 0 1 (face font-latex-verbatim-face fontified t)) . -15793) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -15794) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -15795) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -15796) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -15797) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -15798) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -15799) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -15800) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (#(" " 0 1 (face font-latex-verbatim-face fontified t)) . -15801) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) 15802 (t 26651 38157 717452 469000)) nil (26651 45574 392473 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16034) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (#("more" 0 4 (fontified t)) . 16034) (undo-tree-id3249 . -3) (undo-tree-id3250 . -4) (undo-tree-id3251 . -4)) nil (26651 45574 392072 0) 0 nil])
([nil nil ((16067 . 16079) (16046 . 16067) (#("store" 0 5 (fontified t)) . 16046) (undo-tree-id3153 . -4) (undo-tree-id3154 . -4) (undo-tree-id3155 . -4) (undo-tree-id3156 . -4) (undo-tree-id3157 . -4) (undo-tree-id3158 . -4) (undo-tree-id3159 . -4) (undo-tree-id3160 . -4) (undo-tree-id3161 . -4) (undo-tree-id3162 . -4) (undo-tree-id3163 . -4) (undo-tree-id3164 . -4) (undo-tree-id3165 . -4) (undo-tree-id3166 . -4) (undo-tree-id3167 . -4) (undo-tree-id3168 . -4) (undo-tree-id3169 . -4) (undo-tree-id3170 . -4) (undo-tree-id3171 . -4) (undo-tree-id3172 . -4) (undo-tree-id3173 . -4) (undo-tree-id3174 . -4) (undo-tree-id3175 . -4) (undo-tree-id3176 . -4) (undo-tree-id3177 . -4) (undo-tree-id3178 . -4) (undo-tree-id3179 . -4) (undo-tree-id3180 . -4) (undo-tree-id3181 . -4) (undo-tree-id3182 . -4) (undo-tree-id3183 . -4) (undo-tree-id3184 . -4) (undo-tree-id3185 . -4) (undo-tree-id3186 . -4) (undo-tree-id3187 . -4) (undo-tree-id3188 . -4) (undo-tree-id3189 . -4) (undo-tree-id3190 . -4) (undo-tree-id3191 . -4) (undo-tree-id3192 . -4) (undo-tree-id3193 . -4) (undo-tree-id3194 . -4) (undo-tree-id3195 . -4) (undo-tree-id3196 . -4) (undo-tree-id3197 . -4) (undo-tree-id3198 . -4) (undo-tree-id3199 . -4) (undo-tree-id3200 . -4) (undo-tree-id3201 . -4) (undo-tree-id3202 . -4) (undo-tree-id3203 . -4) (undo-tree-id3204 . -4) (undo-tree-id3205 . -4) (undo-tree-id3206 . -4) (undo-tree-id3207 . -4) (undo-tree-id3208 . -4) (undo-tree-id3209 . -4) (undo-tree-id3210 . -4) (undo-tree-id3211 . -4) (undo-tree-id3212 . -4) (undo-tree-id3213 . -4) (undo-tree-id3214 . -4) (undo-tree-id3215 . -4) (undo-tree-id3216 . -4) (undo-tree-id3217 . -4) (undo-tree-id3218 . -4) (undo-tree-id3219 . -4) (undo-tree-id3220 . -4) (undo-tree-id3221 . -4) (undo-tree-id3222 . -4) (undo-tree-id3223 . -4) (undo-tree-id3224 . -4) (undo-tree-id3225 . -4) (undo-tree-id3226 . -4) (undo-tree-id3227 . -4) (undo-tree-id3228 . -4) (undo-tree-id3229 . -4) (undo-tree-id3230 . -4) (undo-tree-id3231 . -4) (undo-tree-id3232 . -4) (undo-tree-id3233 . -4) (undo-tree-id3234 . -4) (undo-tree-id3235 . -4) (undo-tree-id3236 . -4) (undo-tree-id3237 . -4) (undo-tree-id3238 . -4) (undo-tree-id3239 . -4) (undo-tree-id3240 . -4) (undo-tree-id3241 . -4) (undo-tree-id3242 . -4) (undo-tree-id3243 . -5) (undo-tree-id3244 . -5)) nil (26651 45574 392052 0) 0 nil])
([nil nil ((16080 . 16083) 16079) nil (26651 45574 391892 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16081) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (#(" " 0 1 (fontified t)) . -16082) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) 16083) nil (26651 45574 391889 0) 0 nil])
([nil nil ((16081 . 16082)) nil (26651 45574 391881 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -16081) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) 16082) nil (26651 45574 391879 0) 0 nil])
([nil nil ((16081 . 16082)) nil (26651 45574 391874 0) 0 nil])
([nil nil ((16082 . 16103)) nil (26651 45574 391872 0) 0 nil])
([nil nil ((16103 . 16112)) nil (26651 45574 391871 0) 0 nil])
([nil nil ((#("search" 0 6 (fontified t)) . -16106) (undo-tree-id3114 . -6) (undo-tree-id3115 . -6) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -2) (undo-tree-id3121 . -2) (undo-tree-id3122 . -2) (undo-tree-id3123 . -2) (undo-tree-id3124 . -3) (undo-tree-id3125 . -3) (undo-tree-id3126 . -3) (undo-tree-id3127 . -3) (undo-tree-id3128 . -4) (undo-tree-id3129 . -4) (undo-tree-id3130 . -4) (undo-tree-id3131 . -4) (undo-tree-id3132 . -5) (undo-tree-id3133 . -5) (undo-tree-id3134 . -5) (undo-tree-id3135 . -5) (undo-tree-id3136 . -6) (undo-tree-id3137 . -6) (undo-tree-id3138 . -6) (undo-tree-id3139 . -6) (undo-tree-id3140 . -6) (undo-tree-id3141 . -6) (undo-tree-id3142 . -6) (undo-tree-id3143 . -6) (undo-tree-id3144 . -6) (undo-tree-id3145 . -6) (undo-tree-id3146 . -6) 16112) nil (26651 45574 391866 0) 0 nil])
([nil nil ((#("to " 0 3 (fontified t)) . -16103) (undo-tree-id3065 . -3) (undo-tree-id3066 . -3) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -2) (undo-tree-id3072 . -2) (undo-tree-id3073 . -2) (undo-tree-id3074 . -2) (undo-tree-id3075 . -3) (undo-tree-id3076 . -3) (undo-tree-id3077 . -3) (undo-tree-id3078 . -3) (undo-tree-id3079 . -3) (undo-tree-id3080 . -3) (undo-tree-id3081 . -3) (undo-tree-id3082 . -3) (undo-tree-id3083 . -3) (undo-tree-id3084 . -3) (undo-tree-id3085 . -3) (undo-tree-id3086 . -3) (undo-tree-id3087 . -3) (undo-tree-id3088 . -3) (undo-tree-id3089 . -3) (undo-tree-id3090 . -3) (undo-tree-id3091 . -3) (undo-tree-id3092 . -3) (undo-tree-id3093 . -3) (undo-tree-id3094 . -3) (undo-tree-id3095 . -3) (undo-tree-id3096 . -3) (undo-tree-id3097 . -3) (undo-tree-id3098 . -3) (undo-tree-id3099 . -3) (undo-tree-id3100 . -3) (undo-tree-id3101 . -3) (undo-tree-id3102 . -3) (undo-tree-id3103 . -3) (undo-tree-id3104 . -3) (undo-tree-id3105 . -3) (undo-tree-id3106 . -3) (undo-tree-id3107 . -3) (undo-tree-id3108 . -3) (undo-tree-id3109 . -3) (undo-tree-id3110 . -3) (undo-tree-id3111 . -3) (undo-tree-id3112 . -3) (undo-tree-id3113 . -3) 16106) nil (26651 45574 391809 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16102) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) 16103) nil (26651 45574 391721 0) 0 nil])
([nil nil ((16102 . 16103)) nil (26651 45574 391612 0) 0 nil])
([nil nil ((16121 . 16122) (16120 . 16121) (16117 . 16120) (16116 . 16118) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face font-latex-math-face) fontified nil)) . -16116) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (16116 . 16117) (16114 . 16115) (16113 . 16115) (#("{" 0 1 (face (font-latex-math-face font-latex-sedate-face) fontified nil)) . -16113) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (16113 . 16114) (16106 . 16113) (16105 . 16106) (#("$" 0 1 (fontified nil)) . 16106) (16104 . 16106) (#("$" 0 1 (fontified nil)) . -16104) (undo-tree-id3470 . -1) (16104 . 16106) (#("$" 0 1 (fontified nil)) . -16104) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (16104 . 16105) (#("\\" 0 1 (fontified t)) . -16104) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) 16105 (#("mathcal" 0 7 (face (font-latex-sedate-face) fontified t)) . -16105) (undo-tree-id3493 . -7) (undo-tree-id3494 . -7) (undo-tree-id3495 . -4) (undo-tree-id3496 . -5) (undo-tree-id3497 . -5) (undo-tree-id3498 . -5) (undo-tree-id3499 . -5) (undo-tree-id3500 . -6) (undo-tree-id3501 . -7) (undo-tree-id3502 . -7) (undo-tree-id3503 . -7) (undo-tree-id3504 . -7) (undo-tree-id3505 . -7) (undo-tree-id3506 . -7) (undo-tree-id3507 . -7) (undo-tree-id3508 . -7) 16112 (16105 . 16112) (16104 . 16105) (#("O" 0 1 (fontified t)) . -16104) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) 16105 (#("(" 0 1 (fontified nil)) . -16105) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (#(")" 0 1 (fontified t)) . 16106) (16105 . 16107) (#("(" 0 1 (fontified nil)) . -16105) (16105 . 16106) (16103 . 16105) (t 26651 45574 479409 188000)) nil (26651 45697 305257 0) 0 nil])
([nil nil ((16131 . 16141) (16126 . 16131) (16125 . 16126) (#(" " 0 1 (fontified t)) . -16125) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (#(" " 0 1 (fontified t)) . -16126) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (#("\\" 0 1 (fontified t)) . -16127) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) 16128 (16127 . 16128) (16124 . 16127)) nil (26651 45697 305166 0) 0 nil])
([nil nil ((16102 . 16113)) nil (26651 45697 305144 0) 0 nil])
([nil nil ((16152 . 16158)) nil (26651 45697 305143 0) 0 nil])
([nil nil ((16158 . 16179)) nil (26651 45697 305141 0) 0 nil])
([nil nil ((16179 . 16180)) nil (26651 45697 305136 0) 0 nil])
([nil nil ((16135 . 16137) (t 26651 45697 390743 12000)) nil (26651 45723 825493 0) 0 nil])
([nil nil ((16158 . 16172) (#("teh " 0 4 (fontified t)) . -16158) (undo-tree-id4935 . -4) (undo-tree-id4936 . -4) 16162 (#("worst" 0 5 (fontified t)) . -16162) (undo-tree-id4937 . -5) (undo-tree-id4938 . -5) 16167 (16160 . 16167) (16155 . 16160) (16145 . 16147) (#(" " 0 1 (fontified nil)) . 16145) (16144 . 16145) (16137 . 16153) (#("This " 0 5 (fontified t)) . -16137) (undo-tree-id4939 . -5) (undo-tree-id4940 . -5) 16142 (#("comes " 0 6 (fontified t)) . -16142) (undo-tree-id4941 . -6) (undo-tree-id4942 . -6) 16148 (16140 . 16148) (16137 . 16140) (t 26651 45723 910022 190000)) nil (26651 45775 550060 0) 0 nil])
([nil nil ((16145 . 16147) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16145) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 16146) (16145 . 16146) (16144 . 16146) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -16144) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (16144 . 16145) (16136 . 16144) (16135 . 16136) (#("." 0 1 (fontified t)) . -16135) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (#("\\" 0 1 (fontified t)) . -16136) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (#("f" 0 1 (face (font-latex-sedate-face) fontified t)) . -16137) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (#("o" 0 1 (face (font-latex-sedate-face) fontified t)) . -16138) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (#("o" 0 1 (face (font-latex-sedate-face) fontified t)) . -16139) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (#("t" 0 1 (face (font-latex-sedate-face) fontified t)) . -16140) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (#("n" 0 1 (face (font-latex-sedate-face) fontified t)) . -16141) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (#("o" 0 1 (face (font-latex-sedate-face) fontified t)) . -16142) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (#("t" 0 1 (face (font-latex-sedate-face) fontified t)) . -16143) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (#("e" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t)) . -16144) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) 16145 (16137 . 16145) (16136 . 16137)) nil (26651 45775 550010 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 16147) (16145 . 16147) (#("$" 0 1 (fontified nil)) . -16145) (undo-tree-id4505 . -1) (16145 . 16147) (#("$" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16145) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (16145 . 16146)) nil (26651 45775 549337 0) 0 nil])
([nil nil ((16146 . 16148)) nil (26651 45775 549329 0) 0 nil])
([nil nil ((16148 . 16149)) nil (26651 45775 549327 0) 0 nil])
([nil nil ((16158 . 16175) (16151 . 16155) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 16151) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (16150 . 16151) (16150 . 16154)) nil (26651 45775 549325 0) 0 nil])
([nil nil ((16175 . 16188)) nil (26651 45775 549316 0) 0 nil])
([nil nil ((#("the " 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16184) (undo-tree-id4479 . -4) (undo-tree-id4480 . -4) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -2) (undo-tree-id4486 . -2) (undo-tree-id4487 . -2) (undo-tree-id4488 . -2) (undo-tree-id4489 . -3) (undo-tree-id4490 . -3) (undo-tree-id4491 . -3) (undo-tree-id4492 . -3) (undo-tree-id4493 . -4) (undo-tree-id4494 . -4) (undo-tree-id4495 . -4) (undo-tree-id4496 . -4) (undo-tree-id4497 . -4) (undo-tree-id4498 . -4) (undo-tree-id4499 . -4) (undo-tree-id4500 . -4) 16188) nil (26651 45775 549313 0) 0 nil])
([nil nil ((#("or " 0 3 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16181) (undo-tree-id4438 . -3) (undo-tree-id4439 . -3) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -2) (undo-tree-id4445 . -2) (undo-tree-id4446 . -2) (undo-tree-id4447 . -2) (undo-tree-id4448 . -2) (undo-tree-id4449 . -2) (undo-tree-id4450 . -2) (undo-tree-id4451 . -3) (undo-tree-id4452 . -3) (undo-tree-id4453 . -3) (undo-tree-id4454 . -3) (undo-tree-id4455 . -3) (undo-tree-id4456 . -3) (undo-tree-id4457 . -3) (undo-tree-id4458 . -3) (undo-tree-id4459 . -3) (undo-tree-id4460 . -3) (undo-tree-id4461 . -3) (undo-tree-id4462 . -3) (undo-tree-id4463 . -3) (undo-tree-id4464 . -3) (undo-tree-id4465 . -3) (undo-tree-id4466 . -3) (undo-tree-id4467 . -3) (undo-tree-id4468 . -3) (undo-tree-id4469 . -3) (undo-tree-id4470 . -3) (undo-tree-id4471 . -3) (undo-tree-id4472 . -3) (undo-tree-id4473 . -3) (undo-tree-id4474 . -3) (undo-tree-id4475 . -3) (undo-tree-id4476 . -3) (undo-tree-id4477 . -3) (undo-tree-id4478 . -3) 16184) nil (26651 45775 549274 0) 0 nil])
([nil nil ((#("graph, " 0 7 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16174) (undo-tree-id4365 . -7) (undo-tree-id4366 . -7) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -2) (undo-tree-id4372 . -2) (undo-tree-id4373 . -2) (undo-tree-id4374 . -2) (undo-tree-id4375 . -3) (undo-tree-id4376 . -3) (undo-tree-id4377 . -3) (undo-tree-id4378 . -3) (undo-tree-id4379 . -4) (undo-tree-id4380 . -4) (undo-tree-id4381 . -4) (undo-tree-id4382 . -4) (undo-tree-id4383 . -5) (undo-tree-id4384 . -5) (undo-tree-id4385 . -5) (undo-tree-id4386 . -5) (undo-tree-id4387 . -6) (undo-tree-id4388 . -6) (undo-tree-id4389 . -6) (undo-tree-id4390 . -6) (undo-tree-id4391 . -7) (undo-tree-id4392 . -7) (undo-tree-id4393 . -7) (undo-tree-id4394 . -7) (undo-tree-id4395 . -7) (undo-tree-id4396 . -7) (undo-tree-id4397 . -7) (undo-tree-id4398 . -7) (undo-tree-id4399 . -7) (undo-tree-id4400 . -7) (undo-tree-id4401 . -7) (undo-tree-id4402 . -7) (undo-tree-id4403 . -7) (undo-tree-id4404 . -7) (undo-tree-id4405 . -7) (undo-tree-id4406 . -7) (undo-tree-id4407 . -7) (undo-tree-id4408 . -7) (undo-tree-id4409 . -7) (undo-tree-id4410 . -7) (undo-tree-id4411 . -7) (undo-tree-id4412 . -7) (undo-tree-id4413 . -7) (undo-tree-id4414 . -7) (undo-tree-id4415 . -7) (undo-tree-id4416 . -7) (undo-tree-id4417 . -7) (undo-tree-id4418 . -7) (undo-tree-id4419 . -7) (undo-tree-id4420 . -7) (undo-tree-id4421 . -7) (undo-tree-id4422 . -7) (undo-tree-id4423 . -7) (undo-tree-id4424 . -7) (undo-tree-id4425 . -7) (undo-tree-id4426 . -7) (undo-tree-id4427 . -7) (undo-tree-id4428 . -7) (undo-tree-id4429 . -7) (undo-tree-id4430 . -7) (undo-tree-id4431 . -7) (undo-tree-id4432 . -7) (undo-tree-id4433 . -7) (undo-tree-id4434 . -7) (undo-tree-id4435 . -7) (undo-tree-id4436 . -7) (undo-tree-id4437 . -7) 16181) nil (26651 45775 549204 0) 0 nil])
([nil nil ((#("the " 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16170) (undo-tree-id4272 . -4) (undo-tree-id4273 . -4) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -2) (undo-tree-id4279 . -2) (undo-tree-id4280 . -2) (undo-tree-id4281 . -2) (undo-tree-id4282 . -3) (undo-tree-id4283 . -3) (undo-tree-id4284 . -3) (undo-tree-id4285 . -3) (undo-tree-id4286 . -4) (undo-tree-id4287 . -4) (undo-tree-id4288 . -4) (undo-tree-id4289 . -4) (undo-tree-id4290 . -4) (undo-tree-id4291 . -4) (undo-tree-id4292 . -4) (undo-tree-id4293 . -4) (undo-tree-id4294 . -4) (undo-tree-id4295 . -4) (undo-tree-id4296 . -4) (undo-tree-id4297 . -4) (undo-tree-id4298 . -4) (undo-tree-id4299 . -4) (undo-tree-id4300 . -4) (undo-tree-id4301 . -4) (undo-tree-id4302 . -4) (undo-tree-id4303 . -4) (undo-tree-id4304 . -4) (undo-tree-id4305 . -4) (undo-tree-id4306 . -4) (undo-tree-id4307 . -4) (undo-tree-id4308 . -4) (undo-tree-id4309 . -4) (undo-tree-id4310 . -4) (undo-tree-id4311 . -4) (undo-tree-id4312 . -4) (undo-tree-id4313 . -4) (undo-tree-id4314 . -4) (undo-tree-id4315 . -4) (undo-tree-id4316 . -4) (undo-tree-id4317 . -4) (undo-tree-id4318 . -4) (undo-tree-id4319 . -4) (undo-tree-id4320 . -4) (undo-tree-id4321 . -4) (undo-tree-id4322 . -4) (undo-tree-id4323 . -4) (undo-tree-id4324 . -4) (undo-tree-id4325 . -4) (undo-tree-id4326 . -4) (undo-tree-id4327 . -4) (undo-tree-id4328 . -4) (undo-tree-id4329 . -4) (undo-tree-id4330 . -4) (undo-tree-id4331 . -4) (undo-tree-id4332 . -4) (undo-tree-id4333 . -4) (undo-tree-id4334 . -4) (undo-tree-id4335 . -4) (undo-tree-id4336 . -4) (undo-tree-id4337 . -4) (undo-tree-id4338 . -4) (undo-tree-id4339 . -4) (undo-tree-id4340 . -4) (undo-tree-id4341 . -4) (undo-tree-id4342 . -4) (undo-tree-id4343 . -4) (undo-tree-id4344 . -4) (undo-tree-id4345 . -4) (undo-tree-id4346 . -4) (undo-tree-id4347 . -4) (undo-tree-id4348 . -4) (undo-tree-id4349 . -4) (undo-tree-id4350 . -4) (undo-tree-id4351 . -4) (undo-tree-id4352 . -4) (undo-tree-id4353 . -4) (undo-tree-id4354 . -4) (undo-tree-id4355 . -4) (undo-tree-id4356 . -4) (undo-tree-id4357 . -4) (undo-tree-id4358 . -4) (undo-tree-id4359 . -4) (undo-tree-id4360 . -4) (undo-tree-id4361 . -4) (undo-tree-id4362 . -4) (undo-tree-id4363 . -4) (undo-tree-id4364 . -4) 16174) nil (26651 45775 549003 0) 0 nil])
([nil nil ((#("of " 0 3 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16167) (undo-tree-id4163 . -3) (undo-tree-id4164 . -3) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -2) (undo-tree-id4170 . -2) (undo-tree-id4171 . -2) (undo-tree-id4172 . -2) (undo-tree-id4173 . -3) (undo-tree-id4174 . -3) (undo-tree-id4175 . -3) (undo-tree-id4176 . -3) (undo-tree-id4177 . -3) (undo-tree-id4178 . -3) (undo-tree-id4179 . -3) (undo-tree-id4180 . -3) (undo-tree-id4181 . -3) (undo-tree-id4182 . -3) (undo-tree-id4183 . -3) (undo-tree-id4184 . -3) (undo-tree-id4185 . -3) (undo-tree-id4186 . -3) (undo-tree-id4187 . -3) (undo-tree-id4188 . -3) (undo-tree-id4189 . -3) (undo-tree-id4190 . -3) (undo-tree-id4191 . -3) (undo-tree-id4192 . -3) (undo-tree-id4193 . -3) (undo-tree-id4194 . -3) (undo-tree-id4195 . -3) (undo-tree-id4196 . -3) (undo-tree-id4197 . -3) (undo-tree-id4198 . -3) (undo-tree-id4199 . -3) (undo-tree-id4200 . -3) (undo-tree-id4201 . -3) (undo-tree-id4202 . -3) (undo-tree-id4203 . -3) (undo-tree-id4204 . -3) (undo-tree-id4205 . -3) (undo-tree-id4206 . -3) (undo-tree-id4207 . -3) (undo-tree-id4208 . -3) (undo-tree-id4209 . -3) (undo-tree-id4210 . -3) (undo-tree-id4211 . -3) (undo-tree-id4212 . -3) (undo-tree-id4213 . -3) (undo-tree-id4214 . -3) (undo-tree-id4215 . -3) (undo-tree-id4216 . -3) (undo-tree-id4217 . -3) (undo-tree-id4218 . -3) (undo-tree-id4219 . -3) (undo-tree-id4220 . -3) (undo-tree-id4221 . -3) (undo-tree-id4222 . -3) (undo-tree-id4223 . -3) (undo-tree-id4224 . -3) (undo-tree-id4225 . -3) (undo-tree-id4226 . -3) (undo-tree-id4227 . -3) (undo-tree-id4228 . -3) (undo-tree-id4229 . -3) (undo-tree-id4230 . -3) (undo-tree-id4231 . -3) (undo-tree-id4232 . -3) (undo-tree-id4233 . -3) (undo-tree-id4234 . -3) (undo-tree-id4235 . -3) (undo-tree-id4236 . -3) (undo-tree-id4237 . -3) (undo-tree-id4238 . -3) (undo-tree-id4239 . -3) (undo-tree-id4240 . -3) (undo-tree-id4241 . -3) (undo-tree-id4242 . -3) (undo-tree-id4243 . -3) (undo-tree-id4244 . -3) (undo-tree-id4245 . -3) (undo-tree-id4246 . -3) (undo-tree-id4247 . -3) (undo-tree-id4248 . -3) (undo-tree-id4249 . -3) (undo-tree-id4250 . -3) (undo-tree-id4251 . -3) (undo-tree-id4252 . -3) (undo-tree-id4253 . -3) (undo-tree-id4254 . -3) (undo-tree-id4255 . -3) (undo-tree-id4256 . -3) (undo-tree-id4257 . -3) (undo-tree-id4258 . -3) (undo-tree-id4259 . -3) (undo-tree-id4260 . -3) (undo-tree-id4261 . -3) (undo-tree-id4262 . -3) (undo-tree-id4263 . -3) (undo-tree-id4264 . -3) (undo-tree-id4265 . -3) (undo-tree-id4266 . -3) (undo-tree-id4267 . -3) (undo-tree-id4268 . -3) (undo-tree-id4269 . -3) (undo-tree-id4270 . -3) (undo-tree-id4271 . -3) 16170) nil (26651 45775 548849 0) 0 nil])
([nil nil ((#("z" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16164) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (#("e" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16165) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16166) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) 16167) nil (26651 45775 548655 0) 0 nil])
([nil nil ((#("si" 0 2 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16162) (undo-tree-id3654 . -2) (undo-tree-id3655 . -2) (undo-tree-id3656 . -2) (undo-tree-id3657 . -2) (undo-tree-id3658 . -2) (undo-tree-id3659 . -2) (undo-tree-id3660 . -2) (undo-tree-id3661 . -2) (undo-tree-id3662 . -2) (undo-tree-id3663 . -2) (undo-tree-id3664 . -2) (undo-tree-id3665 . -2) (undo-tree-id3666 . -2) (undo-tree-id3667 . -2) (undo-tree-id3668 . -2) (undo-tree-id3669 . -2) (undo-tree-id3670 . -2) (undo-tree-id3671 . -2) (undo-tree-id3672 . -2) (undo-tree-id3673 . -2) (undo-tree-id3674 . -2) (undo-tree-id3675 . -2) (undo-tree-id3676 . -2) (undo-tree-id3677 . -2) (undo-tree-id3678 . -2) (undo-tree-id3679 . -2) (undo-tree-id3680 . -2) (undo-tree-id3681 . -2) (undo-tree-id3682 . -2) (undo-tree-id3683 . -2) (undo-tree-id3684 . -2) (undo-tree-id3685 . -2) (undo-tree-id3686 . -2) (undo-tree-id3687 . -2) (undo-tree-id3688 . -2) (undo-tree-id3689 . -2) (undo-tree-id3690 . -2) (undo-tree-id3691 . -2) (undo-tree-id3692 . -2) (undo-tree-id3693 . -2) (undo-tree-id3694 . -2) (undo-tree-id3695 . -2) (undo-tree-id3696 . -2) (undo-tree-id3697 . -2) (undo-tree-id3698 . -2) (undo-tree-id3699 . -2) (undo-tree-id3700 . -2) (undo-tree-id3701 . -2) (undo-tree-id3702 . -2) (undo-tree-id3703 . -2) (undo-tree-id3704 . -2) (undo-tree-id3705 . -2) (undo-tree-id3706 . -2) (undo-tree-id3707 . -2) (undo-tree-id3708 . -2) (undo-tree-id3709 . -2) (undo-tree-id3710 . -2) (undo-tree-id3711 . -2) (undo-tree-id3712 . -2) (undo-tree-id3713 . -2) (undo-tree-id3714 . -2) (undo-tree-id3715 . -2) (undo-tree-id3716 . -2) (undo-tree-id3717 . -2) (undo-tree-id3718 . -2) (undo-tree-id3719 . -2) (undo-tree-id3720 . -2) (undo-tree-id3721 . -2) (undo-tree-id3722 . -2) (undo-tree-id3723 . -2) (undo-tree-id3724 . -2) (undo-tree-id3725 . -2) (undo-tree-id3726 . -2) (undo-tree-id3727 . -2) (undo-tree-id3728 . -2) (undo-tree-id3729 . -2) (undo-tree-id3730 . -2) (undo-tree-id3731 . -2) (undo-tree-id3732 . -2) (undo-tree-id3733 . -2) (undo-tree-id3734 . -2) (undo-tree-id3735 . -2) (undo-tree-id3736 . -2) (undo-tree-id3737 . -2) (undo-tree-id3738 . -2) (undo-tree-id3739 . -2) (undo-tree-id3740 . -2) (undo-tree-id3741 . -2) (undo-tree-id3742 . -2) (undo-tree-id3743 . -2) (undo-tree-id3744 . -2) (undo-tree-id3745 . -2) (undo-tree-id3746 . -2) (undo-tree-id3747 . -2) (undo-tree-id3748 . -2) (undo-tree-id3749 . -2) (undo-tree-id3750 . -2) (undo-tree-id3751 . -2) (undo-tree-id3752 . -2) (undo-tree-id3753 . -2) (undo-tree-id3754 . -2) (undo-tree-id3755 . -2) (undo-tree-id3756 . -2) (undo-tree-id3757 . -2) (undo-tree-id3758 . -2) (undo-tree-id3759 . -2) (undo-tree-id3760 . -2) (undo-tree-id3761 . -2) (undo-tree-id3762 . -2) (undo-tree-id3763 . -2) (undo-tree-id3764 . -2) (undo-tree-id3765 . -2) (undo-tree-id3766 . -2) (undo-tree-id3767 . -2) (undo-tree-id3768 . -2) (undo-tree-id3769 . -2) (undo-tree-id3770 . -2) (undo-tree-id3771 . -2) (undo-tree-id3772 . -2) (undo-tree-id3773 . -2) (undo-tree-id3774 . -2) (undo-tree-id3775 . -2) (undo-tree-id3776 . -2) (undo-tree-id3777 . -2) (undo-tree-id3778 . -2) (undo-tree-id3779 . -2) (undo-tree-id3780 . -2) (undo-tree-id3781 . -2) (undo-tree-id3782 . -2) (undo-tree-id3783 . -2) (undo-tree-id3784 . -2) (undo-tree-id3785 . -2) (undo-tree-id3786 . -2) (undo-tree-id3787 . -2) (undo-tree-id3788 . -2) (undo-tree-id3789 . -2) (undo-tree-id3790 . -2) 16164) nil (26651 45775 548063 0) 0 nil])
([nil nil ((#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -16161) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) 16162) nil (26651 45775 547835 0) 0 nil])
([nil nil ((16161 . 16182)) nil (26651 45775 547598 0) 0 nil])
([nil nil ((16182 . 16202)) nil (26651 50701 14570 0) 0 nil])
([nil nil ((18522 . 18526) (#("    " 0 4 (fontified nil)) . 18521) (undo-tree-id5018 . -4) (undo-tree-id5019 . -4) (undo-tree-id5020 . -4) (undo-tree-id5021 . -4) (undo-tree-id5022 . -4) (undo-tree-id5023 . -4) (undo-tree-id5024 . -4) (18525 . 18526) (18520 . 18525) (t 26651 45775 637415 372000) 18485) nil (26651 50709 724494 0) 0 nil] [nil nil ((18522 . 18526) (#("    " 0 4 (fontified nil)) . 18521) (undo-tree-id4943 . -4) (undo-tree-id4944 . -4) (undo-tree-id4945 . -4) (undo-tree-id4946 . -4) (undo-tree-id4947 . -4) (undo-tree-id4948 . -4) (undo-tree-id4949 . -4) (18525 . 18526) (18520 . 18525) (t 26651 45775 637415 372000) 18485) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 18520) (undo-tree-id4950 . -5) (undo-tree-id4951 . -5) (undo-tree-id4952 . -5) (undo-tree-id4953 . -5) (undo-tree-id4954 . -5) (#("
" 0 1 (fontified nil)) . 18525) (undo-tree-id4955 . -1) (18521 . 18525) (#("    " 0 4 (fontified t)) . 18522) (undo-tree-id4956 . -4)) (26651 50701 14106 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 18522) (undo-tree-id4978 . -4) (#("    " 0 4 (fontified t)) . 18521) (undo-tree-id4979 . -4) (undo-tree-id4980 . -4) (undo-tree-id4981 . -4) (undo-tree-id4982 . -4) (undo-tree-id4983 . -4) (undo-tree-id4984 . -4) (undo-tree-id4985 . -4) (undo-tree-id4986 . -4) (undo-tree-id4987 . -4) (undo-tree-id4988 . -4) (undo-tree-id4989 . -4) (undo-tree-id4990 . -4) (undo-tree-id4991 . -4) (undo-tree-id4992 . -4) (undo-tree-id4993 . -4) (undo-tree-id4994 . -4) (undo-tree-id4995 . -4) (undo-tree-id4996 . -4) (undo-tree-id4997 . -4) (undo-tree-id4998 . -4) (undo-tree-id4999 . -4) (undo-tree-id5000 . -4) (undo-tree-id5001 . -4) (undo-tree-id5002 . -4) (undo-tree-id5003 . -4) (undo-tree-id5004 . -4) (undo-tree-id5005 . -4) (undo-tree-id5006 . -4) (undo-tree-id5007 . -4) (undo-tree-id5008 . -4) (undo-tree-id5009 . -4) (undo-tree-id5010 . -4) (undo-tree-id5011 . -4) (undo-tree-id5012 . -4) (undo-tree-id5013 . -4) (undo-tree-id5014 . -4) (undo-tree-id5015 . -4) (undo-tree-id5016 . -4) (#(" " 0 1 (fontified t)) . 16079) (undo-tree-id5017 . 1) (18527 . 18531)) nil (26651 50709 724475 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 18625 . 18626) (nil fontified nil 18522 . 18626) (18522 . 18626)) nil (26651 50709 724408 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18521) (undo-tree-id4957 . 1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1)) nil (26651 50709 724402 0) 0 nil])
([nil nil ((18584 . 18585) (#("3" 0 1 (fontified t)) . 18584) (undo-tree-id5025 . -1) (t 26651 50709 815441 614000)) nil (26651 50745 245340 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 18584) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (t 26651 50745 334665 223000)) nil (26651 50753 60076 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 18584) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1)) nil (26651 50753 60069 0) 0 nil])
([nil nil ((18584 . 18586)) nil (26651 50753 60050 0) 0 nil])
([nil nil (18670) nil (26651 50779 117536 0) 0 nil])
([nil nil ((18645 . 18652) (t 26651 50753 149730 325000)) nil (26651 50779 117534 0) 0 nil])
([nil nil ((#("you " 0 4 (fontified t)) . -18648) (undo-tree-id5071 . -4) (undo-tree-id5072 . -4) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -2) (undo-tree-id5078 . -2) (undo-tree-id5079 . -2) (undo-tree-id5080 . -2) (undo-tree-id5081 . -3) (undo-tree-id5082 . -3) (undo-tree-id5083 . -3) (undo-tree-id5084 . -3) (undo-tree-id5085 . -4) (undo-tree-id5086 . -4) (undo-tree-id5087 . -4) (undo-tree-id5088 . -4) (undo-tree-id5089 . -4) (undo-tree-id5090 . -4) (undo-tree-id5091 . -4) (undo-tree-id5092 . -4) 18652) nil (26651 50779 117531 0) 0 nil])
([nil nil ((#("As " 0 3 (fontified t)) . -18645) (undo-tree-id5030 . -3) (undo-tree-id5031 . -3) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -2) (undo-tree-id5037 . -2) (undo-tree-id5038 . -2) (undo-tree-id5039 . -2) (undo-tree-id5040 . -3) (undo-tree-id5041 . -3) (undo-tree-id5042 . -3) (undo-tree-id5043 . -3) (undo-tree-id5044 . -3) (undo-tree-id5045 . -3) (undo-tree-id5046 . -3) (undo-tree-id5047 . -3) (undo-tree-id5048 . -3) (undo-tree-id5049 . -3) (undo-tree-id5050 . -3) (undo-tree-id5051 . -3) (undo-tree-id5052 . -3) (undo-tree-id5053 . -3) (undo-tree-id5054 . -3) (undo-tree-id5055 . -3) (undo-tree-id5056 . -3) (undo-tree-id5057 . -3) (undo-tree-id5058 . -3) (undo-tree-id5059 . -3) (undo-tree-id5060 . -3) (undo-tree-id5061 . -3) (undo-tree-id5062 . -3) (undo-tree-id5063 . -3) (undo-tree-id5064 . -3) (undo-tree-id5065 . -3) (undo-tree-id5066 . -3) (undo-tree-id5067 . -3) (undo-tree-id5068 . -3) (undo-tree-id5069 . -3) (undo-tree-id5070 . -3) 18648) nil (26651 50779 117489 0) 0 nil])
([nil nil ((18645 . 18656)) nil (26651 50779 117408 0) 0 nil])
([nil nil ((18656 . 18665) (t 26651 50779 206132 288000)) nil (26651 50816 828807 0) 0 nil])
([nil nil ((#("is " 0 3 (fontified t)) . -18662) (undo-tree-id5145 . -3) (undo-tree-id5146 . -3) 18665) nil (26651 50816 828804 0) 0 nil])
([nil nil ((18662 . 18679)) nil (26651 50816 828800 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 18681) (18679 . 18681) (#("$" 0 1 (fontified nil)) . -18679) (18679 . 18681) (#("$" 0 1 (fontified nil)) . -18679) (18679 . 18680)) nil (26651 50816 828798 0) 0 nil])
([nil nil ((18680 . 18681)) nil (26651 50816 828794 0) 0 nil])
([nil nil ((18681 . 18683)) nil (26651 50816 828793 0) 0 nil])
([nil nil ((18683 . 18684)) nil (26651 50816 828791 0) 0 nil])
([nil nil ((18684 . 18685)) nil (26651 50816 828789 0) 0 nil])
([nil nil ((18685 . 18686)) nil (26651 50816 828788 0) 0 nil])
([nil nil ((18686 . 18688)) nil (26651 50816 828787 0) 0 nil])
([nil nil ((18688 . 18689)) nil (26651 50816 828785 0) 0 nil])
([nil nil ((18689 . 18690)) nil (26651 50816 828783 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 18691) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (18690 . 18691) (#("$" 0 1 (fontified nil)) . -18690) (18690 . 18691) (#("$" 0 1 (face font-latex-math-face fontified t)) . -18690) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (18691 . 18693) (#("$" 0 1 (fontified nil)) . -18691) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (18690 . 18692) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -18690) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 18691) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (18690 . 18691)) nil (26651 50816 828779 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face fontified nil)) . -18690) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 18691) (undo-tree-id5124 . -1)) nil (26651 50816 828740 0) 0 nil])
([nil nil ((18690 . 18691)) nil (26651 50816 828709 0) 0 nil])
([nil nil ((#("." 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . -18690) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) 18691) nil (26651 50816 828706 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified nil)) . 18692) (18690 . 18692) (#("$" 0 1 (fontified nil)) . -18690) (undo-tree-id5096 . -1) (18690 . 18692) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . -18690) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (18690 . 18691)) nil (26651 50816 828692 0) 0 nil])
([nil nil ((#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 18691) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1)) nil (26651 50816 828683 0) 0 nil])
([nil nil ((18691 . 18702)) nil (26651 50816 828666 0) 0 nil])
([nil nil ((18787 . 18788) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 18787) (#("$" 0 1 (fontified nil)) . 18788) (18786 . 18788) (#("$" 0 1 (fontified nil)) . -18786) (18786 . 18788) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . -18786) (18786 . 18787) (#("\\" 0 1 (face (font-latex-math-face font-latex-sedate-face) font-lock-multiline t fontified t)) . -18786) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) 18787 (#("$" 0 1 (face font-latex-math-face fontified nil)) . -18787) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (#("$" 0 1 (face font-latex-math-face fontified t)) . 18788) (18787 . 18789) (#("$" 0 1 (face (font-latex-math-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -18787) (18787 . 18788) (18786 . 18787) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -18786) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 18787) (#("$" 0 1 (fontified nil)) . 18788) (18786 . 18788) (#("$" 0 1 (fontified nil)) . -18786) (18786 . 18788) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified nil)) . -18786) (18786 . 18787) (18784 . 18786) (#("V" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . -18784) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) 18785 (#("$" 0 1 (face font-latex-math-face fontified nil)) . -18785) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (#("$" 0 1 (face font-latex-math-face font-lock-multiline t fontified t)) . 18786) (#("$" 0 1 (fontified nil)) . 18786) (18785 . 18786) (#("$" 0 1 (fontified nil)) . -18785) (18785 . 18786) (#("$" 0 1 (face font-latex-math-face fontified t)) . -18785) (18786 . 18788) (#("$" 0 1 (fontified nil)) . -18786) (18785 . 18787) (#("$" 0 1 (face font-latex-math-face fontified nil)) . -18785) (#("$" 0 1 (face font-latex-math-face fontified nil)) . 18786) (18785 . 18786) (18784 . 18785) (#("$" 0 1 (fontified nil)) . 18785) (18783 . 18785) (#("$" 0 1 (fontified nil)) . -18783) (18783 . 18785) (#("$" 0 1 (fontified nil)) . -18783) (18783 . 18784) (18763 . 18783) (18762 . 18764) (#("(" 0 1 (fontified nil)) . -18762) (18762 . 18763) (18761 . 18762) (18740 . 18761) (#(" " 0 1 (fontified t)) . -18740) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) 18741 (18736 . 18741) (#("ondes " 0 6 (fontified t)) . -18736) (undo-tree-id5212 . -6) (undo-tree-id5213 . -6) 18742 (18725 . 18742) (#("cyc" 0 3 (fontified t)) . -18725) (undo-tree-id5214 . -3) (undo-tree-id5215 . -3) 18728 (18725 . 18728) (#(" " 0 1 (fontified nil)) . 18715) (18714 . 18715) (18716 . 18725) (#("g" 0 1 (fontified t)) . -18716) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (#("l" 0 1 (fontified t)) . -18717) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) 18718 (18702 . 18718) (#("bellman " 0 8 (fontified t)) . -18702) (undo-tree-id5220 . -8) (undo-tree-id5221 . -8) 18710 (#("ford " 0 5 (fontified t)) . -18710) (undo-tree-id5222 . -5) (undo-tree-id5223 . -5) 18715 (18709 . 18715) (18698 . 18709) (#("you " 0 4 (fontified t)) . -18698) (undo-tree-id5224 . -4) (undo-tree-id5225 . -4) 18702 (#("r" 0 1 (fontified t)) . -18702) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) 18703 (18693 . 18703) (#("Since " 0 6 (fontified t)) . -18693) (undo-tree-id5228 . -6) (undo-tree-id5229 . -6) 18699 (#("you " 0 4 (fontified t)) . -18699) (undo-tree-id5230 . -4) (undo-tree-id5231 . -4) 18703 (#("check " 0 6 (fontified t)) . -18703) (undo-tree-id5232 . -6) (undo-tree-id5233 . -6) 18709 (#("the
" 0 4 (fontified t)) . -18709) (undo-tree-id5234 . -4) (undo-tree-id5235 . -4) 18713 (#("neighbour " 0 10 (fontified t)) . -18713) (undo-tree-id5236 . -10) (undo-tree-id5237 . -10) 18723 (#(" " 0 1 (fontified nil)) . 18713) (18712 . 18713) (18711 . 18723) (18693 . 18711) (#("Since " 0 6 (fontified t)) . -18693) (undo-tree-id5238 . -6) (undo-tree-id5239 . -6) 18699 (#("you " 0 4 (fontified t)) . -18699) (undo-tree-id5240 . -4) (undo-tree-id5241 . -4) 18703 (#("check " 0 6 (fontified t)) . -18703) (undo-tree-id5242 . -6) (undo-tree-id5243 . -6) 18709 (#("then" 0 4 (fontified t)) . -18709) (undo-tree-id5244 . -4) (undo-tree-id5245 . -4) 18713 (18709 . 18713) (#("each " 0 5 (fontified t)) . -18709) (undo-tree-id5246 . -5) (undo-tree-id5247 . -5) 18714 (18693 . 18714) (#("As " 0 3 (fontified t)) . -18693) (undo-tree-id5248 . -3) (undo-tree-id5249 . -3) 18696 (#("you " 0 4 (fontified t)) . -18696) (undo-tree-id5250 . -4) (undo-tree-id5251 . -4) 18700 (#("it" 0 2 (fontified t)) . -18700) (undo-tree-id5252 . -2) (undo-tree-id5253 . -2) (undo-tree-id5254 . -2) 18702 (t 26651 50816 916845 677000)) nil (26651 50935 496494 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 18787)) nil (26651 50935 496359 0) 0 nil])
([nil nil ((18787 . 18788) (18786 . 18787)) nil (26651 50935 496357 0) 0 nil])
([nil nil ((18786 . 18787)) nil (26651 50935 496355 0) 0 nil])
([nil nil ((#("times" 0 5 (fontified t)) . -18792) (undo-tree-id5198 . -5) (undo-tree-id5199 . -5) 18797 (18792 . 18797) (#(" " 0 1 (fontified nil)) . 18783) (18782 . 18783) (18791 . 18792)) nil (26651 50935 496353 0) 0 nil])
([nil nil ((18790 . 18796)) nil (26651 50935 496347 0) 0 nil])
([nil nil ((18798 . 18799)) nil (26651 50935 496345 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 18797) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1)) nil (26651 50935 496343 0) 0 nil])
([nil nil ((18798 . 18799)) nil (26651 50935 496324 0) 0 nil])
([nil nil ((18968 . 18973) (#("a" 0 1 (fontified t)) . -18968) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (#("t" 0 1 (fontified t)) . -18969) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) 18970 (18963 . 18970) (18942 . 18963) (#("si " 0 3 (fontified t)) . -18942) (undo-tree-id5170 . -3) (undo-tree-id5171 . -3) 18945 (#("to " 0 3 (fontified t)) . -18945) (undo-tree-id5172 . -3) (undo-tree-id5173 . -3) 18948 (18942 . 18948) (18930 . 18942) (18927 . 18930) (#(" " 0 1 (fontified nil)) . 18918) (18917 . 18918) (18909 . 18927) (#("will " 0 5 (fontified t)) . -18909) (undo-tree-id5174 . -5) (undo-tree-id5175 . -5) 18914 (#("not " 0 4 (fontified t)) . -18914) (undo-tree-id5176 . -4) (undo-tree-id5177 . -4) 18918 (#("be
" 0 3 (fontified t)) . -18918) (undo-tree-id5178 . -3) (undo-tree-id5179 . -3) 18921 (#("taken " 0 6 (fontified t)) . -18921) (undo-tree-id5180 . -6) (undo-tree-id5181 . -6) 18927 (#("by " 0 3 (fontified t)) . -18927) (undo-tree-id5182 . -3) (undo-tree-id5183 . -3) 18930 (18927 . 18930) (#(" " 0 1 (fontified nil)) . 18921) (18920 . 18921) (18917 . 18927) (18906 . 18917) (18885 . 18906) (18864 . 18885) (#("is " 0 3 (fontified t)) . -18864) (undo-tree-id5184 . -3) (undo-tree-id5185 . -3) 18867 (#("posititive, " 0 12 (fontified t)) . -18867) (undo-tree-id5186 . -12) (undo-tree-id5187 . -12) 18879 (18867 . 18879) (18860 . 18867) (#(" " 0 1 (fontified nil)) . 18854) (18853 . 18854) (18846 . 18860)) nil (26651 50935 496315 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -18972) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) 18973) nil (26651 50935 496241 0) 0 nil])
([nil nil ((18991 . 18993) (#(" " 0 1 (fontified nil)) . 18982) (18981 . 18982) (18972 . 18991)) nil (26651 50935 496236 0) 0 nil])
([nil nil ((18993 . 19014)) nil (26651 50935 496233 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -19013) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) 19014) nil (26651 50935 496230 0) 0 nil])
([nil nil ((19013 . 19028)) nil (26651 50935 496210 0) 0 nil])
([nil nil ((#("THE PLAN
TONIGHT
- ECE catch up. MAT185 a couple hours too
- wake up early and work on this doc
- goal before Monday class: complete this document and starting writing neural network section
" 0 85 (fontified t) 85 96 (fontified t) 96 121 (fontified t) 121 138 (fontified t) 138 143 (fontified t) 143 177 (fontified t) 177 191 (fontified t)) . 19595) (undo-tree-id5447 . -142) (undo-tree-id5448 . -8) (undo-tree-id5449 . -142) (undo-tree-id5450 . -8) (undo-tree-id5451 . -190) (undo-tree-id5452 . -8) (undo-tree-id5453 . -8) (undo-tree-id5454 . -16) (undo-tree-id5455 . -16) (undo-tree-id5456 . -16) (undo-tree-id5457 . -16) (undo-tree-id5458 . -58) (undo-tree-id5459 . -58) (undo-tree-id5460 . -58) (undo-tree-id5461 . -58) (undo-tree-id5462 . -95) (undo-tree-id5463 . -95) (undo-tree-id5464 . -95) (undo-tree-id5465 . -95) (undo-tree-id5466 . -58) (undo-tree-id5467 . -58) (undo-tree-id5468 . -58) (undo-tree-id5469 . -58) (undo-tree-id5470 . -95) (undo-tree-id5471 . -95) (undo-tree-id5472 . -95) (undo-tree-id5473 . -95) (undo-tree-id5474 . -142) (undo-tree-id5475 . -142) (undo-tree-id5476 . -142) (undo-tree-id5477 . -142) (undo-tree-id5478 . -191) (undo-tree-id5479 . -191) (undo-tree-id5480 . -191) (undo-tree-id5481 . -191) (undo-tree-id5482 . -142) (undo-tree-id5483 . -142) (undo-tree-id5484 . -142) (undo-tree-id5485 . -142) (undo-tree-id5486 . -191) (undo-tree-id5487 . -191) (undo-tree-id5488 . -191) (undo-tree-id5489 . -191) (undo-tree-id5490 . -142) (undo-tree-id5491 . -142) (undo-tree-id5492 . -142) (undo-tree-id5493 . -142) (undo-tree-id5494 . -142) (undo-tree-id5495 . -142) (undo-tree-id5496 . -142) (undo-tree-id5497 . -142) (undo-tree-id5498 . -95) (undo-tree-id5499 . -95) (undo-tree-id5500 . -95) (undo-tree-id5501 . -95) (undo-tree-id5502 . -58) (undo-tree-id5503 . -58) (undo-tree-id5504 . -58) (undo-tree-id5505 . -58) (undo-tree-id5506 . -16) (undo-tree-id5507 . -16) (undo-tree-id5508 . -16) (undo-tree-id5509 . -16) (undo-tree-id5510 . -8) (undo-tree-id5511 . -8) (undo-tree-id5512 . -8) (undo-tree-id5513 . -8) (undo-tree-id5514 . -8) (undo-tree-id5515 . -191) (undo-tree-id5516 . -191) 19603 (t 26651 50935 578246 836000)) nil (26651 51098 444398 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19594) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1)) nil (26651 51098 444284 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19594) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1)) nil (26651 51098 444137 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -19562) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) 19563 (19560 . 19563) (#("}" 0 1 (face (font-latex-italic-face) fontified nil)) . -19560) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 19561) (19551 . 19561) (19550 . 19552) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -19550) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (19550 . 19551) (19544 . 19550) (19543 . 19544) (#("t" 0 1 (fontified t)) . -19543) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) 19544 (19536 . 19544) (#("y" 0 1 (fontified t)) . -19536) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) 19537 (19536 . 19537) (19535 . 19536) (19514 . 19535) (19502 . 19514) (#(" " 0 1 (fontified nil)) . 19499) (19498 . 19499) (19493 . 19502) (19472 . 19493) (#("of " 0 3 (fontified t)) . -19472) (undo-tree-id5344 . -3) (undo-tree-id5345 . -3) 19475 (#("choos" 0 5 (fontified t)) . -19475) (undo-tree-id5346 . -5) (undo-tree-id5347 . -5) (undo-tree-id5348 . -5) 19480 (19459 . 19480) (19457 . 19459) (#("s" 0 1 (fontified t)) . -19457) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) 19458 (19437 . 19458) (19430 . 19437) (#("Dijkstra's " 0 8 (fontified t) 8 9 (fontified t) 9 11 (fontified t)) . -19430) (undo-tree-id5351 . -11) (undo-tree-id5352 . -11) 19441 (#("th" 0 2 (fontified t)) . -19441) (undo-tree-id5353 . -2) (undo-tree-id5354 . -2) 19443 (19441 . 19443) (#("with " 0 5 (fontified t)) . -19441) (undo-tree-id5355 . -5) (undo-tree-id5356 . -5) 19446 (#("t" 0 1 (fontified t)) . -19446) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) 19447 (#("h" 0 1 (fontified t)) . -19447) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) 19448 (19446 . 19448) (#("an " 0 3 (fontified t)) . -19446) (undo-tree-id5361 . -3) (undo-tree-id5362 . -3) 19449 (#("heuristic " 0 10 (fontified t)) . -19449) (undo-tree-id5363 . -10) (undo-tree-id5364 . -10) 19459 (#("fu" 0 2 (fontified t)) . -19459) (undo-tree-id5365 . -2) (undo-tree-id5366 . -2) 19461 (19459 . 19461) (#("function. " 0 10 (fontified t)) . -19459) (undo-tree-id5367 . -10) (undo-tree-id5368 . -10) 19469 (#("For " 0 4 (fontified t)) . -19469) (undo-tree-id5369 . -4) (undo-tree-id5370 . -4) 19473 (#("instance, " 0 10 (fontified t)) . -19473) (undo-tree-id5371 . -10) (undo-tree-id5372 . -10) 19483 (#("suppose" 0 7 (fontified t)) . -19483) (undo-tree-id5373 . -7) (undo-tree-id5374 . -7) 19490 (19483 . 19490) (19482 . 19483) (19461 . 19482) (19440 . 19461) (19438 . 19440) (19430 . 19438) (19429 . 19430) 19407) nil (26651 51098 444121 0) 0 nil])
([nil nil ((19560 . 19569)) nil (26651 51098 444001 0) 0 nil])
([nil nil ((19561 . 19563) (#(" " 0 1 (face (font-latex-italic-face) fontified nil)) . 19561) (19560 . 19561) (19571 . 19573)) nil (26651 51098 443999 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -19572) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (#("." 0 1 (fontified t)) . -19573) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (#(" " 0 1 (fontified t)) . -19574) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) 19575) nil (26651 51098 443994 0) 0 nil])
([nil nil ((19572 . 19585)) nil (26651 51098 443967 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -19581) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (#("i" 0 1 (fontified t)) . -19582) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (#("r" 0 1 (fontified t)) . -19583) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (#("c" 0 1 (fontified t)) . -19584) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) 19585) nil (26651 51098 443965 0) 0 nil])
([nil nil ((19581 . 19584)) nil (26651 51098 443949 0) 0 nil])
([nil nil ((#("heusist" 0 7 (fontified t)) . -19577) (undo-tree-id5289 . -7) (undo-tree-id5290 . -7) 19584) nil (26651 51098 443947 0) 0 nil])
([nil nil ((19577 . 19580)) nil (26651 51098 443942 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -19579) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) 19580) nil (26651 51098 443940 0) 0 nil])
([nil nil ((19579 . 19581)) nil (26651 51098 443935 0) 0 nil])
([nil nil ((19581 . 19602)) nil (26651 51098 443934 0) 0 nil])
([nil nil ((19602 . 19623)) nil (26651 51098 443932 0) 0 nil])
([nil nil ((19623 . 19625)) nil (26651 51098 443931 0) 0 nil])
([nil nil ((#("def" 0 3 (fontified t)) . -19622) (undo-tree-id5285 . -3) (undo-tree-id5286 . -3) 19625) nil (26651 51098 443929 0) 0 nil])
([nil nil ((#("we " 0 3 (fontified t)) . -19619) (undo-tree-id5283 . -3) (undo-tree-id5284 . -3) 19622) nil (26651 51098 443924 0) 0 nil])
([nil nil ((#("arbritary " 0 10 (fontified t)) . -19609) (undo-tree-id5281 . -10) (undo-tree-id5282 . -10) 19619) nil (26651 51098 443919 0) 0 nil])
([nil nil ((#("something " 0 10 (fontified t)) . -19599) (undo-tree-id5279 . -10) (undo-tree-id5280 . -10) 19609) nil (26651 51098 443913 0) 0 nil])
([nil nil ((19599 . 19620)) nil (26651 51098 443908 0) 0 nil])
([nil nil ((19639 . 19641) (#(" " 0 1 (fontified nil)) . 19631) (19630 . 19631) (19620 . 19639)) nil (26651 51098 443907 0) 0 nil])
([nil nil ((19641 . 19654)) nil (26651 51098 443904 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -19653) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) 19654) nil (26651 51098 443903 0) 0 nil])
([nil nil ((19653 . 19662)) nil (26651 51098 443898 0) 0 nil])
([nil nil ((#("apporxima" 0 9 (fontified t)) . -19653) (undo-tree-id5275 . -9) (undo-tree-id5276 . -9) 19662) nil (26651 51098 443896 0) 0 nil])
([nil nil ((19653 . 19657)) nil (26651 51098 443891 0) 0 nil])
([nil nil ((19657 . 19678)) nil (26651 51098 443889 0) 0 nil])
([nil nil ((19678 . 19699)) nil (26651 51098 443888 0) 0 nil])
([nil nil ((19706 . 19720) (#(" " 0 1 (fontified nil)) . 19696) (19695 . 19696) (19699 . 19706)) nil (26651 51098 443886 0) 0 nil])
([nil nil ((19720 . 19725)) nil (26651 51098 443884 0) 0 nil])
([nil nil ((#("consider " 0 9 (fontified t)) . -19716) (undo-tree-id5273 . -9) (undo-tree-id5274 . -9) 19725) nil (26651 51098 443882 0) 0 nil])
([nil nil ((#("instance, " 0 10 (fontified t)) . -19706) (undo-tree-id5271 . -10) (undo-tree-id5272 . -10) 19716) nil (26651 51098 443877 0) 0 nil])
([nil nil ((#("For " 0 4 (fontified t)) . -19702) (undo-tree-id5269 . -4) (undo-tree-id5270 . -4) 19706) nil (26651 51098 443872 0) 0 nil])
([nil nil ((19702 . 19714)) nil (26651 51098 443867 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -19711) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (#("h" 0 1 (fontified t)) . -19712) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (#(" " 0 1 (fontified t)) . -19713) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) 19714) nil (26651 51098 443864 0) 0 nil])
([nil nil ((19711 . 19717)) nil (26651 51098 443853 0) 0 nil])
([nil nil ((#("neg" 0 3 (fontified t)) . -19714) (undo-tree-id5261 . -3) (undo-tree-id5262 . -3) 19717) nil (26651 51098 443851 0) 0 nil])
([nil nil ((19714 . 19725)) nil (26651 51098 443846 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -19724) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) 19725) nil (26651 51098 443844 0) 0 nil])
([nil nil ((19724 . 19725)) nil (26651 51098 443839 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -19724) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) 19725) nil (26651 51098 443837 0) 0 nil])
([nil nil ((19724 . 19745)) nil (26651 51098 443832 0) 0 nil])
([nil nil ((19745 . 19751)) nil (26651 51098 443831 0) 0 nil])
([nil nil ((19751 . 19760)) nil (26651 51098 443829 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -19759) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) 19760) nil (26651 51098 443827 0) 0 nil])
([nil nil ((19774 . 19780) (#(" " 0 1 (fontified nil)) . 19764) (19763 . 19764) (19759 . 19774)) nil (26651 51098 443815 0) 0 nil])
([nil nil ((19780 . 19801)) nil (26651 51098 443812 0) 0 nil])
([nil nil ((19801 . 19807)) nil (26651 51098 443811 0) 0 nil])
([nil nil ((19807 . 19813)) nil (26651 51098 443809 0) 0 nil])
([nil nil ((19813 . 19814)) nil (26651 51098 443808 0) 0 nil])
([nil nil ((19814 . 19833)) nil (26651 51098 443803 0) 0 nil])
([nil nil ((19836 . 19840) (#(" " 0 1 (fontified nil)) . 19822) (19821 . 19822) (19833 . 19836) (t 26651 51098 535610 746000)) nil (26651 51175 942512 0) 0 nil])
([nil nil ((19784 . 19785) (#(" " 0 1 (fontified nil)) . 19783) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (19784 . 19785)) nil (26651 51175 942507 0) 0 nil])
([nil nil ((20110 . 20123) (#(" " 0 1 (fontified nil)) . 20105) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (20104 . 20105) (20108 . 20110) (20104 . 20108) (#("y" 0 1 (fontified t)) . -20104) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) 20105 (20090 . 20105) (20069 . 20090) (#("A* " 0 3 (fontified t)) . -20069) (undo-tree-id5562 . -3) (undo-tree-id5563 . -3) 20072 (#("helps " 0 6 (fontified t)) . -20072) (undo-tree-id5564 . -6) (undo-tree-id5565 . -6) 20078 (#("you " 0 4 (fontified t)) . -20078) (undo-tree-id5566 . -4) (undo-tree-id5567 . -4) 20082 (20074 . 20082) (20072 . 20074) (20051 . 20072) (20042 . 20051) (#(" " 0 1 (fontified nil)) . 20035) (20034 . 20035) (20035 . 20042) (20014 . 20035) (19993 . 20014) (#("z" 0 1 (fontified t)) . -19993) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) 19994 (19988 . 19994) (19973 . 19988) (19969 . 19973) (#(" " 0 1 (fontified nil)) . 19965) (19964 . 19965) (19952 . 19969) (19931 . 19952) (19910 . 19931) (19904 . 19910) (#(" " 0 1 (fontified nil)) . 19894) (19893 . 19894) (19900 . 19904) (#("i" 0 1 (fontified t)) . -19900) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) 19901 (19892 . 19901) (19871 . 19892) (#("s" 0 1 (fontified t)) . -19871) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) 19872 (19864 . 19872) (#("W" 0 1 (fontified t)) . -19864) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) 19865 (19854 . 19865) (#("a " 0 2 (fontified t)) . -19854) (undo-tree-id5576 . -2) (undo-tree-id5577 . -2) 19856 (#("road" 0 4 (fontified t)) . -19856) (undo-tree-id5578 . -4) (undo-tree-id5579 . -4) 19860 (19841 . 19860)) nil (26651 51175 942480 0) 0 nil])
([nil nil ((#("- heuristic search
" 0 19 (fontified t)) . 20124) (undo-tree-id5527 . -18) (undo-tree-id5528 . -18) (undo-tree-id5529 . -18) (undo-tree-id5530 . -18) (undo-tree-id5531 . -18) (undo-tree-id5532 . -18) (undo-tree-id5533 . -18) (undo-tree-id5534 . -18) (undo-tree-id5535 . -18) (undo-tree-id5536 . -18) (undo-tree-id5537 . -18) (undo-tree-id5538 . -18) (undo-tree-id5539 . -18) (undo-tree-id5540 . -18) (undo-tree-id5541 . -18) (undo-tree-id5542 . -18) (undo-tree-id5543 . -18) (undo-tree-id5544 . -18) (undo-tree-id5545 . -18) (undo-tree-id5546 . -18) (undo-tree-id5547 . -18) (undo-tree-id5548 . -18) (undo-tree-id5549 . -19) (undo-tree-id5550 . -19) 20142) nil (26651 51175 942411 0) 0 nil])
([nil nil ((20123 . 20124)) nil (26651 51175 942370 0) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -20123) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) 20124) nil (26651 51175 942365 0) 0 nil])
([nil nil ((#("A* " 0 3 (fontified t)) . -20123) (undo-tree-id5624 . -3) (undo-tree-id5625 . -3) (undo-tree-id5626 . -3) (undo-tree-id5627 . -3) (undo-tree-id5628 . -3) (undo-tree-id5629 . -3) (undo-tree-id5630 . -3) (undo-tree-id5631 . -3) (undo-tree-id5632 . -3) (undo-tree-id5633 . -3) (undo-tree-id5634 . -3) (undo-tree-id5635 . -3) (undo-tree-id5636 . -3) (undo-tree-id5637 . -3) (undo-tree-id5638 . -3) (undo-tree-id5639 . -3) (undo-tree-id5640 . -3) (undo-tree-id5641 . -3) (undo-tree-id5642 . -3) (undo-tree-id5643 . -3) (undo-tree-id5644 . -3) (undo-tree-id5645 . -3) (undo-tree-id5646 . -3) (undo-tree-id5647 . -3) (undo-tree-id5648 . -3) (undo-tree-id5649 . -3) (undo-tree-id5650 . -3) (undo-tree-id5651 . -3) (undo-tree-id5652 . -3) (undo-tree-id5653 . -3) (undo-tree-id5654 . -3) (undo-tree-id5655 . -3) (undo-tree-id5656 . -3) (undo-tree-id5657 . -3) (undo-tree-id5658 . -3) (undo-tree-id5659 . -3) (undo-tree-id5660 . -3) (undo-tree-id5661 . -3) (undo-tree-id5662 . -3) (undo-tree-id5663 . -3) (undo-tree-id5664 . -3) (undo-tree-id5665 . -3) (undo-tree-id5666 . -3) (undo-tree-id5667 . -3) (undo-tree-id5668 . -3) (undo-tree-id5669 . -3) (undo-tree-id5670 . -3) (undo-tree-id5671 . -3) (undo-tree-id5672 . -3) (undo-tree-id5673 . -3) (undo-tree-id5674 . -3) (undo-tree-id5675 . -3) (undo-tree-id5676 . -3) (undo-tree-id5677 . -3) (undo-tree-id5678 . -3) (undo-tree-id5679 . -3) (undo-tree-id5680 . -3) (undo-tree-id5681 . -3) (undo-tree-id5682 . -3) (undo-tree-id5683 . -3) (undo-tree-id5684 . -3) (undo-tree-id5685 . -3) (undo-tree-id5686 . -3) (undo-tree-id5687 . -3) (undo-tree-id5688 . -3) (undo-tree-id5689 . -3) (undo-tree-id5690 . -3) (undo-tree-id5691 . -3) (undo-tree-id5692 . -3) (undo-tree-id5693 . -3) (undo-tree-id5694 . -3) (undo-tree-id5695 . -3) (undo-tree-id5696 . -3) (undo-tree-id5697 . -3) (undo-tree-id5698 . -3) (undo-tree-id5699 . -3) (undo-tree-id5700 . -3) (undo-tree-id5701 . -3) (undo-tree-id5702 . -3) (undo-tree-id5703 . -3) (undo-tree-id5704 . -3) (undo-tree-id5705 . -3) (undo-tree-id5706 . -3) (undo-tree-id5707 . -3) (undo-tree-id5708 . -3) (undo-tree-id5709 . -3) (undo-tree-id5710 . -3) (undo-tree-id5711 . -3) (undo-tree-id5712 . -3) (undo-tree-id5713 . -3) (undo-tree-id5714 . -3) (undo-tree-id5715 . -3) (undo-tree-id5716 . -3) (undo-tree-id5717 . -3) (undo-tree-id5718 . -3) (undo-tree-id5719 . -3) (undo-tree-id5720 . -3) (undo-tree-id5721 . -3) (undo-tree-id5722 . -3) (undo-tree-id5723 . -3) (undo-tree-id5724 . -3) (undo-tree-id5725 . -3) (undo-tree-id5726 . -3) (undo-tree-id5727 . -3) (undo-tree-id5728 . -3) (undo-tree-id5729 . -3) (undo-tree-id5730 . -3) (undo-tree-id5731 . -3) (undo-tree-id5732 . -3) (undo-tree-id5733 . -3) (undo-tree-id5734 . -3) (undo-tree-id5735 . -3) (undo-tree-id5736 . -3) (undo-tree-id5737 . -3) (undo-tree-id5738 . -3) (undo-tree-id5739 . -3) (undo-tree-id5740 . -3) (undo-tree-id5741 . -3) (undo-tree-id5742 . -3) (undo-tree-id5743 . -3) (undo-tree-id5744 . -3) (undo-tree-id5745 . -3) (undo-tree-id5746 . -3) (undo-tree-id5747 . -3) (undo-tree-id5748 . -3) (undo-tree-id5749 . -3) (undo-tree-id5750 . -3) (undo-tree-id5751 . -3) (undo-tree-id5752 . -3) (undo-tree-id5753 . -3) (undo-tree-id5754 . -3) (undo-tree-id5755 . -3) (undo-tree-id5756 . -3) (undo-tree-id5757 . -3) (undo-tree-id5758 . -3) (undo-tree-id5759 . -3) (undo-tree-id5760 . -3) (undo-tree-id5761 . -3) (undo-tree-id5762 . -3) (undo-tree-id5763 . -3) (undo-tree-id5764 . -3) (undo-tree-id5765 . -3) (undo-tree-id5766 . -3) (undo-tree-id5767 . -3) (undo-tree-id5768 . -3) (undo-tree-id5769 . -3) (undo-tree-id5770 . -3) (undo-tree-id5771 . -3) (undo-tree-id5772 . -3) (undo-tree-id5773 . -3) (undo-tree-id5774 . -3) (undo-tree-id5775 . -3) (undo-tree-id5776 . -3) (undo-tree-id5777 . -3) (undo-tree-id5778 . -3) (undo-tree-id5779 . -3) (undo-tree-id5780 . -3) (undo-tree-id5781 . -3) (undo-tree-id5782 . -3) (undo-tree-id5783 . -3) (undo-tree-id5784 . -3) (undo-tree-id5785 . -3) (undo-tree-id5786 . -3) (undo-tree-id5787 . -3) (undo-tree-id5788 . -3) (undo-tree-id5789 . -3) (undo-tree-id5790 . -3) (undo-tree-id5791 . -3) (undo-tree-id5792 . -3) (undo-tree-id5793 . -3) (undo-tree-id5794 . -3) (undo-tree-id5795 . -3) (undo-tree-id5796 . -3) (undo-tree-id5797 . -3) (undo-tree-id5798 . -3) (undo-tree-id5799 . -3) (undo-tree-id5800 . -3) (undo-tree-id5801 . -3) (undo-tree-id5802 . -3) (undo-tree-id5803 . -3) (undo-tree-id5804 . -3) (undo-tree-id5805 . -3) (undo-tree-id5806 . -3) (undo-tree-id5807 . -3) (undo-tree-id5808 . -3) (undo-tree-id5809 . -3) (undo-tree-id5810 . -3) (undo-tree-id5811 . -3) (undo-tree-id5812 . -3) (undo-tree-id5813 . -3) (undo-tree-id5814 . -3) (undo-tree-id5815 . -3) (undo-tree-id5816 . -3) (undo-tree-id5817 . -3) (undo-tree-id5818 . -3) (undo-tree-id5819 . -3) (undo-tree-id5820 . -3) (undo-tree-id5821 . -3) (undo-tree-id5822 . -3) (undo-tree-id5823 . -3) (undo-tree-id5824 . -3) (undo-tree-id5825 . -3) (undo-tree-id5826 . -3) (undo-tree-id5827 . -3) (undo-tree-id5828 . -3) (undo-tree-id5829 . -3) (undo-tree-id5830 . -3) (undo-tree-id5831 . -3) (undo-tree-id5832 . -3) (undo-tree-id5833 . -3) (undo-tree-id5834 . -3) (undo-tree-id5835 . -3) (undo-tree-id5836 . -3) (undo-tree-id5837 . -3) (undo-tree-id5838 . -3) (undo-tree-id5839 . -3) (undo-tree-id5840 . -3) (undo-tree-id5841 . -3) (undo-tree-id5842 . -3) (undo-tree-id5843 . -3) (undo-tree-id5844 . -3) (undo-tree-id5845 . -3) (undo-tree-id5846 . -3) (undo-tree-id5847 . -3) (undo-tree-id5848 . -3) (undo-tree-id5849 . -3) (undo-tree-id5850 . -3) (undo-tree-id5851 . -3) (undo-tree-id5852 . -3) (undo-tree-id5853 . -3) (undo-tree-id5854 . -3) (undo-tree-id5855 . -3) (undo-tree-id5856 . -3) (undo-tree-id5857 . -3) 20126 (#("search " 0 7 (fontified t)) . -20126) (undo-tree-id5858 . -7) (undo-tree-id5859 . -7) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -2) (undo-tree-id5863 . -3) (undo-tree-id5864 . -3) (undo-tree-id5865 . -3) (undo-tree-id5866 . -3) (undo-tree-id5867 . -4) (undo-tree-id5868 . -4) (undo-tree-id5869 . -4) (undo-tree-id5870 . -4) (undo-tree-id5871 . -5) (undo-tree-id5872 . -6) (undo-tree-id5873 . -6) (undo-tree-id5874 . -6) (undo-tree-id5875 . -6) (undo-tree-id5876 . -7) (undo-tree-id5877 . -7) (undo-tree-id5878 . -7) (undo-tree-id5879 . -7) (undo-tree-id5880 . -7) (undo-tree-id5881 . -7) (undo-tree-id5882 . -7) (undo-tree-id5883 . -7) (undo-tree-id5884 . -7) (undo-tree-id5885 . -7) (undo-tree-id5886 . -7) (undo-tree-id5887 . -7) (undo-tree-id5888 . -7) (undo-tree-id5889 . -7) (undo-tree-id5890 . -7) (undo-tree-id5891 . -7) (undo-tree-id5892 . -7) (undo-tree-id5893 . -7) (undo-tree-id5894 . -7) (undo-tree-id5895 . -7) (undo-tree-id5896 . -7) (undo-tree-id5897 . -7) (undo-tree-id5898 . -7) (undo-tree-id5899 . -7) (undo-tree-id5900 . -7) (undo-tree-id5901 . -7) (undo-tree-id5902 . -7) (undo-tree-id5903 . -7) (undo-tree-id5904 . -7) (undo-tree-id5905 . -7) (undo-tree-id5906 . -7) (undo-tree-id5907 . -7) (undo-tree-id5908 . -7) (undo-tree-id5909 . -7) (undo-tree-id5910 . -7) (undo-tree-id5911 . -7) (undo-tree-id5912 . -7) (undo-tree-id5913 . -7) (undo-tree-id5914 . -7) (undo-tree-id5915 . -7) (undo-tree-id5916 . -7) (undo-tree-id5917 . -7) (undo-tree-id5918 . -7) (undo-tree-id5919 . -7) (undo-tree-id5920 . -7) (undo-tree-id5921 . -7) (undo-tree-id5922 . -7) (undo-tree-id5923 . -7) (undo-tree-id5924 . -7) (undo-tree-id5925 . -7) (undo-tree-id5926 . -7) (undo-tree-id5927 . -7) (undo-tree-id5928 . -7) (undo-tree-id5929 . -7) (undo-tree-id5930 . -7) (undo-tree-id5931 . -7) (undo-tree-id5932 . -7) (undo-tree-id5933 . -7) (undo-tree-id5934 . -7) (undo-tree-id5935 . -7) (undo-tree-id5936 . -7) (undo-tree-id5937 . -7) (undo-tree-id5938 . -7) (undo-tree-id5939 . -7) (undo-tree-id5940 . -7) (undo-tree-id5941 . -7) (undo-tree-id5942 . -7) (undo-tree-id5943 . -7) (undo-tree-id5944 . -7) (undo-tree-id5945 . -7) (undo-tree-id5946 . -7) (undo-tree-id5947 . -7) (undo-tree-id5948 . -7) (undo-tree-id5949 . -7) (undo-tree-id5950 . -7) (undo-tree-id5951 . -7) (undo-tree-id5952 . -7) (undo-tree-id5953 . -7) (undo-tree-id5954 . -7) (undo-tree-id5955 . -7) (undo-tree-id5956 . -7) (undo-tree-id5957 . -7) (undo-tree-id5958 . -7) (undo-tree-id5959 . -7) (undo-tree-id5960 . -7) (undo-tree-id5961 . -7) (undo-tree-id5962 . -7) (undo-tree-id5963 . -7) (undo-tree-id5964 . -7) (undo-tree-id5965 . -7) (undo-tree-id5966 . -7) (undo-tree-id5967 . -7) (undo-tree-id5968 . -7) (undo-tree-id5969 . -7) (undo-tree-id5970 . -7) (undo-tree-id5971 . -7) (undo-tree-id5972 . -7) (undo-tree-id5973 . -7) (undo-tree-id5974 . -7) (undo-tree-id5975 . -7) (undo-tree-id5976 . -7) (undo-tree-id5977 . -7) (undo-tree-id5978 . -7) (undo-tree-id5979 . -7) (undo-tree-id5980 . -7) (undo-tree-id5981 . -7) (undo-tree-id5982 . -7) (undo-tree-id5983 . -7) (undo-tree-id5984 . -7) (undo-tree-id5985 . -7) (undo-tree-id5986 . -7) (undo-tree-id5987 . -7) (undo-tree-id5988 . -7) (undo-tree-id5989 . -7) (undo-tree-id5990 . -7) (undo-tree-id5991 . -7) (undo-tree-id5992 . -7) (undo-tree-id5993 . -7) (undo-tree-id5994 . -7) (undo-tree-id5995 . -7) (undo-tree-id5996 . -7) (undo-tree-id5997 . -7) (undo-tree-id5998 . -7) (undo-tree-id5999 . -7) (undo-tree-id6000 . -7) (undo-tree-id6001 . -7) (undo-tree-id6002 . -7) (undo-tree-id6003 . -7) (undo-tree-id6004 . -7) (undo-tree-id6005 . -7) (undo-tree-id6006 . -7) (undo-tree-id6007 . -7) (undo-tree-id6008 . -7) (undo-tree-id6009 . -7) (undo-tree-id6010 . -7) (undo-tree-id6011 . -7) (undo-tree-id6012 . -7) (undo-tree-id6013 . -7) (undo-tree-id6014 . -7) (undo-tree-id6015 . -7) (undo-tree-id6016 . -7) (undo-tree-id6017 . -7) (undo-tree-id6018 . -7) (undo-tree-id6019 . -7) (undo-tree-id6020 . -7) (undo-tree-id6021 . -7) (undo-tree-id6022 . -7) (undo-tree-id6023 . -7) (undo-tree-id6024 . -7) (undo-tree-id6025 . -7) (undo-tree-id6026 . -7) (undo-tree-id6027 . -7) (undo-tree-id6028 . -7) (undo-tree-id6029 . -7) (undo-tree-id6030 . -7) (undo-tree-id6031 . -7) (undo-tree-id6032 . -7) (undo-tree-id6033 . -7) (undo-tree-id6034 . -7) (undo-tree-id6035 . -7) (undo-tree-id6036 . -7) (undo-tree-id6037 . -7) (undo-tree-id6038 . -7) (undo-tree-id6039 . -7) (undo-tree-id6040 . -7) (undo-tree-id6041 . -7) (undo-tree-id6042 . -7) (undo-tree-id6043 . -7) (undo-tree-id6044 . -7) (undo-tree-id6045 . -7) (undo-tree-id6046 . -7) (undo-tree-id6047 . -7) (undo-tree-id6048 . -7) (undo-tree-id6049 . -7) (undo-tree-id6050 . -7) (undo-tree-id6051 . -7) (undo-tree-id6052 . -7) (undo-tree-id6053 . -7) (undo-tree-id6054 . -7) (undo-tree-id6055 . -7) (undo-tree-id6056 . -7) (undo-tree-id6057 . -7) (undo-tree-id6058 . -7) (undo-tree-id6059 . -7) (undo-tree-id6060 . -7) (undo-tree-id6061 . -7) (undo-tree-id6062 . -7) (undo-tree-id6063 . -7) (undo-tree-id6064 . -7) (undo-tree-id6065 . -7) (undo-tree-id6066 . -7) (undo-tree-id6067 . -7) (undo-tree-id6068 . -7) (undo-tree-id6069 . -7) (undo-tree-id6070 . -7) (undo-tree-id6071 . -7) (undo-tree-id6072 . -7) (undo-tree-id6073 . -7) (undo-tree-id6074 . -7) (undo-tree-id6075 . -7) (undo-tree-id6076 . -7) (undo-tree-id6077 . -7) (undo-tree-id6078 . -7) (undo-tree-id6079 . -7) (undo-tree-id6080 . -7) (undo-tree-id6081 . -7) (undo-tree-id6082 . -7) (undo-tree-id6083 . -7) (undo-tree-id6084 . -7) (undo-tree-id6085 . -7) (undo-tree-id6086 . -7) 20133 (#("may " 0 4 (fontified t)) . -20133) (undo-tree-id6087 . -4) (undo-tree-id6088 . -4) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -2) (undo-tree-id6094 . -2) (undo-tree-id6095 . -2) (undo-tree-id6096 . -2) (undo-tree-id6097 . -3) (undo-tree-id6098 . -3) (undo-tree-id6099 . -3) (undo-tree-id6100 . -3) (undo-tree-id6101 . -4) (undo-tree-id6102 . -4) (undo-tree-id6103 . -4) (undo-tree-id6104 . -4) (undo-tree-id6105 . -4) (undo-tree-id6106 . -4) (undo-tree-id6107 . -4) (undo-tree-id6108 . -4) (undo-tree-id6109 . -4) (undo-tree-id6110 . -4) (undo-tree-id6111 . -4) (undo-tree-id6112 . -4) (undo-tree-id6113 . -4) (undo-tree-id6114 . -4) (undo-tree-id6115 . -4) (undo-tree-id6116 . -4) (undo-tree-id6117 . -4) (undo-tree-id6118 . -4) (undo-tree-id6119 . -4) (undo-tree-id6120 . -4) (undo-tree-id6121 . -4) (undo-tree-id6122 . -4) (undo-tree-id6123 . -4) (undo-tree-id6124 . -4) (undo-tree-id6125 . -4) (undo-tree-id6126 . -4) (undo-tree-id6127 . -4) (undo-tree-id6128 . -4) (undo-tree-id6129 . -4) (undo-tree-id6130 . -4) (undo-tree-id6131 . -4) (undo-tree-id6132 . -4) (undo-tree-id6133 . -4) (undo-tree-id6134 . -4) (undo-tree-id6135 . -4) (undo-tree-id6136 . -4) (undo-tree-id6137 . -4) (undo-tree-id6138 . -4) (undo-tree-id6139 . -4) (undo-tree-id6140 . -4) (undo-tree-id6141 . -4) (undo-tree-id6142 . -4) (undo-tree-id6143 . -4) (undo-tree-id6144 . -4) (undo-tree-id6145 . -4) (undo-tree-id6146 . -4) (undo-tree-id6147 . -4) (undo-tree-id6148 . -4) (undo-tree-id6149 . -4) (undo-tree-id6150 . -4) (undo-tree-id6151 . -4) (undo-tree-id6152 . -4) (undo-tree-id6153 . -4) (undo-tree-id6154 . -4) (undo-tree-id6155 . -4) (undo-tree-id6156 . -4) (undo-tree-id6157 . -4) (undo-tree-id6158 . -4) (undo-tree-id6159 . -4) (undo-tree-id6160 . -4) (undo-tree-id6161 . -4) (undo-tree-id6162 . -4) (undo-tree-id6163 . -4) (undo-tree-id6164 . -4) (undo-tree-id6165 . -4) (undo-tree-id6166 . -4) (undo-tree-id6167 . -4) (undo-tree-id6168 . -4) (undo-tree-id6169 . -4) (undo-tree-id6170 . -4) (undo-tree-id6171 . -4) (undo-tree-id6172 . -4) (undo-tree-id6173 . -4) (undo-tree-id6174 . -4) (undo-tree-id6175 . -4) (undo-tree-id6176 . -4) (undo-tree-id6177 . -4) (undo-tree-id6178 . -4) (undo-tree-id6179 . -4) (undo-tree-id6180 . -4) (undo-tree-id6181 . -4) (undo-tree-id6182 . -4) (undo-tree-id6183 . -4) (undo-tree-id6184 . -4) (undo-tree-id6185 . -4) (undo-tree-id6186 . -4) (undo-tree-id6187 . -4) (undo-tree-id6188 . -4) (undo-tree-id6189 . -4) (undo-tree-id6190 . -4) (undo-tree-id6191 . -4) (undo-tree-id6192 . -4) (undo-tree-id6193 . -4) (undo-tree-id6194 . -4) (undo-tree-id6195 . -4) (undo-tree-id6196 . -4) (undo-tree-id6197 . -4) (undo-tree-id6198 . -4) (undo-tree-id6199 . -4) (undo-tree-id6200 . -4) (undo-tree-id6201 . -4) (undo-tree-id6202 . -4) (undo-tree-id6203 . -4) (undo-tree-id6204 . -4) (undo-tree-id6205 . -4) (undo-tree-id6206 . -4) (undo-tree-id6207 . -4) (undo-tree-id6208 . -4) (undo-tree-id6209 . -4) (undo-tree-id6210 . -4) (undo-tree-id6211 . -4) (undo-tree-id6212 . -4) (undo-tree-id6213 . -4) (undo-tree-id6214 . -4) (undo-tree-id6215 . -4) (undo-tree-id6216 . -4) (undo-tree-id6217 . -4) (undo-tree-id6218 . -4) (undo-tree-id6219 . -4) (undo-tree-id6220 . -4) (undo-tree-id6221 . -4) (undo-tree-id6222 . -4) (undo-tree-id6223 . -4) (undo-tree-id6224 . -4) (undo-tree-id6225 . -4) (undo-tree-id6226 . -4) (undo-tree-id6227 . -4) (undo-tree-id6228 . -4) (undo-tree-id6229 . -4) (undo-tree-id6230 . -4) (undo-tree-id6231 . -4) (undo-tree-id6232 . -4) (undo-tree-id6233 . -4) (undo-tree-id6234 . -4) (undo-tree-id6235 . -4) (undo-tree-id6236 . -4) (undo-tree-id6237 . -4) (undo-tree-id6238 . -4) (undo-tree-id6239 . -4) (undo-tree-id6240 . -4) (undo-tree-id6241 . -4) (undo-tree-id6242 . -4) (undo-tree-id6243 . -4) (undo-tree-id6244 . -4) (undo-tree-id6245 . -4) (undo-tree-id6246 . -4) (undo-tree-id6247 . -4) (undo-tree-id6248 . -4) (undo-tree-id6249 . -4) (undo-tree-id6250 . -4) (undo-tree-id6251 . -4) (undo-tree-id6252 . -4) (undo-tree-id6253 . -4) (undo-tree-id6254 . -4) (undo-tree-id6255 . -4) (undo-tree-id6256 . -4) (undo-tree-id6257 . -4) (undo-tree-id6258 . -4) (undo-tree-id6259 . -4) (undo-tree-id6260 . -4) (undo-tree-id6261 . -4) (undo-tree-id6262 . -4) (undo-tree-id6263 . -4) (undo-tree-id6264 . -4) (undo-tree-id6265 . -4) (undo-tree-id6266 . -4) (undo-tree-id6267 . -4) (undo-tree-id6268 . -4) (undo-tree-id6269 . -4) (undo-tree-id6270 . -4) (undo-tree-id6271 . -4) (undo-tree-id6272 . -4) (undo-tree-id6273 . -4) (undo-tree-id6274 . -4) (undo-tree-id6275 . -4) (undo-tree-id6276 . -4) (undo-tree-id6277 . -4) (undo-tree-id6278 . -4) (undo-tree-id6279 . -4) (undo-tree-id6280 . -4) (undo-tree-id6281 . -4) (undo-tree-id6282 . -4) (undo-tree-id6283 . -4) (undo-tree-id6284 . -4) (undo-tree-id6285 . -4) (undo-tree-id6286 . -4) (undo-tree-id6287 . -4) (undo-tree-id6288 . -4) (undo-tree-id6289 . -4) (undo-tree-id6290 . -4) (undo-tree-id6291 . -4) 20137 (#("not " 0 4 (fontified t)) . -20137) (undo-tree-id6292 . -4) (undo-tree-id6293 . -4) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -2) (undo-tree-id6299 . -2) (undo-tree-id6300 . -2) (undo-tree-id6301 . -2) (undo-tree-id6302 . -3) (undo-tree-id6303 . -3) (undo-tree-id6304 . -3) (undo-tree-id6305 . -3) (undo-tree-id6306 . -4) (undo-tree-id6307 . -4) (undo-tree-id6308 . -4) (undo-tree-id6309 . -4) (undo-tree-id6310 . -4) (undo-tree-id6311 . -4) (undo-tree-id6312 . -4) (undo-tree-id6313 . -4) (undo-tree-id6314 . -4) (undo-tree-id6315 . -4) (undo-tree-id6316 . -4) (undo-tree-id6317 . -4) (undo-tree-id6318 . -4) (undo-tree-id6319 . -4) (undo-tree-id6320 . -4) (undo-tree-id6321 . -4) (undo-tree-id6322 . -4) (undo-tree-id6323 . -4) (undo-tree-id6324 . -4) (undo-tree-id6325 . -4) (undo-tree-id6326 . -4) (undo-tree-id6327 . -4) (undo-tree-id6328 . -4) (undo-tree-id6329 . -4) (undo-tree-id6330 . -4) (undo-tree-id6331 . -4) (undo-tree-id6332 . -4) (undo-tree-id6333 . -4) (undo-tree-id6334 . -4) (undo-tree-id6335 . -4) (undo-tree-id6336 . -4) (undo-tree-id6337 . -4) (undo-tree-id6338 . -4) (undo-tree-id6339 . -4) (undo-tree-id6340 . -4) (undo-tree-id6341 . -4) (undo-tree-id6342 . -4) (undo-tree-id6343 . -4) (undo-tree-id6344 . -4) (undo-tree-id6345 . -4) (undo-tree-id6346 . -4) (undo-tree-id6347 . -4) (undo-tree-id6348 . -4) (undo-tree-id6349 . -4) (undo-tree-id6350 . -4) (undo-tree-id6351 . -4) (undo-tree-id6352 . -4) (undo-tree-id6353 . -4) (undo-tree-id6354 . -4) (undo-tree-id6355 . -4) (undo-tree-id6356 . -4) (undo-tree-id6357 . -4) (undo-tree-id6358 . -4) (undo-tree-id6359 . -4) (undo-tree-id6360 . -4) (undo-tree-id6361 . -4) (undo-tree-id6362 . -4) (undo-tree-id6363 . -4) (undo-tree-id6364 . -4) (undo-tree-id6365 . -4) (undo-tree-id6366 . -4) (undo-tree-id6367 . -4) (undo-tree-id6368 . -4) (undo-tree-id6369 . -4) (undo-tree-id6370 . -4) (undo-tree-id6371 . -4) (undo-tree-id6372 . -4) (undo-tree-id6373 . -4) (undo-tree-id6374 . -4) (undo-tree-id6375 . -4) (undo-tree-id6376 . -4) (undo-tree-id6377 . -4) (undo-tree-id6378 . -4) (undo-tree-id6379 . -4) (undo-tree-id6380 . -4) (undo-tree-id6381 . -4) (undo-tree-id6382 . -4) (undo-tree-id6383 . -4) (undo-tree-id6384 . -4) (undo-tree-id6385 . -4) (undo-tree-id6386 . -4) (undo-tree-id6387 . -4) (undo-tree-id6388 . -4) (undo-tree-id6389 . -4) (undo-tree-id6390 . -4) (undo-tree-id6391 . -4) (undo-tree-id6392 . -4) (undo-tree-id6393 . -4) (undo-tree-id6394 . -4) (undo-tree-id6395 . -4) (undo-tree-id6396 . -4) (undo-tree-id6397 . -4) (undo-tree-id6398 . -4) (undo-tree-id6399 . -4) (undo-tree-id6400 . -4) (undo-tree-id6401 . -4) (undo-tree-id6402 . -4) (undo-tree-id6403 . -4) (undo-tree-id6404 . -4) (undo-tree-id6405 . -4) (undo-tree-id6406 . -4) (undo-tree-id6407 . -4) (undo-tree-id6408 . -4) (undo-tree-id6409 . -4) (undo-tree-id6410 . -4) (undo-tree-id6411 . -4) (undo-tree-id6412 . -4) (undo-tree-id6413 . -4) (undo-tree-id6414 . -4) (undo-tree-id6415 . -4) (undo-tree-id6416 . -4) (undo-tree-id6417 . -4) (undo-tree-id6418 . -4) (undo-tree-id6419 . -4) (undo-tree-id6420 . -4) (undo-tree-id6421 . -4) (undo-tree-id6422 . -4) (undo-tree-id6423 . -4) (undo-tree-id6424 . -4) (undo-tree-id6425 . -4) (undo-tree-id6426 . -4) (undo-tree-id6427 . -4) (undo-tree-id6428 . -4) (undo-tree-id6429 . -4) (undo-tree-id6430 . -4) (undo-tree-id6431 . -4) (undo-tree-id6432 . -4) (undo-tree-id6433 . -4) (undo-tree-id6434 . -4) (undo-tree-id6435 . -4) (undo-tree-id6436 . -4) (undo-tree-id6437 . -4) (undo-tree-id6438 . -4) (undo-tree-id6439 . -4) (undo-tree-id6440 . -4) (undo-tree-id6441 . -4) (undo-tree-id6442 . -4) (undo-tree-id6443 . -4) (undo-tree-id6444 . -4) (undo-tree-id6445 . -4) (undo-tree-id6446 . -4) (undo-tree-id6447 . -4) (undo-tree-id6448 . -4) (undo-tree-id6449 . -4) (undo-tree-id6450 . -4) (undo-tree-id6451 . -4) (undo-tree-id6452 . -4) (undo-tree-id6453 . -4) (undo-tree-id6454 . -4) (undo-tree-id6455 . -4) (undo-tree-id6456 . -4) (undo-tree-id6457 . -4) (undo-tree-id6458 . -4) (undo-tree-id6459 . -4) (undo-tree-id6460 . -4) (undo-tree-id6461 . -4) (undo-tree-id6462 . -4) (undo-tree-id6463 . -4) (undo-tree-id6464 . -4) (undo-tree-id6465 . -4) (undo-tree-id6466 . -4) (undo-tree-id6467 . -4) (undo-tree-id6468 . -4) (undo-tree-id6469 . -4) (undo-tree-id6470 . -4) (undo-tree-id6471 . -4) (undo-tree-id6472 . -4) (undo-tree-id6473 . -4) (undo-tree-id6474 . -4) (undo-tree-id6475 . -4) (undo-tree-id6476 . -4) 20141 (#("find " 0 5 (fontified t)) . -20141) (undo-tree-id6477 . -5) (undo-tree-id6478 . -5) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -2) (undo-tree-id6484 . -2) (undo-tree-id6485 . -2) (undo-tree-id6486 . -2) (undo-tree-id6487 . -3) (undo-tree-id6488 . -3) (undo-tree-id6489 . -3) (undo-tree-id6490 . -3) (undo-tree-id6491 . -4) (undo-tree-id6492 . -4) (undo-tree-id6493 . -4) (undo-tree-id6494 . -4) (undo-tree-id6495 . -5) (undo-tree-id6496 . -5) (undo-tree-id6497 . -5) (undo-tree-id6498 . -5) (undo-tree-id6499 . -5) (undo-tree-id6500 . -5) (undo-tree-id6501 . -5) (undo-tree-id6502 . -5) (undo-tree-id6503 . -5) (undo-tree-id6504 . -5) (undo-tree-id6505 . -5) (undo-tree-id6506 . -5) (undo-tree-id6507 . -5) (undo-tree-id6508 . -5) (undo-tree-id6509 . -5) (undo-tree-id6510 . -5) (undo-tree-id6511 . -5) (undo-tree-id6512 . -5) (undo-tree-id6513 . -5) (undo-tree-id6514 . -5) (undo-tree-id6515 . -5) (undo-tree-id6516 . -5) (undo-tree-id6517 . -5) (undo-tree-id6518 . -5) (undo-tree-id6519 . -5) (undo-tree-id6520 . -5) (undo-tree-id6521 . -5) (undo-tree-id6522 . -5) (undo-tree-id6523 . -5) (undo-tree-id6524 . -5) (undo-tree-id6525 . -5) (undo-tree-id6526 . -5) (undo-tree-id6527 . -5) (undo-tree-id6528 . -5) (undo-tree-id6529 . -5) (undo-tree-id6530 . -5) (undo-tree-id6531 . -5) (undo-tree-id6532 . -5) (undo-tree-id6533 . -5) (undo-tree-id6534 . -5) (undo-tree-id6535 . -5) (undo-tree-id6536 . -5) (undo-tree-id6537 . -5) (undo-tree-id6538 . -5) (undo-tree-id6539 . -5) (undo-tree-id6540 . -5) (undo-tree-id6541 . -5) (undo-tree-id6542 . -5) (undo-tree-id6543 . -5) (undo-tree-id6544 . -5) (undo-tree-id6545 . -5) (undo-tree-id6546 . -5) (undo-tree-id6547 . -5) (undo-tree-id6548 . -5) (undo-tree-id6549 . -5) (undo-tree-id6550 . -5) (undo-tree-id6551 . -5) (undo-tree-id6552 . -5) (undo-tree-id6553 . -5) (undo-tree-id6554 . -5) (undo-tree-id6555 . -5) (undo-tree-id6556 . -5) (undo-tree-id6557 . -5) (undo-tree-id6558 . -5) (undo-tree-id6559 . -5) (undo-tree-id6560 . -5) (undo-tree-id6561 . -5) (undo-tree-id6562 . -5) (undo-tree-id6563 . -5) (undo-tree-id6564 . -5) (undo-tree-id6565 . -5) (undo-tree-id6566 . -5) (undo-tree-id6567 . -5) (undo-tree-id6568 . -5) (undo-tree-id6569 . -5) (undo-tree-id6570 . -5) (undo-tree-id6571 . -5) (undo-tree-id6572 . -5) (undo-tree-id6573 . -5) (undo-tree-id6574 . -5) (undo-tree-id6575 . -5) (undo-tree-id6576 . -5) (undo-tree-id6577 . -5) (undo-tree-id6578 . -5) (undo-tree-id6579 . -5) (undo-tree-id6580 . -5) (undo-tree-id6581 . -5) (undo-tree-id6582 . -5) (undo-tree-id6583 . -5) (undo-tree-id6584 . -5) (undo-tree-id6585 . -5) (undo-tree-id6586 . -5) (undo-tree-id6587 . -5) (undo-tree-id6588 . -5) (undo-tree-id6589 . -5) (undo-tree-id6590 . -5) (undo-tree-id6591 . -5) (undo-tree-id6592 . -5) (undo-tree-id6593 . -5) (undo-tree-id6594 . -5) (undo-tree-id6595 . -5) (undo-tree-id6596 . -5) (undo-tree-id6597 . -5) (undo-tree-id6598 . -5) (undo-tree-id6599 . -5) (undo-tree-id6600 . -5) (undo-tree-id6601 . -5) (undo-tree-id6602 . -5) (undo-tree-id6603 . -5) (undo-tree-id6604 . -5) (undo-tree-id6605 . -5) (undo-tree-id6606 . -5) (undo-tree-id6607 . -5) (undo-tree-id6608 . -5) (undo-tree-id6609 . -5) (undo-tree-id6610 . -5) (undo-tree-id6611 . -5) (undo-tree-id6612 . -5) (undo-tree-id6613 . -5) (undo-tree-id6614 . -5) (undo-tree-id6615 . -5) (undo-tree-id6616 . -5) (undo-tree-id6617 . -5) (undo-tree-id6618 . -5) (undo-tree-id6619 . -5) (undo-tree-id6620 . -5) (undo-tree-id6621 . -5) (undo-tree-id6622 . -5) (undo-tree-id6623 . -5) (undo-tree-id6624 . -5) (undo-tree-id6625 . -5) (undo-tree-id6626 . -5) (undo-tree-id6627 . -5) (undo-tree-id6628 . -5) (undo-tree-id6629 . -5) (undo-tree-id6630 . -5) (undo-tree-id6631 . -5) (undo-tree-id6632 . -5) (undo-tree-id6633 . -5) (undo-tree-id6634 . -5) (undo-tree-id6635 . -5) (undo-tree-id6636 . -5) (undo-tree-id6637 . -5) (undo-tree-id6638 . -5) (undo-tree-id6639 . -5) (undo-tree-id6640 . -5) (undo-tree-id6641 . -5) 20146 (#("you " 0 4 (fontified t)) . -20146) (undo-tree-id6642 . -4) (undo-tree-id6643 . -4) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -2) (undo-tree-id6649 . -2) (undo-tree-id6650 . -2) (undo-tree-id6651 . -2) (undo-tree-id6652 . -3) (undo-tree-id6653 . -3) (undo-tree-id6654 . -3) (undo-tree-id6655 . -3) (undo-tree-id6656 . -4) (undo-tree-id6657 . -4) (undo-tree-id6658 . -4) (undo-tree-id6659 . -4) (undo-tree-id6660 . -4) (undo-tree-id6661 . -4) (undo-tree-id6662 . -4) (undo-tree-id6663 . -4) (undo-tree-id6664 . -4) (undo-tree-id6665 . -4) (undo-tree-id6666 . -4) (undo-tree-id6667 . -4) (undo-tree-id6668 . -4) (undo-tree-id6669 . -4) (undo-tree-id6670 . -4) (undo-tree-id6671 . -4) (undo-tree-id6672 . -4) (undo-tree-id6673 . -4) (undo-tree-id6674 . -4) (undo-tree-id6675 . -4) (undo-tree-id6676 . -4) (undo-tree-id6677 . -4) (undo-tree-id6678 . -4) (undo-tree-id6679 . -4) (undo-tree-id6680 . -4) (undo-tree-id6681 . -4) (undo-tree-id6682 . -4) (undo-tree-id6683 . -4) (undo-tree-id6684 . -4) (undo-tree-id6685 . -4) (undo-tree-id6686 . -4) (undo-tree-id6687 . -4) (undo-tree-id6688 . -4) (undo-tree-id6689 . -4) (undo-tree-id6690 . -4) (undo-tree-id6691 . -4) (undo-tree-id6692 . -4) (undo-tree-id6693 . -4) (undo-tree-id6694 . -4) (undo-tree-id6695 . -4) (undo-tree-id6696 . -4) (undo-tree-id6697 . -4) (undo-tree-id6698 . -4) (undo-tree-id6699 . -4) (undo-tree-id6700 . -4) (undo-tree-id6701 . -4) (undo-tree-id6702 . -4) (undo-tree-id6703 . -4) (undo-tree-id6704 . -4) (undo-tree-id6705 . -4) (undo-tree-id6706 . -4) (undo-tree-id6707 . -4) (undo-tree-id6708 . -4) (undo-tree-id6709 . -4) (undo-tree-id6710 . -4) (undo-tree-id6711 . -4) (undo-tree-id6712 . -4) (undo-tree-id6713 . -4) (undo-tree-id6714 . -4) (undo-tree-id6715 . -4) (undo-tree-id6716 . -4) (undo-tree-id6717 . -4) (undo-tree-id6718 . -4) (undo-tree-id6719 . -4) (undo-tree-id6720 . -4) (undo-tree-id6721 . -4) (undo-tree-id6722 . -4) (undo-tree-id6723 . -4) (undo-tree-id6724 . -4) (undo-tree-id6725 . -4) (undo-tree-id6726 . -4) (undo-tree-id6727 . -4) (undo-tree-id6728 . -4) (undo-tree-id6729 . -4) (undo-tree-id6730 . -4) (undo-tree-id6731 . -4) (undo-tree-id6732 . -4) (undo-tree-id6733 . -4) (undo-tree-id6734 . -4) (undo-tree-id6735 . -4) (undo-tree-id6736 . -4) (undo-tree-id6737 . -4) (undo-tree-id6738 . -4) (undo-tree-id6739 . -4) (undo-tree-id6740 . -4) (undo-tree-id6741 . -4) (undo-tree-id6742 . -4) (undo-tree-id6743 . -4) (undo-tree-id6744 . -4) (undo-tree-id6745 . -4) (undo-tree-id6746 . -4) (undo-tree-id6747 . -4) (undo-tree-id6748 . -4) (undo-tree-id6749 . -4) (undo-tree-id6750 . -4) (undo-tree-id6751 . -4) (undo-tree-id6752 . -4) (undo-tree-id6753 . -4) (undo-tree-id6754 . -4) (undo-tree-id6755 . -4) (undo-tree-id6756 . -4) (undo-tree-id6757 . -4) (undo-tree-id6758 . -4) (undo-tree-id6759 . -4) (undo-tree-id6760 . -4) (undo-tree-id6761 . -4) (undo-tree-id6762 . -4) (undo-tree-id6763 . -4) (undo-tree-id6764 . -4) (undo-tree-id6765 . -4) (undo-tree-id6766 . -4) (undo-tree-id6767 . -4) (undo-tree-id6768 . -4) (undo-tree-id6769 . -4) (undo-tree-id6770 . -4) (undo-tree-id6771 . -4) (undo-tree-id6772 . -4) (undo-tree-id6773 . -4) (undo-tree-id6774 . -4) (undo-tree-id6775 . -4) (undo-tree-id6776 . -4) (undo-tree-id6777 . -4) (undo-tree-id6778 . -4) (undo-tree-id6779 . -4) (undo-tree-id6780 . -4) (undo-tree-id6781 . -4) (undo-tree-id6782 . -4) 20150 (#("the " 0 4 (fontified t)) . -20150) (undo-tree-id6783 . -4) (undo-tree-id6784 . -4) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -2) (undo-tree-id6790 . -2) (undo-tree-id6791 . -2) (undo-tree-id6792 . -2) (undo-tree-id6793 . -3) (undo-tree-id6794 . -3) (undo-tree-id6795 . -3) (undo-tree-id6796 . -3) (undo-tree-id6797 . -4) (undo-tree-id6798 . -4) (undo-tree-id6799 . -4) (undo-tree-id6800 . -4) (undo-tree-id6801 . -4) (undo-tree-id6802 . -4) (undo-tree-id6803 . -4) (undo-tree-id6804 . -4) (undo-tree-id6805 . -4) (undo-tree-id6806 . -4) (undo-tree-id6807 . -4) (undo-tree-id6808 . -4) (undo-tree-id6809 . -4) (undo-tree-id6810 . -4) (undo-tree-id6811 . -4) (undo-tree-id6812 . -4) (undo-tree-id6813 . -4) (undo-tree-id6814 . -4) (undo-tree-id6815 . -4) (undo-tree-id6816 . -4) (undo-tree-id6817 . -4) (undo-tree-id6818 . -4) (undo-tree-id6819 . -4) (undo-tree-id6820 . -4) (undo-tree-id6821 . -4) (undo-tree-id6822 . -4) (undo-tree-id6823 . -4) (undo-tree-id6824 . -4) (undo-tree-id6825 . -4) (undo-tree-id6826 . -4) (undo-tree-id6827 . -4) (undo-tree-id6828 . -4) (undo-tree-id6829 . -4) (undo-tree-id6830 . -4) (undo-tree-id6831 . -4) (undo-tree-id6832 . -4) (undo-tree-id6833 . -4) (undo-tree-id6834 . -4) (undo-tree-id6835 . -4) (undo-tree-id6836 . -4) (undo-tree-id6837 . -4) (undo-tree-id6838 . -4) (undo-tree-id6839 . -4) (undo-tree-id6840 . -4) (undo-tree-id6841 . -4) (undo-tree-id6842 . -4) (undo-tree-id6843 . -4) (undo-tree-id6844 . -4) (undo-tree-id6845 . -4) (undo-tree-id6846 . -4) (undo-tree-id6847 . -4) (undo-tree-id6848 . -4) (undo-tree-id6849 . -4) (undo-tree-id6850 . -4) (undo-tree-id6851 . -4) (undo-tree-id6852 . -4) (undo-tree-id6853 . -4) (undo-tree-id6854 . -4) (undo-tree-id6855 . -4) (undo-tree-id6856 . -4) (undo-tree-id6857 . -4) 20154 (#("optimal " 0 8 (fontified t)) . -20154) (undo-tree-id6858 . -8) (undo-tree-id6859 . -8) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -2) (undo-tree-id6865 . -2) (undo-tree-id6866 . -2) (undo-tree-id6867 . -2) (undo-tree-id6868 . -3) (undo-tree-id6869 . -3) (undo-tree-id6870 . -3) (undo-tree-id6871 . -3) (undo-tree-id6872 . -4) (undo-tree-id6873 . -4) (undo-tree-id6874 . -4) (undo-tree-id6875 . -4) (undo-tree-id6876 . -5) (undo-tree-id6877 . -5) (undo-tree-id6878 . -5) (undo-tree-id6879 . -5) (undo-tree-id6880 . -6) (undo-tree-id6881 . -6) (undo-tree-id6882 . -6) (undo-tree-id6883 . -6) (undo-tree-id6884 . -7) (undo-tree-id6885 . -7) (undo-tree-id6886 . -7) (undo-tree-id6887 . -7) (undo-tree-id6888 . -8) (undo-tree-id6889 . -8) (undo-tree-id6890 . -8) (undo-tree-id6891 . -8) (undo-tree-id6892 . -8) (undo-tree-id6893 . -8) (undo-tree-id6894 . -8) (undo-tree-id6895 . -8) (undo-tree-id6896 . -8) (undo-tree-id6897 . -8) (undo-tree-id6898 . -8) (undo-tree-id6899 . -8) (undo-tree-id6900 . -8) (undo-tree-id6901 . -8) (undo-tree-id6902 . -8) (undo-tree-id6903 . -8) (undo-tree-id6904 . -8) (undo-tree-id6905 . -8) (undo-tree-id6906 . -8) (undo-tree-id6907 . -8) (undo-tree-id6908 . -8) (undo-tree-id6909 . -8) (undo-tree-id6910 . -8) (undo-tree-id6911 . -8) (undo-tree-id6912 . -8) 20162 (#("path" 0 4 (fontified t)) . -20162) (undo-tree-id6913 . -4) (undo-tree-id6914 . -4) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -2) (undo-tree-id6920 . -2) (undo-tree-id6921 . -2) (undo-tree-id6922 . -2) (undo-tree-id6923 . -3) (undo-tree-id6924 . -3) (undo-tree-id6925 . -3) (undo-tree-id6926 . -3) (undo-tree-id6927 . -4) (undo-tree-id6928 . -4) (undo-tree-id6929 . -4) (undo-tree-id6930 . -4) (undo-tree-id6931 . -4) 20166 (20162 . 20166) (20150 . 20162) (#("the " 0 4 (fontified t)) . -20150) (undo-tree-id6932 . -4) (undo-tree-id6933 . -4) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -2) (undo-tree-id6939 . -2) (undo-tree-id6940 . -2) (undo-tree-id6941 . -2) (undo-tree-id6942 . -3) (undo-tree-id6943 . -3) (undo-tree-id6944 . -3) (undo-tree-id6945 . -3) (undo-tree-id6946 . -4) (undo-tree-id6947 . -4) (undo-tree-id6948 . -4) (undo-tree-id6949 . -4) (undo-tree-id6950 . -4) (undo-tree-id6951 . -4) (undo-tree-id6952 . -4) (undo-tree-id6953 . -4) (undo-tree-id6954 . -4) (undo-tree-id6955 . -4) (undo-tree-id6956 . -4) (undo-tree-id6957 . -4) (undo-tree-id6958 . -4) (undo-tree-id6959 . -4) (undo-tree-id6960 . -4) (undo-tree-id6961 . -4) (undo-tree-id6962 . -4) (undo-tree-id6963 . -4) (undo-tree-id6964 . -4) (undo-tree-id6965 . -4) (undo-tree-id6966 . -4) (undo-tree-id6967 . -4) (undo-tree-id6968 . -4) (undo-tree-id6969 . -4) (undo-tree-id6970 . -4) (undo-tree-id6971 . -4) (undo-tree-id6972 . -4) (undo-tree-id6973 . -4) 20154 (#("shor" 0 4 (fontified t)) . -20154) (undo-tree-id6974 . -4) (undo-tree-id6975 . -4) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -2) (undo-tree-id6981 . -2) (undo-tree-id6982 . -2) (undo-tree-id6983 . -2) (undo-tree-id6984 . -3) (undo-tree-id6985 . -3) (undo-tree-id6986 . -3) (undo-tree-id6987 . -3) (undo-tree-id6988 . -4) (undo-tree-id6989 . -4) (undo-tree-id6990 . -4) (undo-tree-id6991 . -4) (undo-tree-id6992 . -4) (undo-tree-id6993 . -4) (undo-tree-id6994 . -4) (undo-tree-id6995 . -4) 20158 (20146 . 20158) (20125 . 20146) (#("s" 0 1 (fontified t)) . -20125) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (#("e" 0 1 (fontified t)) . -20126) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (#("a" 0 1 (fontified t)) . -20127) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (#("r" 0 1 (fontified t)) . -20128) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (#("c" 0 1 (fontified t)) . -20129) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (#("h" 0 1 (fontified t)) . -20130) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (#(" " 0 1 (fontified t)) . -20131) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) 20132 (20125 . 20132) (20123 . 20125) (#("Basically, " 0 11 (fontified t)) . -20123) (undo-tree-id7010 . -11) (undo-tree-id7011 . -11) 20134 (#("it " 0 3 (fontified t)) . -20134) (undo-tree-id7012 . -3) (undo-tree-id7013 . -3) 20137 (#("may " 0 4 (fontified t)) . -20137) (undo-tree-id7014 . -4) (undo-tree-id7015 . -4) 20141 (#("not " 0 4 (fontified t)) . -20141) (undo-tree-id7016 . -4) (undo-tree-id7017 . -4) 20145 (#("be " 0 3 (fontified t)) . -20145) (undo-tree-id7018 . -3) (undo-tree-id7019 . -3) 20148 (#("the " 0 4 (fontified t)) . -20148) (undo-tree-id7020 . -4) (undo-tree-id7021 . -4) 20152 (#("best " 0 5 (fontified t)) . -20152) (undo-tree-id7022 . -5) (undo-tree-id7023 . -5) 20157 (#("a" 0 1 (fontified t)) . -20157) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) 20158 (20144 . 20158) (20123 . 20144) (t 26651 51176 32802 273000)) nil (26651 51203 453871 0) 0 nil])
([nil nil ((#("- may not be the best, but is usually better

" 0 45 (fontified t) 45 46 (fontified t)) . 20124) (undo-tree-id5598 . -45) (undo-tree-id5599 . -45) (undo-tree-id5600 . -18) (undo-tree-id5601 . -45) (undo-tree-id5602 . -45) (undo-tree-id5603 . -45) (undo-tree-id5604 . -18) (undo-tree-id5605 . -18) (undo-tree-id5606 . -18) (undo-tree-id5607 . -18) (undo-tree-id5608 . -18) (undo-tree-id5609 . -18) (undo-tree-id5610 . -18) (undo-tree-id5611 . -18) (undo-tree-id5612 . -45) (undo-tree-id5613 . -45) (undo-tree-id5614 . -45) (undo-tree-id5615 . -45) (undo-tree-id5616 . -45) (undo-tree-id5617 . -45) (undo-tree-id5618 . -45) (undo-tree-id5619 . -45) (undo-tree-id5620 . -45) (undo-tree-id5621 . -45) (undo-tree-id5622 . -46) (undo-tree-id5623 . -46) 20169) nil (26651 51203 454107 0) 0 nil])
([nil nil ((20123 . 20125)) nil (26651 51213 35295 0) 0 nil] [nil nil ((#("% https://www.cs.cornell.edu/courses/cs4820/2025sp/syllabus/?utm_source=chatgpt.com --> read this
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 28 (face font-lock-comment-face fontified t) 28 31 (face font-lock-comment-face fontified t) 31 98 (face font-lock-comment-face fontified t)) . 20124) (undo-tree-id5591 . -97) (undo-tree-id5592 . -18) (undo-tree-id5593 . -18) (undo-tree-id5594 . -18) (undo-tree-id5595 . -18) (undo-tree-id5596 . -98) (undo-tree-id5597 . -98)) ((20124 . 20222)) (26651 51203 451604 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -20123) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (#("e" 0 1 (fontified t)) . -20124) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) 20125) nil (26651 51213 35292 0) 0 nil])
nil
([nil nil ((20123 . 20124)) nil (26651 51213 35254 0) 0 nil])
([nil nil ((20124 . 20125)) nil (26651 51213 35253 0) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -20124) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) 20125) nil (26651 51213 35250 0) 0 nil])
([nil nil ((20124 . 20127)) nil (26651 51213 35225 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 20133) (undo-tree-id7152 . 1) (#("%" 0 1 (face font-lock-comment-face fontified t)) . 20133) (undo-tree-id7153 . 1) (#("
" 0 1 (fontified t)) . 20133) (undo-tree-id7154 . 1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 20133) (20132 . 20134) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -20132) (20132 . 20133) (#("l" 0 1 (face (font-latex-sedate-face) fontified t)) . -20132) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) 20133 (20128 . 20133) (#("u" 0 1 (face (font-latex-sedate-face) fontified t)) . -20128) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (#("r" 0 1 (face (font-latex-sedate-face) fontified t)) . -20129) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (#("l" 0 1 (face (font-latex-sedate-face) fontified t)) . -20130) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) 20131 (20128 . 20131) (20127 . 20128) (t 26651 51213 127856 693000)) nil (26651 51765 670544 0) 0 nil])
([nil nil ((20221 . 20226) (#(" " 0 1 (fontified nil)) . 20220) (20221 . 20222) (#(" " 0 1 (fontified nil)) . 20127) (undo-tree-id7119 . -1) (20126 . 20127) (20216 . 20221) (#("This" 0 4 (fontified t)) . -20216) (undo-tree-id7120 . -4) (undo-tree-id7121 . -4) (undo-tree-id7122 . -4) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -2) (undo-tree-id7128 . -2) (undo-tree-id7129 . -2) (undo-tree-id7130 . -2) (undo-tree-id7131 . -3) (undo-tree-id7132 . -3) (undo-tree-id7133 . -3) (undo-tree-id7134 . -3) (undo-tree-id7135 . -4) (undo-tree-id7136 . -4) (undo-tree-id7137 . -4) (undo-tree-id7138 . -4) (undo-tree-id7139 . -4) (undo-tree-id7140 . -4) (undo-tree-id7141 . -4) (undo-tree-id7142 . -4) (undo-tree-id7143 . -4) (undo-tree-id7144 . -4) (undo-tree-id7145 . -4) (undo-tree-id7146 . -4) (undo-tree-id7147 . -4) (undo-tree-id7148 . -4) (undo-tree-id7149 . -4) 20220 (20216 . 20220) (20215 . 20217) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -20215) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (20215 . 20216) (20214 . 20215) (#("}" 0 1 (fontified nil)) . -20214) (20214 . 20215)) nil (26651 51765 670503 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 20225) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1)) nil (26651 51765 670439 0) 0 nil])
([nil nil ((#(" --> read this" 0 14 (fontified t)) . 20226) (undo-tree-id7055 . -13) (undo-tree-id7056 . -6) (undo-tree-id7057 . -5) (undo-tree-id7058 . -5) (undo-tree-id7059 . -5) (undo-tree-id7060 . -5) (undo-tree-id7061 . -4) (undo-tree-id7062 . -4) (undo-tree-id7063 . -4) (undo-tree-id7064 . -4) (undo-tree-id7065 . -3) (undo-tree-id7066 . -3) (undo-tree-id7067 . -3) (undo-tree-id7068 . -3) (undo-tree-id7069 . -2) (undo-tree-id7070 . -2) (undo-tree-id7071 . -2) (undo-tree-id7072 . -2) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -14)) nil (26651 51765 670370 0) 0 nil])
([nil nil ((20226 . 20227)) nil (26651 51765 670318 0) 0 nil])
([nil nil ((20226 . 20247) (t 26651 51765 763344 331000)) nil (26651 51809 633471 0) 0 nil])
([nil nil ((#("- not guaranteed to find the least cost path
- basically compute euclidean distance between start and end node. travel in the direction of smallest euclidean distance surrounding a node
" 0 172 (fontified t) 172 186 (fontified t)) . 19221) (undo-tree-id7182 . -71) (undo-tree-id7183 . -186) (undo-tree-id7184 . -71) (undo-tree-id7185 . -26) (undo-tree-id7186 . -71) (undo-tree-id7187 . -185) (undo-tree-id7188 . -71) 19292 (t 26651 51809 727923 169000)) nil (26651 51902 430837 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 19250) (#("exactly" 0 7 (fontified t)) . 19250) (undo-tree-id7181 . -6)) nil (26651 51902 430823 0) 0 nil])
([nil nil ((19318 . 19320) (#(" " 0 1 (fontified t)) . -19318) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) 19319 (19315 . 19319) (#(" " 0 1 (fontified nil)) . 19314) (19303 . 19316) (#("e" 0 1 (fontified t)) . -19303) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (#("g" 0 1 (fontified t)) . -19304) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (#("e" 0 1 (fontified t)) . -19305) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) 19306 (19303 . 19306) (#("cost " 0 5 (fontified t)) . -19303) (undo-tree-id7178 . -5) (undo-tree-id7179 . -5) (undo-tree-id7180 . -5) 19308 (19293 . 19308) (19276 . 19293) (19255 . 19276)) nil (26651 51902 431108 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20020 . 20021) (nil fontified nil 19220 . 20021) (19220 . 20021)) nil (26651 51993 878641 0) 0 nil] [nil nil ((nil rear-nonsticky nil 19989 . 19990) (nil fontified nil 19189 . 19990) (19189 . 19990) 19188) ((#("Dijkstra's but instead of using a greedy approach
to pick the next node to explore, we use an \\textit{heuristic
  function}. An heuristic function is something we define for a given
problem that tells us approximately how far away we are from our
goal. We pick the node to explore that has the minimum value in our
heuristic function.

For instance, consider a maze-finding
algorithm. We are at a fork in the maze. Our heurestic function is the
euclidean distance from where we are to the end of the maze. We choose
the path that has the minimium distance to the end of the maze first,
before exploring the longer path. The A* approach helps you arrive at
your goal faster. See
\\href{https://www.cs.cornell.edu/courses/cs4820/2025sp/syllabus/?utm_source=chatgpt.com}{this
link} for more information.

" 0 8 (face (font-latex-sedate-face) fontified nil) 8 94 (fontified nil) 94 101 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil) 101 102 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified nil) 102 122 (face (font-latex-italic-face) font-lock-multiline t fontified nil) 122 123 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified nil) 123 678 (fontified nil) 678 683 (face (font-latex-sedate-face) fontified nil) 683 684 (face (rainbow-delimiters-depth-1-face) fontified nil) 684 765 (fontified nil) 765 766 (face (rainbow-delimiters-depth-1-face) fontified nil) 766 767 (face (rainbow-delimiters-depth-1-face) fontified nil) 767 776 (fontified nil) 776 777 (face (rainbow-delimiters-depth-1-face) fontified nil) 777 800 (fontified nil) 800 801 (rear-nonsticky nil fontified nil)) . 19189) (undo-tree-id7189 . -800) (undo-tree-id7190 . -800) (undo-tree-id7191 . -800) (undo-tree-id7192 . -800) (undo-tree-id7193 . -800) (undo-tree-id7194 . -800) (undo-tree-id7195 . -800) (undo-tree-id7196 . -800) (nil fontified t 19966 . 19989) (nil fontified t 19965 . 19966) (nil fontified t 19956 . 19965) (nil fontified t 19955 . 19956) (nil fontified t 19954 . 19955) (nil fontified t 19873 . 19954) (nil fontified t 19872 . 19873) (nil fontified t 19867 . 19872) (nil fontified t 19312 . 19867) (nil fontified t 19311 . 19312) (nil fontified t 19291 . 19311) (nil fontified t 19290 . 19291) (nil fontified t 19283 . 19290) (nil fontified t 19197 . 19283) (nil fontified t 19189 . 19197) (nil rear-nonsticky t 19989 . 19990)) (26651 51902 430778 0) 0 nil])
([nil nil ((19220 . 19221)) nil (26651 51993 878638 0) 0 nil])
nil
([nil nil ((#("like" 0 4 (fontified t)) . -19249) (undo-tree-id7521 . -4) (undo-tree-id7522 . -4) 19253 (19242 . 19253) (19221 . 19242)) nil (26651 51993 878637 0) 0 nil])
([nil nil ((19260 . 19269)) nil (26651 51993 878631 0) 0 nil])
([nil nil ((19248 . 19253)) nil (26651 51993 878630 0) 0 nil])
([nil nil ((19323 . 19337) (19302 . 19323) (19296 . 19302) (#(" " 0 1 (fontified nil)) . 19291) (19290 . 19291) (19286 . 19296) (#("node " 0 5 (fontified t)) . -19286) (undo-tree-id7517 . -5) (undo-tree-id7518 . -5) 19291 (19288 . 19291) (#("t" 0 1 (fontified t)) . -19288) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) 19289 (19274 . 19289)) nil (26651 51993 878627 0) 0 nil])
([nil nil ((#("but instead of using a greedy approach
to pick the next node to explore, we use an \\textit{heuristic
  function}." 0 39 (fontified t) 39 83 (fontified t) 83 90 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified t) 90 91 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified t) 91 111 (face (font-latex-italic-face) font-lock-multiline t fontified t) 111 112 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified t) 112 113 (fontified t)) . 19337) (undo-tree-id7511 . -112) (undo-tree-id7512 . -112) (undo-tree-id7513 . 113) (undo-tree-id7514 . -112) (undo-tree-id7515 . -112) (undo-tree-id7516 . -112) 19449) nil (26651 51993 878615 0) 0 nil])
([nil nil ((19337 . 19339) (#(" " 0 1 (fontified t)) . -19337) (undo-tree-id7507 . -1) (undo-tree-id7508 . 1) (undo-tree-id7509 . 1) (undo-tree-id7510 . -1) 19338) nil (26651 51993 878603 0) 0 nil])
([nil nil ((#("The A* approach helps you arrive at
your goal faster. See
\\href{https://www.cs.cornell.edu/courses/cs4820/2025sp/syllabus/?utm_source=chatgpt.com}{this
link} for more information.
" 0 58 (fontified t) 58 63 (face (font-latex-sedate-face) fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 145 (fontified t) 145 146 (face (rainbow-delimiters-depth-1-face) fontified t) 146 147 (face (rainbow-delimiters-depth-1-face) fontified t) 147 156 (fontified t) 156 157 (face (rainbow-delimiters-depth-1-face) fontified t) 157 180 (fontified t)) . 19834) (undo-tree-id7462 . -179) (undo-tree-id7463 . -179) (undo-tree-id7464 . -179) (undo-tree-id7465 . -179) (undo-tree-id7466 . -180) (undo-tree-id7467 . -180) (undo-tree-id7468 . -179) (undo-tree-id7469 . -180) (undo-tree-id7470 . -180) (undo-tree-id7471 . -14) (undo-tree-id7472 . -14) (undo-tree-id7473 . -14) (undo-tree-id7474 . -14) (undo-tree-id7475 . -7) (undo-tree-id7476 . -7) (undo-tree-id7477 . -7) (undo-tree-id7478 . -7) (undo-tree-id7479 . -5) (undo-tree-id7480 . -5) (undo-tree-id7481 . -5) (undo-tree-id7482 . -5) (undo-tree-id7483 . -4) (undo-tree-id7484 . -4) (undo-tree-id7485 . -4) (undo-tree-id7486 . -4) (undo-tree-id7487 . -2) (undo-tree-id7488 . -2) (undo-tree-id7489 . -2) (undo-tree-id7490 . -2) (undo-tree-id7491 . -57) (undo-tree-id7492 . -57) (undo-tree-id7493 . -57) (undo-tree-id7494 . -57) (undo-tree-id7495 . -94) (undo-tree-id7496 . -94) (undo-tree-id7497 . -94) (undo-tree-id7498 . -94) (undo-tree-id7499 . -152) (undo-tree-id7500 . -179) (undo-tree-id7501 . -179) (undo-tree-id7502 . -179) (undo-tree-id7503 . -179) (undo-tree-id7504 . -179) (undo-tree-id7505 . -180) (undo-tree-id7506 . -180) 20013) nil (26651 51993 878592 0) 0 nil])
([nil nil ((#("Dijkstra's but instead of using a greedy approach
to pick the next node to explore, we use an \\textit{heuristic
  function}. An heuristic function is something we define for a given
problem that tells us approximately how far away we are from our
goal. We pick the node to explore that has the minimum value in our
heuristic function.

For instance, consider a maze-finding
algorithm. We are at a fork in the maze. Our heurestic function is the
euclidean distance from where we are to the end of the maze. We choose
the path that has the minimium distance to the end of the maze first,
before exploring the longer path. The A* approach helps you arrive at
your goal faster." 0 8 (fontified t) 8 9 (fontified t) 9 50 (fontified t) 50 94 (fontified t) 94 95 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified t) 95 101 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified t) 101 102 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified t) 102 112 (face (font-latex-italic-face) font-lock-multiline t fontified t) 112 122 (face (font-latex-italic-face) font-lock-multiline t fontified t) 122 123 (face (rainbow-delimiters-depth-1-face) font-lock-multiline t fontified t) 123 182 (fontified t) 182 247 (fontified t) 247 315 (fontified t) 315 335 (fontified t) 335 374 (fontified t) 374 445 (fontified t) 445 516 (fontified t) 516 586 (fontified t) 586 649 (fontified t) 649 656 (fontified t) 656 673 (fontified t)) . 19935) (undo-tree-id7340 . -672) (undo-tree-id7341 . -672) (undo-tree-id7342 . -672) (undo-tree-id7343 . -672) (undo-tree-id7344 . -672) (undo-tree-id7345 . -29) (undo-tree-id7346 . -29) (undo-tree-id7347 . -29) (undo-tree-id7348 . -29) (undo-tree-id7349 . -29) (undo-tree-id7350 . -29) (undo-tree-id7351 . -29) (undo-tree-id7352 . -29) (undo-tree-id7353 . -26) (undo-tree-id7354 . -26) (undo-tree-id7355 . -26) (undo-tree-id7356 . -26) (undo-tree-id7357 . -23) (undo-tree-id7358 . -23) (undo-tree-id7359 . -23) (undo-tree-id7360 . -23) (undo-tree-id7361 . -15) (undo-tree-id7362 . -15) (undo-tree-id7363 . -15) (undo-tree-id7364 . -15) (undo-tree-id7365 . -11) (undo-tree-id7366 . -11) (undo-tree-id7367 . -11) (undo-tree-id7368 . -11) (undo-tree-id7369 . -9) (undo-tree-id7370 . -9) (undo-tree-id7371 . -9) (undo-tree-id7372 . -8) (undo-tree-id7373 . -9) (undo-tree-id7374 . -8) (undo-tree-id7375 . -9) (undo-tree-id7376 . -8) (undo-tree-id7377 . -9) (undo-tree-id7378 . -8) (undo-tree-id7379 . -9) (undo-tree-id7380 . -8) (undo-tree-id7381 . -9) (undo-tree-id7382 . -8) (undo-tree-id7383 . -9) (undo-tree-id7384 . -9) (undo-tree-id7385 . -64) (undo-tree-id7386 . -64) (undo-tree-id7387 . -64) (undo-tree-id7388 . -64) (undo-tree-id7389 . -126) (undo-tree-id7390 . -126) (undo-tree-id7391 . -126) (undo-tree-id7392 . -126) (undo-tree-id7393 . -196) (undo-tree-id7394 . -196) (undo-tree-id7395 . -196) (undo-tree-id7396 . -196) (undo-tree-id7397 . -261) (undo-tree-id7398 . -261) (undo-tree-id7399 . -261) (undo-tree-id7400 . -261) (undo-tree-id7401 . -329) (undo-tree-id7402 . -329) (undo-tree-id7403 . -329) (undo-tree-id7404 . -329) (undo-tree-id7405 . -335) (undo-tree-id7406 . -335) (undo-tree-id7407 . -335) (undo-tree-id7408 . -335) (undo-tree-id7409 . -350) (undo-tree-id7410 . -350) (undo-tree-id7411 . -350) (undo-tree-id7412 . -350) (undo-tree-id7413 . -388) (undo-tree-id7414 . -388) (undo-tree-id7415 . -388) (undo-tree-id7416 . -388) (undo-tree-id7417 . -459) (undo-tree-id7418 . -459) (undo-tree-id7419 . -459) (undo-tree-id7420 . -459) (undo-tree-id7421 . -530) (undo-tree-id7422 . -530) (undo-tree-id7423 . -530) (undo-tree-id7424 . -530) (undo-tree-id7425 . -600) (undo-tree-id7426 . -600) (undo-tree-id7427 . -600) (undo-tree-id7428 . -600) (undo-tree-id7429 . -670) (undo-tree-id7430 . -670) (undo-tree-id7431 . -670) (undo-tree-id7432 . -670) (undo-tree-id7433 . -600) (undo-tree-id7434 . -600) (undo-tree-id7435 . -600) (undo-tree-id7436 . -600) (undo-tree-id7437 . -530) (undo-tree-id7438 . -530) (undo-tree-id7439 . -530) (undo-tree-id7440 . -530) (undo-tree-id7441 . -530) (undo-tree-id7442 . -600) (undo-tree-id7443 . -600) (undo-tree-id7444 . -600) (undo-tree-id7445 . -600) (undo-tree-id7446 . -601) (undo-tree-id7447 . -601) (undo-tree-id7448 . -601) (undo-tree-id7449 . -601) (undo-tree-id7450 . -671) (undo-tree-id7451 . -671) (undo-tree-id7452 . -671) (undo-tree-id7453 . -671) (undo-tree-id7454 . -656) (undo-tree-id7455 . -672) (undo-tree-id7456 . -672) (undo-tree-id7457 . -672) (undo-tree-id7458 . -672) (undo-tree-id7459 . -672) (undo-tree-id7460 . -673) (undo-tree-id7461 . -673) 20607) nil (26651 51993 878512 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -19934) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) 19935) nil (26651 51993 878310 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -19868) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (#("o" 0 1 (fontified t)) . -19869) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (#("e" 0 1 (fontified t)) . -19870) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) 19871 (19867 . 19871) (19863 . 19866) (19842 . 19863) (19841 . 19843) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -19841) (19841 . 19842) (19835 . 19841) (19834 . 19835) (19833 . 19834) (t 26651 51993 975859 230000)) nil (26651 52175 267392 0) 0 nil])
([nil nil ((20035 . 20056) (20014 . 20035) (20009 . 20014) (#(" " 0 1 (fontified nil)) . 20004) (20003 . 20004) (20003 . 20009) (19982 . 20003) (19980 . 19982) (19973 . 19980) (#("I" 0 1 (fontified t)) . -19973) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) 19974 (19957 . 19974) (#("}" 0 1 (fontified nil)) . -19957) (19957 . 19958) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face font-latex-italic-face) fontified nil)) . -19957) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 19958) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face font-latex-italic-face) fontified t)) . 19958) (#(" " 0 1 (face (font-latex-italic-face) fontified t)) . -19958) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) 19959 (19958 . 19959) (19957 . 19959) (#("{" 0 1 (face (font-latex-italic-face) fontified nil)) . -19957) (19957 . 19958) (19950 . 19957) (19949 . 19951) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -19949) (19949 . 19950) (#("}" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -19949) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) 19950 (19949 . 19950) (#("}" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) font-lock-multiline t fontified nil)) . -19949) (19943 . 19950) (19942 . 19943) (#("usually" 0 7 (fontified t)) . -19942) (undo-tree-id7540 . -7) (undo-tree-id7541 . -7) 19949 (19939 . 19949) (#("is " 0 3 (fontified t)) . -19939) (undo-tree-id7542 . -3) (undo-tree-id7543 . -3) 19942 (#("quicker " 0 8 (fontified t)) . -19942) (undo-tree-id7544 . -8) (undo-tree-id7545 . -8) 19950 (#("than " 0 5 (fontified t)) . -19950) (undo-tree-id7546 . -5) (undo-tree-id7547 . -5) 19955 (#("Dijkstra's " 0 8 (fontified t) 8 9 (fontified t) 9 11 (fontified t)) . -19955) (undo-tree-id7548 . -11) (undo-tree-id7549 . -11) 19966 (#("since " 0 6 (fontified t)) . -19966) (undo-tree-id7550 . -6) (undo-tree-id7551 . -6) 19972 (#("you " 0 4 (fontified t)) . -19972) (undo-tree-id7552 . -4) (undo-tree-id7553 . -4) 19976 (#("prio" 0 4 (fontified t)) . -19976) (undo-tree-id7554 . -4) (undo-tree-id7555 . -4) 19980 (19978 . 19980) (#("o" 0 1 (fontified t)) . -19978) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (#("r" 0 1 (fontified t)) . -19979) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) 19980 (19966 . 19980) (#("b" 0 1 (fontified t)) . -19966) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) 19967 (19965 . 19967) (19963 . 19965) (19956 . 19963) (19939 . 19956) (#(" " 0 1 (fontified nil)) . 19935) (19934 . 19935) (19935 . 19939) (19934 . 19935) (19927 . 19933) (19906 . 19927) (#("c" 0 1 (face (font-latex-bold-face) font-lock-multiline t fontified t)) . -19906) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (#("o" 0 1 (face (font-latex-bold-face) font-lock-multiline t fontified t)) . -19907) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (#("t" 0 1 (face (font-latex-bold-face) font-lock-multiline t fontified t)) . -19908) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (#("h" 0 1 (face (font-latex-bold-face) font-lock-multiline t fontified t)) . -19909) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) 19910 (19908 . 19910) (19900 . 19908) (#("f" 0 1 (face (font-latex-bold-face) font-lock-multiline t fontified t)) . -19900) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) 19901 (19900 . 19901) (#("f" 0 1 (face (font-latex-bold-face) font-lock-multiline t fontified t)) . -19900) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) 19901 (19899 . 19901) (19878 . 19899) (#("gaurante" 0 8 (face (font-latex-bold-face) font-lock-multiline t fontified t)) . -19878) (undo-tree-id7574 . -8) (undo-tree-id7575 . -8) 19886 (19874 . 19886) (19867 . 19869) (#(" " 0 1 (face (font-latex-bold-face) fontified nil)) . 19867) (19866 . 19867) (19866 . 19872)) nil (26651 52175 267365 0) 0 nil])
([nil nil ((#("https://www.cs.cornell.edu/courses/cs4820/2025sp/syllabus/?utm_source=chatgpt.com" 0 26 (fontified t) 26 29 (fontified t) 29 81 (fontified t)) . 20169) (undo-tree-id7527 . -80) (undo-tree-id7528 . -80) (undo-tree-id7529 . -80) (undo-tree-id7530 . -80) (undo-tree-id7531 . -80) 20249) nil (26651 52175 267258 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20240 . 20241) (nil fontified nil 20170 . 20241) (20170 . 20241) 20169) nil (26651 52175 267248 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 20169) (undo-tree-id7523 . -1) (undo-tree-id7524 . 1) (undo-tree-id7525 . 1) (undo-tree-id7526 . -1)) nil (26651 52175 267244 0) 0 nil])
([nil nil ((20240 . 20241) (#("}" 0 1 (fontified nil)) . -20240) (20240 . 20241)) nil (26651 52175 267225 0) 0 nil])
([nil nil ((3126 . 3140) (#(" " 0 1 (fontified nil)) . 3106) (3105 . 3106) (3124 . 3126) (t 26651 52175 363808 723000)) nil (26651 52327 598810 0) 0 nil])
([nil nil ((3140 . 3142)) nil (26651 52327 598807 0) 0 nil])
([nil nil ((3142 . 3159)) nil (26651 52327 598806 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3153) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (#("r" 0 1 (fontified t)) . -3154) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (#("l" 0 1 (fontified t)) . -3155) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (#("y" 0 1 (fontified t)) . -3156) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (#("l" 0 1 (fontified t)) . -3157) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (#(" " 0 1 (fontified t)) . -3158) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) 3159) nil (26651 52327 598803 0) 0 nil])
([nil nil ((#("gene" 0 4 (fontified t)) . -3149) (undo-tree-id11795 . -4) (undo-tree-id11796 . -4) 3153) nil (26651 52327 598781 0) 0 nil])
([nil nil ((3149 . 3150)) nil (26651 52327 598776 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -3149) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) 3150) nil (26651 52327 598774 0) 0 nil])
([nil nil ((3149 . 3157)) nil (26651 52327 598769 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3153) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (#("i" 0 1 (fontified t)) . -3154) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (#("n" 0 1 (fontified t)) . -3155) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (#(" " 0 1 (fontified t)) . -3156) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) 3157) nil (26651 52327 598767 0) 0 nil])
([nil nil ((3153 . 3170)) nil (26651 52327 598751 0) 0 nil])
([nil nil ((#("examples" 0 8 (fontified t)) . -3162) (undo-tree-id11783 . -8) (undo-tree-id11784 . -8) 3170) nil (26651 52327 598749 0) 0 nil])
([nil nil ((#("code " 0 5 (fontified t)) . -3157) (undo-tree-id11781 . -5) (undo-tree-id11782 . -5) 3162) nil (26651 52327 598744 0) 0 nil])
([nil nil ((3177 . 3178) (#(" " 0 1 (fontified nil)) . 3177) (#(" " 0 1 (fontified nil)) . 3176) (3157 . 3178)) nil (26651 52327 598739 0) 0 nil])
([nil nil ((3178 . 3187)) nil (26651 52327 598736 0) 0 nil])
([nil nil ((3187 . 3188)) nil (26651 52327 598735 0) 0 nil])
([nil nil ((#("to " 0 3 (fontified t)) . -3185) (undo-tree-id11779 . -3) (undo-tree-id11780 . -3) 3188) nil (26651 52327 598733 0) 0 nil])
([nil nil ((#("Iprefer " 0 8 (fontified t)) . -3177) (undo-tree-id11777 . -8) (undo-tree-id11778 . -8) 3185) nil (26651 52327 598728 0) 0 nil])
([nil nil ((3177 . 3198)) nil (26651 52327 598723 0) 0 nil])
([nil nil ((3198 . 3219)) nil (26651 52327 598722 0) 0 nil])
([nil nil ((3219 . 3221)) nil (26651 52327 598721 0) 0 nil])
([nil nil ((#("concepts" 0 8 (fontified t)) . -3213) (undo-tree-id11775 . -8) (undo-tree-id11776 . -8) 3221) nil (26651 52327 598719 0) 0 nil])
([nil nil ((#("behind " 0 7 (fontified t)) . -3206) (undo-tree-id11773 . -7) (undo-tree-id11774 . -7) 3213) nil (26651 52327 598714 0) 0 nil])
([nil nil ((#("idea " 0 5 (fontified t)) . -3201) (undo-tree-id11771 . -5) (undo-tree-id11772 . -5) 3206) nil (26651 52327 598709 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -3197) (undo-tree-id11769 . -4) (undo-tree-id11770 . -4) 3201) nil (26651 52327 598703 0) 0 nil])
([nil nil ((#("explain " 0 8 (fontified t)) . -3189) (undo-tree-id11767 . -8) (undo-tree-id11768 . -8) 3197) nil (26651 52327 598698 0) 0 nil])
([nil nil ((#("to " 0 3 (fontified t)) . -3186) (undo-tree-id11765 . -3) (undo-tree-id11766 . -3) 3189) nil (26651 52327 598693 0) 0 nil])
([nil nil ((#("prefer " 0 7 (fontified t)) . -3179) (undo-tree-id11763 . -7) (undo-tree-id11764 . -7) 3186) nil (26651 52327 598688 0) 0 nil])
([nil nil ((#("I " 0 2 (fontified t)) . -3177) (undo-tree-id11761 . -2) (undo-tree-id11762 . -2) 3179) nil (26651 52327 598683 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3176) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) 3177) nil (26651 52327 598677 0) 0 nil])
([nil nil ((3177 . 3189) (#(" " 0 1 (fontified nil)) . 3167) (3166 . 3167) (3176 . 3177)) nil (26651 52327 598672 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3188) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) 3189) nil (26651 52327 598669 0) 0 nil])
([nil nil ((3188 . 3209)) nil (26651 52327 598664 0) 0 nil])
([nil nil ((3209 . 3211)) nil (26651 52327 598663 0) 0 nil])
([nil nil ((#("understand" 0 10 (fontified t)) . -3201) (undo-tree-id11755 . -10) (undo-tree-id11756 . -10) 3211) nil (26651 52327 598661 0) 0 nil])
([nil nil ((#("because " 0 8 (fontified t)) . -3193) (undo-tree-id11753 . -8) (undo-tree-id11754 . -8) 3201) nil (26651 52327 598656 0) 0 nil])
([nil nil ((#("mostly " 0 7 (fontified t)) . -3186) (undo-tree-id11751 . -7) (undo-tree-id11752 . -7) 3193) nil (26651 52327 598651 0) 0 nil])
([nil nil ((#("was " 0 4 (fontified t)) . -3182) (undo-tree-id11749 . -4) (undo-tree-id11750 . -4) 3186) nil (26651 52327 598646 0) 0 nil])
([nil nil ((#("This " 0 5 (fontified t)) . -3177) (undo-tree-id11747 . -5) (undo-tree-id11748 . -5) 3182) nil (26651 52327 598641 0) 0 nil])
([nil nil ((3177 . 3178)) nil (26651 52327 598636 0) 0 nil])
([nil nil ((3178 . 3182)) nil (26651 52327 598634 0) 0 nil])
([nil nil ((#("Idid " 0 5 (fontified t)) . -3177) (undo-tree-id11745 . -5) (undo-tree-id11746 . -5) 3182) nil (26651 52327 598633 0) 0 nil])
([nil nil ((3177 . 3178)) nil (26651 52327 598628 0) 0 nil])
([nil nil ((3178 . 3184)) nil (26651 52327 598626 0) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -3177) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (#("d" 0 1 (fontified t)) . -3178) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (#("i" 0 1 (fontified t)) . -3179) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (#("d" 0 1 (fontified t)) . -3180) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (#(" " 0 1 (fontified t)) . -3181) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (#("t" 0 1 (fontified t)) . -3182) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (#("h" 0 1 (fontified t)) . -3183) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) 3184) nil (26651 52327 598623 0) 0 nil])
([nil nil ((3177 . 3188)) nil (26651 52327 598597 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3186) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (#(" " 0 1 (fontified t)) . -3187) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) 3188) nil (26651 52327 598595 0) 0 nil])
([nil nil ((3186 . 3191)) nil (26651 52327 598587 0) 0 nil])
([nil nil ((3191 . 3193)) nil (26651 52327 598586 0) 0 nil])
([nil nil ((3193 . 3196)) nil (26651 52327 598584 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -3193) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (#("r" 0 1 (fontified t)) . -3194) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (#("e" 0 1 (fontified t)) . -3195) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) 3196) nil (26651 52327 598582 0) 0 nil])
([nil nil ((3193 . 3201)) nil (26651 52327 598570 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3200) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) 3201) nil (26651 52327 598568 0) 0 nil])
([nil nil ((#("prefer" 0 6 (fontified t)) . -3194) (undo-tree-id11717 . -6) (undo-tree-id11718 . -6) 3200) nil (26651 52327 598563 0) 0 nil])
([nil nil ((3194 . 3209)) nil (26651 52327 598558 0) 0 nil])
([nil nil ((3209 . 3230)) nil (26651 52327 598557 0) 0 nil])
([nil nil ((3230 . 3235)) nil (26651 52327 598555 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3231) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (#("e" 0 1 (fontified t)) . -3232) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (#("w" 0 1 (fontified t)) . -3233) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (#(" " 0 1 (fontified t)) . -3234) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) 3235) nil (26651 52327 598553 0) 0 nil])
([nil nil ((3231 . 3232)) nil (26651 52327 598535 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3230) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (#(" " 0 1 (fontified t)) . -3231) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) 3232) nil (26651 52327 598533 0) 0 nil])
([nil nil ((3240 . 3251) (#(" " 0 1 (fontified nil)) . 3236) (3235 . 3236) (3230 . 3240)) nil (26651 52327 598525 0) 0 nil])
([nil nil ((3251 . 3260)) nil (26651 52327 598522 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3258) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (#(" " 0 1 (fontified t)) . -3259) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) 3260) nil (26651 52327 598519 0) 0 nil])
([nil nil ((3258 . 3264)) nil (26651 52327 598478 0) 0 nil])
([nil nil ((3264 . 3268)) nil (26651 52327 598477 0) 0 nil])
([nil nil ((3268 . 3270)) nil (26651 52327 598476 0) 0 nil])
([nil nil ((3270 . 3271)) nil (26651 52327 598474 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3264) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (#("i" 0 1 (fontified t)) . -3265) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (#("d" 0 1 (fontified t)) . -3266) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (#("n" 0 1 (fontified t)) . -3267) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (#("'" 0 1 (fontified t)) . -3268) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (#("t" 0 1 (fontified t)) . -3269) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (#(" " 0 1 (fontified t)) . -3270) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) 3271) nil (26651 52327 598458 0) 0 nil])
([nil nil ((3264 . 3269)) nil (26651 52327 598120 0) 0 nil])
([nil nil ((3269 . 3271)) nil (26651 52327 598119 0) 0 nil])
([nil nil ((3271 . 3272)) nil (26651 52327 598117 0) 0 nil])
([nil nil ((#("didn't " 0 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t)) . -3265) (undo-tree-id11425 . -7) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -2) (undo-tree-id11431 . -2) (undo-tree-id11432 . -2) (undo-tree-id11433 . -2) (undo-tree-id11434 . -3) (undo-tree-id11435 . -3) (undo-tree-id11436 . -3) (undo-tree-id11437 . -3) (undo-tree-id11438 . -4) (undo-tree-id11439 . -4) (undo-tree-id11440 . -4) (undo-tree-id11441 . -4) (undo-tree-id11442 . -4) (undo-tree-id11443 . -4) (undo-tree-id11444 . -4) (undo-tree-id11445 . -4) (undo-tree-id11446 . -4) (undo-tree-id11447 . -7) (undo-tree-id11448 . -6) (undo-tree-id11449 . -6) (undo-tree-id11450 . -6) (undo-tree-id11451 . -6) (undo-tree-id11452 . -7) (undo-tree-id11453 . -7) (undo-tree-id11454 . -7) (undo-tree-id11455 . -7) (undo-tree-id11456 . -7) (undo-tree-id11457 . -7) (undo-tree-id11458 . -7) (undo-tree-id11459 . -7) 3272) nil (26651 52327 598113 0) 0 nil])
([nil nil ((#("I " 0 2 (fontified t)) . -3263) (undo-tree-id11316 . -2) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -2) (undo-tree-id11384 . -2) (undo-tree-id11385 . -2) (undo-tree-id11386 . -2) (undo-tree-id11387 . -2) (undo-tree-id11388 . -2) (undo-tree-id11389 . -2) (undo-tree-id11390 . -2) (undo-tree-id11391 . -2) (undo-tree-id11392 . -2) (undo-tree-id11393 . -2) (undo-tree-id11394 . -2) (undo-tree-id11395 . -2) (undo-tree-id11396 . -2) (undo-tree-id11397 . -2) (undo-tree-id11398 . -2) (undo-tree-id11399 . -2) (undo-tree-id11400 . -2) (undo-tree-id11401 . -2) (undo-tree-id11402 . -2) (undo-tree-id11403 . -2) (undo-tree-id11404 . -2) (undo-tree-id11405 . -2) (undo-tree-id11406 . -2) (undo-tree-id11407 . -2) (undo-tree-id11408 . -2) (undo-tree-id11409 . -2) (undo-tree-id11410 . -2) (undo-tree-id11411 . -2) (undo-tree-id11412 . -2) (undo-tree-id11413 . -2) (undo-tree-id11414 . -2) (undo-tree-id11415 . -2) (undo-tree-id11416 . -2) (undo-tree-id11417 . -2) (undo-tree-id11418 . -2) (undo-tree-id11419 . -2) (undo-tree-id11420 . -2) (undo-tree-id11421 . -2) (undo-tree-id11422 . -2) (undo-tree-id11423 . -2) (undo-tree-id11424 . -2) 3265) nil (26651 52327 598051 0) 0 nil])
([nil nil ((#("so " 0 3 (fontified t)) . -3260) (undo-tree-id11191 . -3) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -2) (undo-tree-id11197 . -2) (undo-tree-id11198 . -2) (undo-tree-id11199 . -2) (undo-tree-id11200 . -3) (undo-tree-id11201 . -3) (undo-tree-id11202 . -3) (undo-tree-id11203 . -3) (undo-tree-id11204 . -3) (undo-tree-id11205 . -3) (undo-tree-id11206 . -3) (undo-tree-id11207 . -3) (undo-tree-id11208 . -3) (undo-tree-id11209 . -3) (undo-tree-id11210 . -3) (undo-tree-id11211 . -3) (undo-tree-id11212 . -3) (undo-tree-id11213 . -3) (undo-tree-id11214 . -3) (undo-tree-id11215 . -3) (undo-tree-id11216 . -3) (undo-tree-id11217 . -3) (undo-tree-id11218 . -3) (undo-tree-id11219 . -3) (undo-tree-id11220 . -3) (undo-tree-id11221 . -3) (undo-tree-id11222 . -3) (undo-tree-id11223 . -3) (undo-tree-id11224 . -3) (undo-tree-id11225 . -3) (undo-tree-id11226 . -3) (undo-tree-id11227 . -3) (undo-tree-id11228 . -3) (undo-tree-id11229 . -3) (undo-tree-id11230 . -3) (undo-tree-id11231 . -3) (undo-tree-id11232 . -3) (undo-tree-id11233 . -3) (undo-tree-id11234 . -3) (undo-tree-id11235 . -3) (undo-tree-id11236 . -3) (undo-tree-id11237 . -3) (undo-tree-id11238 . -3) (undo-tree-id11239 . -3) (undo-tree-id11240 . -3) (undo-tree-id11241 . -3) (undo-tree-id11242 . -3) (undo-tree-id11243 . -3) (undo-tree-id11244 . -3) (undo-tree-id11245 . -3) (undo-tree-id11246 . -3) (undo-tree-id11247 . -3) (undo-tree-id11248 . -3) (undo-tree-id11249 . -3) (undo-tree-id11250 . -3) (undo-tree-id11251 . -3) (undo-tree-id11252 . -3) (undo-tree-id11253 . -3) (undo-tree-id11254 . -3) (undo-tree-id11255 . -3) (undo-tree-id11256 . -3) (undo-tree-id11257 . -3) (undo-tree-id11258 . -3) (undo-tree-id11259 . -3) (undo-tree-id11260 . -3) (undo-tree-id11261 . -3) (undo-tree-id11262 . -3) (undo-tree-id11263 . -3) (undo-tree-id11264 . -3) (undo-tree-id11265 . -3) (undo-tree-id11266 . -3) (undo-tree-id11267 . -3) (undo-tree-id11268 . -3) (undo-tree-id11269 . -3) (undo-tree-id11270 . -3) (undo-tree-id11271 . -3) (undo-tree-id11272 . -3) (undo-tree-id11273 . -3) (undo-tree-id11274 . -3) (undo-tree-id11275 . -3) (undo-tree-id11276 . -3) (undo-tree-id11277 . -3) (undo-tree-id11278 . -3) (undo-tree-id11279 . -3) (undo-tree-id11280 . -3) (undo-tree-id11281 . -3) (undo-tree-id11282 . -3) (undo-tree-id11283 . -3) (undo-tree-id11284 . -3) (undo-tree-id11285 . -3) (undo-tree-id11286 . -3) (undo-tree-id11287 . -3) (undo-tree-id11288 . -3) (undo-tree-id11289 . -3) (undo-tree-id11290 . -3) (undo-tree-id11291 . -3) (undo-tree-id11292 . -3) (undo-tree-id11293 . -3) (undo-tree-id11294 . -3) (undo-tree-id11295 . -3) (undo-tree-id11296 . -3) (undo-tree-id11297 . -3) (undo-tree-id11298 . -3) (undo-tree-id11299 . -3) (undo-tree-id11300 . -3) (undo-tree-id11301 . -3) (undo-tree-id11302 . -3) (undo-tree-id11303 . -3) (undo-tree-id11304 . -3) (undo-tree-id11305 . -3) (undo-tree-id11306 . -3) (undo-tree-id11307 . -3) (undo-tree-id11308 . -3) (undo-tree-id11309 . -3) (undo-tree-id11310 . -3) (undo-tree-id11311 . -3) (undo-tree-id11312 . -3) (undo-tree-id11313 . -3) (undo-tree-id11314 . -3) (undo-tree-id11315 . -3) 3263) nil (26651 52327 597839 0) 0 nil])
([nil nil ((#("enough, " 0 8 (fontified t)) . -3252) (undo-tree-id11038 . -8) (undo-tree-id11039 . -6) (undo-tree-id11040 . -6) (undo-tree-id11041 . -6) (undo-tree-id11042 . -6) (undo-tree-id11043 . -6) (undo-tree-id11044 . -6) (undo-tree-id11045 . -6) (undo-tree-id11046 . -6) (undo-tree-id11047 . -6) (undo-tree-id11048 . -6) (undo-tree-id11049 . -6) (undo-tree-id11050 . -6) (undo-tree-id11051 . -6) (undo-tree-id11052 . -6) (undo-tree-id11053 . -6) (undo-tree-id11054 . -6) (undo-tree-id11055 . -7) (undo-tree-id11056 . -7) (undo-tree-id11057 . -7) (undo-tree-id11058 . -7) (undo-tree-id11059 . -8) (undo-tree-id11060 . -8) (undo-tree-id11061 . -8) (undo-tree-id11062 . -8) (undo-tree-id11063 . -8) (undo-tree-id11064 . -8) (undo-tree-id11065 . -8) (undo-tree-id11066 . -8) (undo-tree-id11067 . -8) (undo-tree-id11068 . -8) (undo-tree-id11069 . -8) (undo-tree-id11070 . -8) (undo-tree-id11071 . -8) (undo-tree-id11072 . -8) (undo-tree-id11073 . -8) (undo-tree-id11074 . -8) (undo-tree-id11075 . -8) (undo-tree-id11076 . -8) (undo-tree-id11077 . -8) (undo-tree-id11078 . -8) (undo-tree-id11079 . -8) (undo-tree-id11080 . -8) (undo-tree-id11081 . -8) (undo-tree-id11082 . -8) (undo-tree-id11083 . -8) (undo-tree-id11084 . -8) (undo-tree-id11085 . -8) (undo-tree-id11086 . -8) (undo-tree-id11087 . -8) (undo-tree-id11088 . -8) (undo-tree-id11089 . -8) (undo-tree-id11090 . -8) (undo-tree-id11091 . -8) (undo-tree-id11092 . -8) (undo-tree-id11093 . -8) (undo-tree-id11094 . -8) (undo-tree-id11095 . -8) (undo-tree-id11096 . -8) (undo-tree-id11097 . -8) (undo-tree-id11098 . -8) (undo-tree-id11099 . -8) (undo-tree-id11100 . -8) (undo-tree-id11101 . -8) (undo-tree-id11102 . -8) (undo-tree-id11103 . -8) (undo-tree-id11104 . -8) (undo-tree-id11105 . -8) (undo-tree-id11106 . -8) (undo-tree-id11107 . -8) (undo-tree-id11108 . -8) (undo-tree-id11109 . -8) (undo-tree-id11110 . -8) (undo-tree-id11111 . -8) (undo-tree-id11112 . -8) (undo-tree-id11113 . -8) (undo-tree-id11114 . -8) (undo-tree-id11115 . -8) (undo-tree-id11116 . -8) (undo-tree-id11117 . -8) (undo-tree-id11118 . -8) (undo-tree-id11119 . -8) (undo-tree-id11120 . -8) (undo-tree-id11121 . -8) (undo-tree-id11122 . -8) (undo-tree-id11123 . -8) (undo-tree-id11124 . -8) (undo-tree-id11125 . -8) (undo-tree-id11126 . -8) (undo-tree-id11127 . -8) (undo-tree-id11128 . -8) (undo-tree-id11129 . -8) (undo-tree-id11130 . -8) (undo-tree-id11131 . -8) (undo-tree-id11132 . -8) (undo-tree-id11133 . -8) (undo-tree-id11134 . -8) (undo-tree-id11135 . -8) (undo-tree-id11136 . -8) (undo-tree-id11137 . -8) (undo-tree-id11138 . -8) (undo-tree-id11139 . -8) (undo-tree-id11140 . -8) (undo-tree-id11141 . -8) (undo-tree-id11142 . -8) (undo-tree-id11143 . -8) (undo-tree-id11144 . -8) (undo-tree-id11145 . -8) (undo-tree-id11146 . -8) (undo-tree-id11147 . -8) (undo-tree-id11148 . -8) (undo-tree-id11149 . -8) (undo-tree-id11150 . -8) (undo-tree-id11151 . -8) (undo-tree-id11152 . -8) (undo-tree-id11153 . -8) (undo-tree-id11154 . -8) (undo-tree-id11155 . -8) (undo-tree-id11156 . -8) (undo-tree-id11157 . -8) (undo-tree-id11158 . -8) (undo-tree-id11159 . -8) (undo-tree-id11160 . -8) (undo-tree-id11161 . -8) (undo-tree-id11162 . -8) (undo-tree-id11163 . -8) (undo-tree-id11164 . -8) (undo-tree-id11165 . -8) (undo-tree-id11166 . -8) (undo-tree-id11167 . -8) (undo-tree-id11168 . -8) (undo-tree-id11169 . -8) (undo-tree-id11170 . -8) (undo-tree-id11171 . -8) (undo-tree-id11172 . -8) (undo-tree-id11173 . -8) (undo-tree-id11174 . -8) (undo-tree-id11175 . -8) (undo-tree-id11176 . -8) (undo-tree-id11177 . -8) (undo-tree-id11178 . -8) (undo-tree-id11179 . -8) (undo-tree-id11180 . -8) (undo-tree-id11181 . -8) (undo-tree-id11182 . -8) (undo-tree-id11183 . -8) (undo-tree-id11184 . -8) (undo-tree-id11185 . -8) (undo-tree-id11186 . -8) (undo-tree-id11187 . -8) (undo-tree-id11188 . -8) (undo-tree-id11189 . -8) (undo-tree-id11190 . -8) 3260) nil (26651 52327 597639 0) 0 nil])
([nil nil ((#("well " 0 5 (fontified t)) . -3247) (undo-tree-id10881 . -5) (undo-tree-id10882 . -5) (undo-tree-id10883 . -5) (undo-tree-id10884 . -5) (undo-tree-id10885 . -5) (undo-tree-id10886 . -5) (undo-tree-id10887 . -5) (undo-tree-id10888 . -5) (undo-tree-id10889 . -5) (undo-tree-id10890 . -5) (undo-tree-id10891 . -5) (undo-tree-id10892 . -5) (undo-tree-id10893 . -5) (undo-tree-id10894 . -5) (undo-tree-id10895 . -5) (undo-tree-id10896 . -5) (undo-tree-id10897 . -5) (undo-tree-id10898 . -5) (undo-tree-id10899 . -5) (undo-tree-id10900 . -5) (undo-tree-id10901 . -5) (undo-tree-id10902 . -5) (undo-tree-id10903 . -5) (undo-tree-id10904 . -5) (undo-tree-id10905 . -5) (undo-tree-id10906 . -5) (undo-tree-id10907 . -5) (undo-tree-id10908 . -5) (undo-tree-id10909 . -5) (undo-tree-id10910 . -5) (undo-tree-id10911 . -5) (undo-tree-id10912 . -5) (undo-tree-id10913 . -5) (undo-tree-id10914 . -5) (undo-tree-id10915 . -5) (undo-tree-id10916 . -5) (undo-tree-id10917 . -5) (undo-tree-id10918 . -5) (undo-tree-id10919 . -5) (undo-tree-id10920 . -5) (undo-tree-id10921 . -5) (undo-tree-id10922 . -5) (undo-tree-id10923 . -5) (undo-tree-id10924 . -5) (undo-tree-id10925 . -5) (undo-tree-id10926 . -5) (undo-tree-id10927 . -5) (undo-tree-id10928 . -5) (undo-tree-id10929 . -5) (undo-tree-id10930 . -5) (undo-tree-id10931 . -5) (undo-tree-id10932 . -5) (undo-tree-id10933 . -5) (undo-tree-id10934 . -5) (undo-tree-id10935 . -5) (undo-tree-id10936 . -5) (undo-tree-id10937 . -5) (undo-tree-id10938 . -5) (undo-tree-id10939 . -5) (undo-tree-id10940 . -5) (undo-tree-id10941 . -5) (undo-tree-id10942 . -5) (undo-tree-id10943 . -5) (undo-tree-id10944 . -5) (undo-tree-id10945 . -5) (undo-tree-id10946 . -5) (undo-tree-id10947 . -5) (undo-tree-id10948 . -5) (undo-tree-id10949 . -5) (undo-tree-id10950 . -5) (undo-tree-id10951 . -5) (undo-tree-id10952 . -5) (undo-tree-id10953 . -5) (undo-tree-id10954 . -5) (undo-tree-id10955 . -5) (undo-tree-id10956 . -5) (undo-tree-id10957 . -5) (undo-tree-id10958 . -5) (undo-tree-id10959 . -5) (undo-tree-id10960 . -5) (undo-tree-id10961 . -5) (undo-tree-id10962 . -5) (undo-tree-id10963 . -5) (undo-tree-id10964 . -5) (undo-tree-id10965 . -5) (undo-tree-id10966 . -5) (undo-tree-id10967 . -5) (undo-tree-id10968 . -5) (undo-tree-id10969 . -5) (undo-tree-id10970 . -5) (undo-tree-id10971 . -5) (undo-tree-id10972 . -5) (undo-tree-id10973 . -5) (undo-tree-id10974 . -5) (undo-tree-id10975 . -5) (undo-tree-id10976 . -5) (undo-tree-id10977 . -5) (undo-tree-id10978 . -5) (undo-tree-id10979 . -5) (undo-tree-id10980 . -5) (undo-tree-id10981 . -5) (undo-tree-id10982 . -5) (undo-tree-id10983 . -5) (undo-tree-id10984 . -5) (undo-tree-id10985 . -5) (undo-tree-id10986 . -5) (undo-tree-id10987 . -5) (undo-tree-id10988 . -5) (undo-tree-id10989 . -5) (undo-tree-id10990 . -5) (undo-tree-id10991 . -5) (undo-tree-id10992 . -5) (undo-tree-id10993 . -5) (undo-tree-id10994 . -5) (undo-tree-id10995 . -5) (undo-tree-id10996 . -5) (undo-tree-id10997 . -5) (undo-tree-id10998 . -5) (undo-tree-id10999 . -5) (undo-tree-id11000 . -5) (undo-tree-id11001 . -5) (undo-tree-id11002 . -5) (undo-tree-id11003 . -5) (undo-tree-id11004 . -5) (undo-tree-id11005 . -5) (undo-tree-id11006 . -5) (undo-tree-id11007 . -5) (undo-tree-id11008 . -5) (undo-tree-id11009 . -5) (undo-tree-id11010 . -5) (undo-tree-id11011 . -5) (undo-tree-id11012 . -5) (undo-tree-id11013 . -5) (undo-tree-id11014 . -5) (undo-tree-id11015 . -5) (undo-tree-id11016 . -5) (undo-tree-id11017 . -5) (undo-tree-id11018 . -5) (undo-tree-id11019 . -5) (undo-tree-id11020 . -5) (undo-tree-id11021 . -5) (undo-tree-id11022 . -5) (undo-tree-id11023 . -5) (undo-tree-id11024 . -5) (undo-tree-id11025 . -5) (undo-tree-id11026 . -5) (undo-tree-id11027 . -5) (undo-tree-id11028 . -5) (undo-tree-id11029 . -5) (undo-tree-id11030 . -5) (undo-tree-id11031 . -5) (undo-tree-id11032 . -5) (undo-tree-id11033 . -5) (undo-tree-id11034 . -5) (undo-tree-id11035 . -5) (undo-tree-id11036 . -5) (undo-tree-id11037 . -5) 3252) nil (26651 52327 597393 0) 0 nil])
([nil nil ((#("theory " 0 7 (fontified t)) . -3240) (undo-tree-id10720 . -7) (undo-tree-id10721 . -7) (undo-tree-id10722 . -7) (undo-tree-id10723 . -7) (undo-tree-id10724 . -7) (undo-tree-id10725 . -7) (undo-tree-id10726 . -7) (undo-tree-id10727 . -7) (undo-tree-id10728 . -7) (undo-tree-id10729 . -7) (undo-tree-id10730 . -7) (undo-tree-id10731 . -7) (undo-tree-id10732 . -7) (undo-tree-id10733 . -7) (undo-tree-id10734 . -7) (undo-tree-id10735 . -7) (undo-tree-id10736 . -7) (undo-tree-id10737 . -7) (undo-tree-id10738 . -7) (undo-tree-id10739 . -7) (undo-tree-id10740 . -7) (undo-tree-id10741 . -7) (undo-tree-id10742 . -7) (undo-tree-id10743 . -7) (undo-tree-id10744 . -7) (undo-tree-id10745 . -7) (undo-tree-id10746 . -7) (undo-tree-id10747 . -7) (undo-tree-id10748 . -7) (undo-tree-id10749 . -7) (undo-tree-id10750 . -7) (undo-tree-id10751 . -7) (undo-tree-id10752 . -7) (undo-tree-id10753 . -7) (undo-tree-id10754 . -7) (undo-tree-id10755 . -7) (undo-tree-id10756 . -7) (undo-tree-id10757 . -7) (undo-tree-id10758 . -7) (undo-tree-id10759 . -7) (undo-tree-id10760 . -7) (undo-tree-id10761 . -7) (undo-tree-id10762 . -7) (undo-tree-id10763 . -7) (undo-tree-id10764 . -7) (undo-tree-id10765 . -7) (undo-tree-id10766 . -7) (undo-tree-id10767 . -7) (undo-tree-id10768 . -7) (undo-tree-id10769 . -7) (undo-tree-id10770 . -7) (undo-tree-id10771 . -7) (undo-tree-id10772 . -7) (undo-tree-id10773 . -7) (undo-tree-id10774 . -7) (undo-tree-id10775 . -7) (undo-tree-id10776 . -7) (undo-tree-id10777 . -7) (undo-tree-id10778 . -7) (undo-tree-id10779 . -7) (undo-tree-id10780 . -7) (undo-tree-id10781 . -7) (undo-tree-id10782 . -7) (undo-tree-id10783 . -7) (undo-tree-id10784 . -7) (undo-tree-id10785 . -7) (undo-tree-id10786 . -7) (undo-tree-id10787 . -7) (undo-tree-id10788 . -7) (undo-tree-id10789 . -7) (undo-tree-id10790 . -7) (undo-tree-id10791 . -7) (undo-tree-id10792 . -7) (undo-tree-id10793 . -7) (undo-tree-id10794 . -7) (undo-tree-id10795 . -7) (undo-tree-id10796 . -7) (undo-tree-id10797 . -7) (undo-tree-id10798 . -7) (undo-tree-id10799 . -7) (undo-tree-id10800 . -7) (undo-tree-id10801 . -7) (undo-tree-id10802 . -7) (undo-tree-id10803 . -7) (undo-tree-id10804 . -7) (undo-tree-id10805 . -7) (undo-tree-id10806 . -7) (undo-tree-id10807 . -7) (undo-tree-id10808 . -7) (undo-tree-id10809 . -7) (undo-tree-id10810 . -7) (undo-tree-id10811 . -7) (undo-tree-id10812 . -7) (undo-tree-id10813 . -7) (undo-tree-id10814 . -7) (undo-tree-id10815 . -7) (undo-tree-id10816 . -7) (undo-tree-id10817 . -7) (undo-tree-id10818 . -7) (undo-tree-id10819 . -7) (undo-tree-id10820 . -7) (undo-tree-id10821 . -7) (undo-tree-id10822 . -7) (undo-tree-id10823 . -7) (undo-tree-id10824 . -7) (undo-tree-id10825 . -7) (undo-tree-id10826 . -7) (undo-tree-id10827 . -7) (undo-tree-id10828 . -7) (undo-tree-id10829 . -7) (undo-tree-id10830 . -7) (undo-tree-id10831 . -7) (undo-tree-id10832 . -7) (undo-tree-id10833 . -7) (undo-tree-id10834 . -7) (undo-tree-id10835 . -7) (undo-tree-id10836 . -7) (undo-tree-id10837 . -7) (undo-tree-id10838 . -7) (undo-tree-id10839 . -7) (undo-tree-id10840 . -7) (undo-tree-id10841 . -7) (undo-tree-id10842 . -7) (undo-tree-id10843 . -7) (undo-tree-id10844 . -7) (undo-tree-id10845 . -7) (undo-tree-id10846 . -7) (undo-tree-id10847 . -7) (undo-tree-id10848 . -7) (undo-tree-id10849 . -7) (undo-tree-id10850 . -7) (undo-tree-id10851 . -7) (undo-tree-id10852 . -7) (undo-tree-id10853 . -7) (undo-tree-id10854 . -7) (undo-tree-id10855 . -7) (undo-tree-id10856 . -7) (undo-tree-id10857 . -7) (undo-tree-id10858 . -7) (undo-tree-id10859 . -7) (undo-tree-id10860 . -7) (undo-tree-id10861 . -7) (undo-tree-id10862 . -7) (undo-tree-id10863 . -7) (undo-tree-id10864 . -7) (undo-tree-id10865 . -7) (undo-tree-id10866 . -7) (undo-tree-id10867 . -7) (undo-tree-id10868 . -7) (undo-tree-id10869 . -7) (undo-tree-id10870 . -7) (undo-tree-id10871 . -7) (undo-tree-id10872 . -7) (undo-tree-id10873 . -7) (undo-tree-id10874 . -7) (undo-tree-id10875 . -7) (undo-tree-id10876 . -7) (undo-tree-id10877 . -7) (undo-tree-id10878 . -7) (undo-tree-id10879 . -7) (undo-tree-id10880 . -7) 3247) nil (26651 52327 597146 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -3236) (undo-tree-id10555 . -4) (undo-tree-id10556 . -4) (undo-tree-id10557 . -4) (undo-tree-id10558 . -4) (undo-tree-id10559 . -4) (undo-tree-id10560 . -4) (undo-tree-id10561 . -4) (undo-tree-id10562 . -4) (undo-tree-id10563 . -4) (undo-tree-id10564 . -4) (undo-tree-id10565 . -4) (undo-tree-id10566 . -4) (undo-tree-id10567 . -4) (undo-tree-id10568 . -4) (undo-tree-id10569 . -4) (undo-tree-id10570 . -4) (undo-tree-id10571 . -4) (undo-tree-id10572 . -4) (undo-tree-id10573 . -4) (undo-tree-id10574 . -4) (undo-tree-id10575 . -4) (undo-tree-id10576 . -4) (undo-tree-id10577 . -4) (undo-tree-id10578 . -4) (undo-tree-id10579 . -4) (undo-tree-id10580 . -4) (undo-tree-id10581 . -4) (undo-tree-id10582 . -4) (undo-tree-id10583 . -4) (undo-tree-id10584 . -4) (undo-tree-id10585 . -4) (undo-tree-id10586 . -4) (undo-tree-id10587 . -4) (undo-tree-id10588 . -4) (undo-tree-id10589 . -4) (undo-tree-id10590 . -4) (undo-tree-id10591 . -4) (undo-tree-id10592 . -4) (undo-tree-id10593 . -4) (undo-tree-id10594 . -4) (undo-tree-id10595 . -4) (undo-tree-id10596 . -4) (undo-tree-id10597 . -4) (undo-tree-id10598 . -4) (undo-tree-id10599 . -4) (undo-tree-id10600 . -4) (undo-tree-id10601 . -4) (undo-tree-id10602 . -4) (undo-tree-id10603 . -4) (undo-tree-id10604 . -4) (undo-tree-id10605 . -4) (undo-tree-id10606 . -4) (undo-tree-id10607 . -4) (undo-tree-id10608 . -4) (undo-tree-id10609 . -4) (undo-tree-id10610 . -4) (undo-tree-id10611 . -4) (undo-tree-id10612 . -4) (undo-tree-id10613 . -4) (undo-tree-id10614 . -4) (undo-tree-id10615 . -4) (undo-tree-id10616 . -4) (undo-tree-id10617 . -4) (undo-tree-id10618 . -4) (undo-tree-id10619 . -4) (undo-tree-id10620 . -4) (undo-tree-id10621 . -4) (undo-tree-id10622 . -4) (undo-tree-id10623 . -4) (undo-tree-id10624 . -4) (undo-tree-id10625 . -4) (undo-tree-id10626 . -4) (undo-tree-id10627 . -4) (undo-tree-id10628 . -4) (undo-tree-id10629 . -4) (undo-tree-id10630 . -4) (undo-tree-id10631 . -4) (undo-tree-id10632 . -4) (undo-tree-id10633 . -4) (undo-tree-id10634 . -4) (undo-tree-id10635 . -4) (undo-tree-id10636 . -4) (undo-tree-id10637 . -4) (undo-tree-id10638 . -4) (undo-tree-id10639 . -4) (undo-tree-id10640 . -4) (undo-tree-id10641 . -4) (undo-tree-id10642 . -4) (undo-tree-id10643 . -4) (undo-tree-id10644 . -4) (undo-tree-id10645 . -4) (undo-tree-id10646 . -4) (undo-tree-id10647 . -4) (undo-tree-id10648 . -4) (undo-tree-id10649 . -4) (undo-tree-id10650 . -4) (undo-tree-id10651 . -4) (undo-tree-id10652 . -4) (undo-tree-id10653 . -4) (undo-tree-id10654 . -4) (undo-tree-id10655 . -4) (undo-tree-id10656 . -4) (undo-tree-id10657 . -4) (undo-tree-id10658 . -4) (undo-tree-id10659 . -4) (undo-tree-id10660 . -4) (undo-tree-id10661 . -4) (undo-tree-id10662 . -4) (undo-tree-id10663 . -4) (undo-tree-id10664 . -4) (undo-tree-id10665 . -4) (undo-tree-id10666 . -4) (undo-tree-id10667 . -4) (undo-tree-id10668 . -4) (undo-tree-id10669 . -4) (undo-tree-id10670 . -4) (undo-tree-id10671 . -4) (undo-tree-id10672 . -4) (undo-tree-id10673 . -4) (undo-tree-id10674 . -4) (undo-tree-id10675 . -4) (undo-tree-id10676 . -4) (undo-tree-id10677 . -4) (undo-tree-id10678 . -4) (undo-tree-id10679 . -4) (undo-tree-id10680 . -4) (undo-tree-id10681 . -4) (undo-tree-id10682 . -4) (undo-tree-id10683 . -4) (undo-tree-id10684 . -4) (undo-tree-id10685 . -4) (undo-tree-id10686 . -4) (undo-tree-id10687 . -4) (undo-tree-id10688 . -4) (undo-tree-id10689 . -4) (undo-tree-id10690 . -4) (undo-tree-id10691 . -4) (undo-tree-id10692 . -4) (undo-tree-id10693 . -4) (undo-tree-id10694 . -4) (undo-tree-id10695 . -4) (undo-tree-id10696 . -4) (undo-tree-id10697 . -4) (undo-tree-id10698 . -4) (undo-tree-id10699 . -4) (undo-tree-id10700 . -4) (undo-tree-id10701 . -4) (undo-tree-id10702 . -4) (undo-tree-id10703 . -4) (undo-tree-id10704 . -4) (undo-tree-id10705 . -4) (undo-tree-id10706 . -4) (undo-tree-id10707 . -4) (undo-tree-id10708 . -4) (undo-tree-id10709 . -4) (undo-tree-id10710 . -4) (undo-tree-id10711 . -4) (undo-tree-id10712 . -4) (undo-tree-id10713 . -4) (undo-tree-id10714 . -4) (undo-tree-id10715 . -4) (undo-tree-id10716 . -4) (undo-tree-id10717 . -4) (undo-tree-id10718 . -4) (undo-tree-id10719 . -4) 3240) nil (26651 52327 596889 0) 0 nil])
([nil nil ((#("knew
" 0 5 (fontified t)) . -3231) (undo-tree-id10385 . -5) (undo-tree-id10386 . -5) (undo-tree-id10387 . -5) (undo-tree-id10388 . -5) (undo-tree-id10389 . -5) (undo-tree-id10390 . -5) (undo-tree-id10391 . -5) (undo-tree-id10392 . -5) (undo-tree-id10393 . -5) (undo-tree-id10394 . -5) (undo-tree-id10395 . -5) (undo-tree-id10396 . -5) (undo-tree-id10397 . -5) (undo-tree-id10398 . -5) (undo-tree-id10399 . -5) (undo-tree-id10400 . -5) (undo-tree-id10401 . -5) (undo-tree-id10402 . -5) (undo-tree-id10403 . -5) (undo-tree-id10404 . -5) (undo-tree-id10405 . -5) (undo-tree-id10406 . -5) (undo-tree-id10407 . -5) (undo-tree-id10408 . -5) (undo-tree-id10409 . -5) (undo-tree-id10410 . -5) (undo-tree-id10411 . -5) (undo-tree-id10412 . -5) (undo-tree-id10413 . -5) (undo-tree-id10414 . -5) (undo-tree-id10415 . -5) (undo-tree-id10416 . -5) (undo-tree-id10417 . -5) (undo-tree-id10418 . -5) (undo-tree-id10419 . -5) (undo-tree-id10420 . -5) (undo-tree-id10421 . -5) (undo-tree-id10422 . -5) (undo-tree-id10423 . -5) (undo-tree-id10424 . -5) (undo-tree-id10425 . -5) (undo-tree-id10426 . -5) (undo-tree-id10427 . -5) (undo-tree-id10428 . -5) (undo-tree-id10429 . -5) (undo-tree-id10430 . -5) (undo-tree-id10431 . -5) (undo-tree-id10432 . -5) (undo-tree-id10433 . -5) (undo-tree-id10434 . -5) (undo-tree-id10435 . -5) (undo-tree-id10436 . -5) (undo-tree-id10437 . -5) (undo-tree-id10438 . -5) (undo-tree-id10439 . -5) (undo-tree-id10440 . -5) (undo-tree-id10441 . -5) (undo-tree-id10442 . -5) (undo-tree-id10443 . -5) (undo-tree-id10444 . -5) (undo-tree-id10445 . -5) (undo-tree-id10446 . -5) (undo-tree-id10447 . -5) (undo-tree-id10448 . -5) (undo-tree-id10449 . -5) (undo-tree-id10450 . -5) (undo-tree-id10451 . -5) (undo-tree-id10452 . -5) (undo-tree-id10453 . -5) (undo-tree-id10454 . -5) (undo-tree-id10455 . -5) (undo-tree-id10456 . -5) (undo-tree-id10457 . -5) (undo-tree-id10458 . -5) (undo-tree-id10459 . -5) (undo-tree-id10460 . -5) (undo-tree-id10461 . -5) (undo-tree-id10462 . -5) (undo-tree-id10463 . -5) (undo-tree-id10464 . -5) (undo-tree-id10465 . -5) (undo-tree-id10466 . -5) (undo-tree-id10467 . -5) (undo-tree-id10468 . -5) (undo-tree-id10469 . -5) (undo-tree-id10470 . -5) (undo-tree-id10471 . -5) (undo-tree-id10472 . -5) (undo-tree-id10473 . -5) (undo-tree-id10474 . -5) (undo-tree-id10475 . -5) (undo-tree-id10476 . -5) (undo-tree-id10477 . -5) (undo-tree-id10478 . -5) (undo-tree-id10479 . -5) (undo-tree-id10480 . -5) (undo-tree-id10481 . -5) (undo-tree-id10482 . -5) (undo-tree-id10483 . -5) (undo-tree-id10484 . -5) (undo-tree-id10485 . -5) (undo-tree-id10486 . -5) (undo-tree-id10487 . -5) (undo-tree-id10488 . -5) (undo-tree-id10489 . -5) (undo-tree-id10490 . -5) (undo-tree-id10491 . -5) (undo-tree-id10492 . -5) (undo-tree-id10493 . -5) (undo-tree-id10494 . -5) (undo-tree-id10495 . -5) (undo-tree-id10496 . -5) (undo-tree-id10497 . -5) (undo-tree-id10498 . -5) (undo-tree-id10499 . -5) (undo-tree-id10500 . -5) (undo-tree-id10501 . -5) (undo-tree-id10502 . -5) (undo-tree-id10503 . -5) (undo-tree-id10504 . -5) (undo-tree-id10505 . -5) (undo-tree-id10506 . -5) (undo-tree-id10507 . -5) (undo-tree-id10508 . -5) (undo-tree-id10509 . -5) (undo-tree-id10510 . -5) (undo-tree-id10511 . -5) (undo-tree-id10512 . -5) (undo-tree-id10513 . -5) (undo-tree-id10514 . -5) (undo-tree-id10515 . -5) (undo-tree-id10516 . -5) (undo-tree-id10517 . -5) (undo-tree-id10518 . -5) (undo-tree-id10519 . -5) (undo-tree-id10520 . -5) (undo-tree-id10521 . -5) (undo-tree-id10522 . -5) (undo-tree-id10523 . -5) (undo-tree-id10524 . -5) (undo-tree-id10525 . -5) (undo-tree-id10526 . -5) (undo-tree-id10527 . -5) (undo-tree-id10528 . -5) (undo-tree-id10529 . -5) (undo-tree-id10530 . -5) (undo-tree-id10531 . -5) (undo-tree-id10532 . -5) (undo-tree-id10533 . -5) (undo-tree-id10534 . -5) (undo-tree-id10535 . -5) (undo-tree-id10536 . -5) (undo-tree-id10537 . -5) (undo-tree-id10538 . -5) (undo-tree-id10539 . -5) (undo-tree-id10540 . -5) (undo-tree-id10541 . -5) (undo-tree-id10542 . -5) (undo-tree-id10543 . -5) (undo-tree-id10544 . -5) (undo-tree-id10545 . -5) (undo-tree-id10546 . -5) (undo-tree-id10547 . -5) (undo-tree-id10548 . -5) (undo-tree-id10549 . -5) (undo-tree-id10550 . -5) (undo-tree-id10551 . -5) (undo-tree-id10552 . -5) (undo-tree-id10553 . -5) (undo-tree-id10554 . -5) 3236) nil (26651 52327 596627 0) 0 nil])
([nil nil ((#("I " 0 2 (fontified t)) . -3229) (undo-tree-id10212 . -2) (undo-tree-id10213 . -2) (undo-tree-id10214 . -2) (undo-tree-id10215 . -2) (undo-tree-id10216 . -2) (undo-tree-id10217 . -2) (undo-tree-id10218 . -2) (undo-tree-id10219 . -2) (undo-tree-id10220 . -2) (undo-tree-id10221 . -2) (undo-tree-id10222 . -2) (undo-tree-id10223 . -2) (undo-tree-id10224 . -2) (undo-tree-id10225 . -2) (undo-tree-id10226 . -2) (undo-tree-id10227 . -2) (undo-tree-id10228 . -2) (undo-tree-id10229 . -2) (undo-tree-id10230 . -2) (undo-tree-id10231 . -2) (undo-tree-id10232 . -2) (undo-tree-id10233 . -2) (undo-tree-id10234 . -2) (undo-tree-id10235 . -2) (undo-tree-id10236 . -2) (undo-tree-id10237 . -2) (undo-tree-id10238 . -2) (undo-tree-id10239 . -2) (undo-tree-id10240 . -2) (undo-tree-id10241 . -2) (undo-tree-id10242 . -2) (undo-tree-id10243 . -2) (undo-tree-id10244 . -2) (undo-tree-id10245 . -2) (undo-tree-id10246 . -2) (undo-tree-id10247 . -2) (undo-tree-id10248 . -2) (undo-tree-id10249 . -2) (undo-tree-id10250 . -2) (undo-tree-id10251 . -2) (undo-tree-id10252 . -2) (undo-tree-id10253 . -2) (undo-tree-id10254 . -2) (undo-tree-id10255 . -2) (undo-tree-id10256 . -2) (undo-tree-id10257 . -2) (undo-tree-id10258 . -2) (undo-tree-id10259 . -2) (undo-tree-id10260 . -2) (undo-tree-id10261 . -2) (undo-tree-id10262 . -2) (undo-tree-id10263 . -2) (undo-tree-id10264 . -2) (undo-tree-id10265 . -2) (undo-tree-id10266 . -2) (undo-tree-id10267 . -2) (undo-tree-id10268 . -2) (undo-tree-id10269 . -2) (undo-tree-id10270 . -2) (undo-tree-id10271 . -2) (undo-tree-id10272 . -2) (undo-tree-id10273 . -2) (undo-tree-id10274 . -2) (undo-tree-id10275 . -2) (undo-tree-id10276 . -2) (undo-tree-id10277 . -2) (undo-tree-id10278 . -2) (undo-tree-id10279 . -2) (undo-tree-id10280 . -2) (undo-tree-id10281 . -2) (undo-tree-id10282 . -2) (undo-tree-id10283 . -2) (undo-tree-id10284 . -2) (undo-tree-id10285 . -2) (undo-tree-id10286 . -2) (undo-tree-id10287 . -2) (undo-tree-id10288 . -2) (undo-tree-id10289 . -2) (undo-tree-id10290 . -2) (undo-tree-id10291 . -2) (undo-tree-id10292 . -2) (undo-tree-id10293 . -2) (undo-tree-id10294 . -2) (undo-tree-id10295 . -2) (undo-tree-id10296 . -2) (undo-tree-id10297 . -2) (undo-tree-id10298 . -2) (undo-tree-id10299 . -2) (undo-tree-id10300 . -2) (undo-tree-id10301 . -2) (undo-tree-id10302 . -2) (undo-tree-id10303 . -2) (undo-tree-id10304 . -2) (undo-tree-id10305 . -2) (undo-tree-id10306 . -2) (undo-tree-id10307 . -2) (undo-tree-id10308 . -2) (undo-tree-id10309 . -2) (undo-tree-id10310 . -2) (undo-tree-id10311 . -2) (undo-tree-id10312 . -2) (undo-tree-id10313 . -2) (undo-tree-id10314 . -2) (undo-tree-id10315 . -2) (undo-tree-id10316 . -2) (undo-tree-id10317 . -2) (undo-tree-id10318 . -2) (undo-tree-id10319 . -2) (undo-tree-id10320 . -2) (undo-tree-id10321 . -2) (undo-tree-id10322 . -2) (undo-tree-id10323 . -2) (undo-tree-id10324 . -2) (undo-tree-id10325 . -2) (undo-tree-id10326 . -2) (undo-tree-id10327 . -2) (undo-tree-id10328 . -2) (undo-tree-id10329 . -2) (undo-tree-id10330 . -2) (undo-tree-id10331 . -2) (undo-tree-id10332 . -2) (undo-tree-id10333 . -2) (undo-tree-id10334 . -2) (undo-tree-id10335 . -2) (undo-tree-id10336 . -2) (undo-tree-id10337 . -2) (undo-tree-id10338 . -2) (undo-tree-id10339 . -2) (undo-tree-id10340 . -2) (undo-tree-id10341 . -2) (undo-tree-id10342 . -2) (undo-tree-id10343 . -2) (undo-tree-id10344 . -2) (undo-tree-id10345 . -2) (undo-tree-id10346 . -2) (undo-tree-id10347 . -2) (undo-tree-id10348 . -2) (undo-tree-id10349 . -2) (undo-tree-id10350 . -2) (undo-tree-id10351 . -2) (undo-tree-id10352 . -2) (undo-tree-id10353 . -2) (undo-tree-id10354 . -2) (undo-tree-id10355 . -2) (undo-tree-id10356 . -2) (undo-tree-id10357 . -2) (undo-tree-id10358 . -2) (undo-tree-id10359 . -2) (undo-tree-id10360 . -2) (undo-tree-id10361 . -2) (undo-tree-id10362 . -2) (undo-tree-id10363 . -2) (undo-tree-id10364 . -2) (undo-tree-id10365 . -2) (undo-tree-id10366 . -2) (undo-tree-id10367 . -2) (undo-tree-id10368 . -2) (undo-tree-id10369 . -2) (undo-tree-id10370 . -2) (undo-tree-id10371 . -2) (undo-tree-id10372 . -2) (undo-tree-id10373 . -2) (undo-tree-id10374 . -2) (undo-tree-id10375 . -2) (undo-tree-id10376 . -2) (undo-tree-id10377 . -2) (undo-tree-id10378 . -2) (undo-tree-id10379 . -2) (undo-tree-id10380 . -2) (undo-tree-id10381 . -2) (undo-tree-id10382 . -2) (undo-tree-id10383 . -2) (undo-tree-id10384 . -2) 3231) nil (26651 52327 596356 0) 0 nil])
([nil nil ((#("if " 0 3 (fontified t)) . -3226) (undo-tree-id10035 . -3) (undo-tree-id10036 . -3) (undo-tree-id10037 . -3) (undo-tree-id10038 . -3) (undo-tree-id10039 . -3) (undo-tree-id10040 . -3) (undo-tree-id10041 . -3) (undo-tree-id10042 . -3) (undo-tree-id10043 . -3) (undo-tree-id10044 . -3) (undo-tree-id10045 . -3) (undo-tree-id10046 . -3) (undo-tree-id10047 . -3) (undo-tree-id10048 . -3) (undo-tree-id10049 . -3) (undo-tree-id10050 . -3) (undo-tree-id10051 . -3) (undo-tree-id10052 . -3) (undo-tree-id10053 . -3) (undo-tree-id10054 . -3) (undo-tree-id10055 . -3) (undo-tree-id10056 . -3) (undo-tree-id10057 . -3) (undo-tree-id10058 . -3) (undo-tree-id10059 . -3) (undo-tree-id10060 . -3) (undo-tree-id10061 . -3) (undo-tree-id10062 . -3) (undo-tree-id10063 . -3) (undo-tree-id10064 . -3) (undo-tree-id10065 . -3) (undo-tree-id10066 . -3) (undo-tree-id10067 . -3) (undo-tree-id10068 . -3) (undo-tree-id10069 . -3) (undo-tree-id10070 . -3) (undo-tree-id10071 . -3) (undo-tree-id10072 . -3) (undo-tree-id10073 . -3) (undo-tree-id10074 . -3) (undo-tree-id10075 . -3) (undo-tree-id10076 . -3) (undo-tree-id10077 . -3) (undo-tree-id10078 . -3) (undo-tree-id10079 . -3) (undo-tree-id10080 . -3) (undo-tree-id10081 . -3) (undo-tree-id10082 . -3) (undo-tree-id10083 . -3) (undo-tree-id10084 . -3) (undo-tree-id10085 . -3) (undo-tree-id10086 . -3) (undo-tree-id10087 . -3) (undo-tree-id10088 . -3) (undo-tree-id10089 . -3) (undo-tree-id10090 . -3) (undo-tree-id10091 . -3) (undo-tree-id10092 . -3) (undo-tree-id10093 . -3) (undo-tree-id10094 . -3) (undo-tree-id10095 . -3) (undo-tree-id10096 . -3) (undo-tree-id10097 . -3) (undo-tree-id10098 . -3) (undo-tree-id10099 . -3) (undo-tree-id10100 . -3) (undo-tree-id10101 . -3) (undo-tree-id10102 . -3) (undo-tree-id10103 . -3) (undo-tree-id10104 . -3) (undo-tree-id10105 . -3) (undo-tree-id10106 . -3) (undo-tree-id10107 . -3) (undo-tree-id10108 . -3) (undo-tree-id10109 . -3) (undo-tree-id10110 . -3) (undo-tree-id10111 . -3) (undo-tree-id10112 . -3) (undo-tree-id10113 . -3) (undo-tree-id10114 . -3) (undo-tree-id10115 . -3) (undo-tree-id10116 . -3) (undo-tree-id10117 . -3) (undo-tree-id10118 . -3) (undo-tree-id10119 . -3) (undo-tree-id10120 . -3) (undo-tree-id10121 . -3) (undo-tree-id10122 . -3) (undo-tree-id10123 . -3) (undo-tree-id10124 . -3) (undo-tree-id10125 . -3) (undo-tree-id10126 . -3) (undo-tree-id10127 . -3) (undo-tree-id10128 . -3) (undo-tree-id10129 . -3) (undo-tree-id10130 . -3) (undo-tree-id10131 . -3) (undo-tree-id10132 . -3) (undo-tree-id10133 . -3) (undo-tree-id10134 . -3) (undo-tree-id10135 . -3) (undo-tree-id10136 . -3) (undo-tree-id10137 . -3) (undo-tree-id10138 . -3) (undo-tree-id10139 . -3) (undo-tree-id10140 . -3) (undo-tree-id10141 . -3) (undo-tree-id10142 . -3) (undo-tree-id10143 . -3) (undo-tree-id10144 . -3) (undo-tree-id10145 . -3) (undo-tree-id10146 . -3) (undo-tree-id10147 . -3) (undo-tree-id10148 . -3) (undo-tree-id10149 . -3) (undo-tree-id10150 . -3) (undo-tree-id10151 . -3) (undo-tree-id10152 . -3) (undo-tree-id10153 . -3) (undo-tree-id10154 . -3) (undo-tree-id10155 . -3) (undo-tree-id10156 . -3) (undo-tree-id10157 . -3) (undo-tree-id10158 . -3) (undo-tree-id10159 . -3) (undo-tree-id10160 . -3) (undo-tree-id10161 . -3) (undo-tree-id10162 . -3) (undo-tree-id10163 . -3) (undo-tree-id10164 . -3) (undo-tree-id10165 . -3) (undo-tree-id10166 . -3) (undo-tree-id10167 . -3) (undo-tree-id10168 . -3) (undo-tree-id10169 . -3) (undo-tree-id10170 . -3) (undo-tree-id10171 . -3) (undo-tree-id10172 . -3) (undo-tree-id10173 . -3) (undo-tree-id10174 . -3) (undo-tree-id10175 . -3) (undo-tree-id10176 . -3) (undo-tree-id10177 . -3) (undo-tree-id10178 . -3) (undo-tree-id10179 . -3) (undo-tree-id10180 . -3) (undo-tree-id10181 . -3) (undo-tree-id10182 . -3) (undo-tree-id10183 . -3) (undo-tree-id10184 . -3) (undo-tree-id10185 . -3) (undo-tree-id10186 . -3) (undo-tree-id10187 . -3) (undo-tree-id10188 . -3) (undo-tree-id10189 . -3) (undo-tree-id10190 . -3) (undo-tree-id10191 . -3) (undo-tree-id10192 . -3) (undo-tree-id10193 . -3) (undo-tree-id10194 . -3) (undo-tree-id10195 . -3) (undo-tree-id10196 . -3) (undo-tree-id10197 . -3) (undo-tree-id10198 . -3) (undo-tree-id10199 . -3) (undo-tree-id10200 . -3) (undo-tree-id10201 . -3) (undo-tree-id10202 . -3) (undo-tree-id10203 . -3) (undo-tree-id10204 . -3) (undo-tree-id10205 . -3) (undo-tree-id10206 . -3) (undo-tree-id10207 . -3) (undo-tree-id10208 . -3) (undo-tree-id10209 . -3) (undo-tree-id10210 . -3) (undo-tree-id10211 . -3) 3229) nil (26651 52327 596084 0) 0 nil])
([nil nil ((#("code " 0 5 (fontified t)) . -3221) (undo-tree-id9854 . -5) (undo-tree-id9855 . -5) (undo-tree-id9856 . -5) (undo-tree-id9857 . -5) (undo-tree-id9858 . -5) (undo-tree-id9859 . -5) (undo-tree-id9860 . -5) (undo-tree-id9861 . -5) (undo-tree-id9862 . -5) (undo-tree-id9863 . -5) (undo-tree-id9864 . -5) (undo-tree-id9865 . -5) (undo-tree-id9866 . -5) (undo-tree-id9867 . -5) (undo-tree-id9868 . -5) (undo-tree-id9869 . -5) (undo-tree-id9870 . -5) (undo-tree-id9871 . -5) (undo-tree-id9872 . -5) (undo-tree-id9873 . -5) (undo-tree-id9874 . -5) (undo-tree-id9875 . -5) (undo-tree-id9876 . -5) (undo-tree-id9877 . -5) (undo-tree-id9878 . -5) (undo-tree-id9879 . -5) (undo-tree-id9880 . -5) (undo-tree-id9881 . -5) (undo-tree-id9882 . -5) (undo-tree-id9883 . -5) (undo-tree-id9884 . -5) (undo-tree-id9885 . -5) (undo-tree-id9886 . -5) (undo-tree-id9887 . -5) (undo-tree-id9888 . -5) (undo-tree-id9889 . -5) (undo-tree-id9890 . -5) (undo-tree-id9891 . -5) (undo-tree-id9892 . -5) (undo-tree-id9893 . -5) (undo-tree-id9894 . -5) (undo-tree-id9895 . -5) (undo-tree-id9896 . -5) (undo-tree-id9897 . -5) (undo-tree-id9898 . -5) (undo-tree-id9899 . -5) (undo-tree-id9900 . -5) (undo-tree-id9901 . -5) (undo-tree-id9902 . -5) (undo-tree-id9903 . -5) (undo-tree-id9904 . -5) (undo-tree-id9905 . -5) (undo-tree-id9906 . -5) (undo-tree-id9907 . -5) (undo-tree-id9908 . -5) (undo-tree-id9909 . -5) (undo-tree-id9910 . -5) (undo-tree-id9911 . -5) (undo-tree-id9912 . -5) (undo-tree-id9913 . -5) (undo-tree-id9914 . -5) (undo-tree-id9915 . -5) (undo-tree-id9916 . -5) (undo-tree-id9917 . -5) (undo-tree-id9918 . -5) (undo-tree-id9919 . -5) (undo-tree-id9920 . -5) (undo-tree-id9921 . -5) (undo-tree-id9922 . -5) (undo-tree-id9923 . -5) (undo-tree-id9924 . -5) (undo-tree-id9925 . -5) (undo-tree-id9926 . -5) (undo-tree-id9927 . -5) (undo-tree-id9928 . -5) (undo-tree-id9929 . -5) (undo-tree-id9930 . -5) (undo-tree-id9931 . -5) (undo-tree-id9932 . -5) (undo-tree-id9933 . -5) (undo-tree-id9934 . -5) (undo-tree-id9935 . -5) (undo-tree-id9936 . -5) (undo-tree-id9937 . -5) (undo-tree-id9938 . -5) (undo-tree-id9939 . -5) (undo-tree-id9940 . -5) (undo-tree-id9941 . -5) (undo-tree-id9942 . -5) (undo-tree-id9943 . -5) (undo-tree-id9944 . -5) (undo-tree-id9945 . -5) (undo-tree-id9946 . -5) (undo-tree-id9947 . -5) (undo-tree-id9948 . -5) (undo-tree-id9949 . -5) (undo-tree-id9950 . -5) (undo-tree-id9951 . -5) (undo-tree-id9952 . -5) (undo-tree-id9953 . -5) (undo-tree-id9954 . -5) (undo-tree-id9955 . -5) (undo-tree-id9956 . -5) (undo-tree-id9957 . -5) (undo-tree-id9958 . -5) (undo-tree-id9959 . -5) (undo-tree-id9960 . -5) (undo-tree-id9961 . -5) (undo-tree-id9962 . -5) (undo-tree-id9963 . -5) (undo-tree-id9964 . -5) (undo-tree-id9965 . -5) (undo-tree-id9966 . -5) (undo-tree-id9967 . -5) (undo-tree-id9968 . -5) (undo-tree-id9969 . -5) (undo-tree-id9970 . -5) (undo-tree-id9971 . -5) (undo-tree-id9972 . -5) (undo-tree-id9973 . -5) (undo-tree-id9974 . -5) (undo-tree-id9975 . -5) (undo-tree-id9976 . -5) (undo-tree-id9977 . -5) (undo-tree-id9978 . -5) (undo-tree-id9979 . -5) (undo-tree-id9980 . -5) (undo-tree-id9981 . -5) (undo-tree-id9982 . -5) (undo-tree-id9983 . -5) (undo-tree-id9984 . -5) (undo-tree-id9985 . -5) (undo-tree-id9986 . -5) (undo-tree-id9987 . -5) (undo-tree-id9988 . -5) (undo-tree-id9989 . -5) (undo-tree-id9990 . -5) (undo-tree-id9991 . -5) (undo-tree-id9992 . -5) (undo-tree-id9993 . -5) (undo-tree-id9994 . -5) (undo-tree-id9995 . -5) (undo-tree-id9996 . -5) (undo-tree-id9997 . -5) (undo-tree-id9998 . -5) (undo-tree-id9999 . -5) (undo-tree-id10000 . -5) (undo-tree-id10001 . -5) (undo-tree-id10002 . -5) (undo-tree-id10003 . -5) (undo-tree-id10004 . -5) (undo-tree-id10005 . -5) (undo-tree-id10006 . -5) (undo-tree-id10007 . -5) (undo-tree-id10008 . -5) (undo-tree-id10009 . -5) (undo-tree-id10010 . -5) (undo-tree-id10011 . -5) (undo-tree-id10012 . -5) (undo-tree-id10013 . -5) (undo-tree-id10014 . -5) (undo-tree-id10015 . -5) (undo-tree-id10016 . -5) (undo-tree-id10017 . -5) (undo-tree-id10018 . -5) (undo-tree-id10019 . -5) (undo-tree-id10020 . -5) (undo-tree-id10021 . -5) (undo-tree-id10022 . -5) (undo-tree-id10023 . -5) (undo-tree-id10024 . -5) (undo-tree-id10025 . -5) (undo-tree-id10026 . -5) (undo-tree-id10027 . -5) (undo-tree-id10028 . -5) (undo-tree-id10029 . -5) (undo-tree-id10030 . -5) (undo-tree-id10031 . -5) (undo-tree-id10032 . -5) (undo-tree-id10033 . -5) (undo-tree-id10034 . -5) 3226) nil (26651 52327 595584 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -3217) (undo-tree-id9669 . -4) (undo-tree-id9670 . -4) (undo-tree-id9671 . -4) (undo-tree-id9672 . -4) (undo-tree-id9673 . -4) (undo-tree-id9674 . -4) (undo-tree-id9675 . -4) (undo-tree-id9676 . -4) (undo-tree-id9677 . -4) (undo-tree-id9678 . -4) (undo-tree-id9679 . -4) (undo-tree-id9680 . -4) (undo-tree-id9681 . -4) (undo-tree-id9682 . -4) (undo-tree-id9683 . -4) (undo-tree-id9684 . -4) (undo-tree-id9685 . -4) (undo-tree-id9686 . -4) (undo-tree-id9687 . -4) (undo-tree-id9688 . -4) (undo-tree-id9689 . -4) (undo-tree-id9690 . -4) (undo-tree-id9691 . -4) (undo-tree-id9692 . -4) (undo-tree-id9693 . -4) (undo-tree-id9694 . -4) (undo-tree-id9695 . -4) (undo-tree-id9696 . -4) (undo-tree-id9697 . -4) (undo-tree-id9698 . -4) (undo-tree-id9699 . -4) (undo-tree-id9700 . -4) (undo-tree-id9701 . -4) (undo-tree-id9702 . -4) (undo-tree-id9703 . -4) (undo-tree-id9704 . -4) (undo-tree-id9705 . -4) (undo-tree-id9706 . -4) (undo-tree-id9707 . -4) (undo-tree-id9708 . -4) (undo-tree-id9709 . -4) (undo-tree-id9710 . -4) (undo-tree-id9711 . -4) (undo-tree-id9712 . -4) (undo-tree-id9713 . -4) (undo-tree-id9714 . -4) (undo-tree-id9715 . -4) (undo-tree-id9716 . -4) (undo-tree-id9717 . -4) (undo-tree-id9718 . -4) (undo-tree-id9719 . -4) (undo-tree-id9720 . -4) (undo-tree-id9721 . -4) (undo-tree-id9722 . -4) (undo-tree-id9723 . -4) (undo-tree-id9724 . -4) (undo-tree-id9725 . -4) (undo-tree-id9726 . -4) (undo-tree-id9727 . -4) (undo-tree-id9728 . -4) (undo-tree-id9729 . -4) (undo-tree-id9730 . -4) (undo-tree-id9731 . -4) (undo-tree-id9732 . -4) (undo-tree-id9733 . -4) (undo-tree-id9734 . -4) (undo-tree-id9735 . -4) (undo-tree-id9736 . -4) (undo-tree-id9737 . -4) (undo-tree-id9738 . -4) (undo-tree-id9739 . -4) (undo-tree-id9740 . -4) (undo-tree-id9741 . -4) (undo-tree-id9742 . -4) (undo-tree-id9743 . -4) (undo-tree-id9744 . -4) (undo-tree-id9745 . -4) (undo-tree-id9746 . -4) (undo-tree-id9747 . -4) (undo-tree-id9748 . -4) (undo-tree-id9749 . -4) (undo-tree-id9750 . -4) (undo-tree-id9751 . -4) (undo-tree-id9752 . -4) (undo-tree-id9753 . -4) (undo-tree-id9754 . -4) (undo-tree-id9755 . -4) (undo-tree-id9756 . -4) (undo-tree-id9757 . -4) (undo-tree-id9758 . -4) (undo-tree-id9759 . -4) (undo-tree-id9760 . -4) (undo-tree-id9761 . -4) (undo-tree-id9762 . -4) (undo-tree-id9763 . -4) (undo-tree-id9764 . -4) (undo-tree-id9765 . -4) (undo-tree-id9766 . -4) (undo-tree-id9767 . -4) (undo-tree-id9768 . -4) (undo-tree-id9769 . -4) (undo-tree-id9770 . -4) (undo-tree-id9771 . -4) (undo-tree-id9772 . -4) (undo-tree-id9773 . -4) (undo-tree-id9774 . -4) (undo-tree-id9775 . -4) (undo-tree-id9776 . -4) (undo-tree-id9777 . -4) (undo-tree-id9778 . -4) (undo-tree-id9779 . -4) (undo-tree-id9780 . -4) (undo-tree-id9781 . -4) (undo-tree-id9782 . -4) (undo-tree-id9783 . -4) (undo-tree-id9784 . -4) (undo-tree-id9785 . -4) (undo-tree-id9786 . -4) (undo-tree-id9787 . -4) (undo-tree-id9788 . -4) (undo-tree-id9789 . -4) (undo-tree-id9790 . -4) (undo-tree-id9791 . -4) (undo-tree-id9792 . -4) (undo-tree-id9793 . -4) (undo-tree-id9794 . -4) (undo-tree-id9795 . -4) (undo-tree-id9796 . -4) (undo-tree-id9797 . -4) (undo-tree-id9798 . -4) (undo-tree-id9799 . -4) (undo-tree-id9800 . -4) (undo-tree-id9801 . -4) (undo-tree-id9802 . -4) (undo-tree-id9803 . -4) (undo-tree-id9804 . -4) (undo-tree-id9805 . -4) (undo-tree-id9806 . -4) (undo-tree-id9807 . -4) (undo-tree-id9808 . -4) (undo-tree-id9809 . -4) (undo-tree-id9810 . -4) (undo-tree-id9811 . -4) (undo-tree-id9812 . -4) (undo-tree-id9813 . -4) (undo-tree-id9814 . -4) (undo-tree-id9815 . -4) (undo-tree-id9816 . -4) (undo-tree-id9817 . -4) (undo-tree-id9818 . -4) (undo-tree-id9819 . -4) (undo-tree-id9820 . -4) (undo-tree-id9821 . -4) (undo-tree-id9822 . -4) (undo-tree-id9823 . -4) (undo-tree-id9824 . -4) (undo-tree-id9825 . -4) (undo-tree-id9826 . -4) (undo-tree-id9827 . -4) (undo-tree-id9828 . -4) (undo-tree-id9829 . -4) (undo-tree-id9830 . -4) (undo-tree-id9831 . -4) (undo-tree-id9832 . -4) (undo-tree-id9833 . -4) (undo-tree-id9834 . -4) (undo-tree-id9835 . -4) (undo-tree-id9836 . -4) (undo-tree-id9837 . -4) (undo-tree-id9838 . -4) (undo-tree-id9839 . -4) (undo-tree-id9840 . -4) (undo-tree-id9841 . -4) (undo-tree-id9842 . -4) (undo-tree-id9843 . -4) (undo-tree-id9844 . -4) (undo-tree-id9845 . -4) (undo-tree-id9846 . -4) (undo-tree-id9847 . -4) (undo-tree-id9848 . -4) (undo-tree-id9849 . -4) (undo-tree-id9850 . -4) (undo-tree-id9851 . -4) (undo-tree-id9852 . -4) (undo-tree-id9853 . -4) 3221) nil (26651 52327 595298 0) 0 nil])
([nil nil ((#("up " 0 3 (fontified t)) . -3214) (undo-tree-id9480 . -3) (undo-tree-id9481 . -3) (undo-tree-id9482 . -3) (undo-tree-id9483 . -3) (undo-tree-id9484 . -3) (undo-tree-id9485 . -3) (undo-tree-id9486 . -3) (undo-tree-id9487 . -3) (undo-tree-id9488 . -3) (undo-tree-id9489 . -3) (undo-tree-id9490 . -3) (undo-tree-id9491 . -3) (undo-tree-id9492 . -3) (undo-tree-id9493 . -3) (undo-tree-id9494 . -3) (undo-tree-id9495 . -3) (undo-tree-id9496 . -3) (undo-tree-id9497 . -3) (undo-tree-id9498 . -3) (undo-tree-id9499 . -3) (undo-tree-id9500 . -3) (undo-tree-id9501 . -3) (undo-tree-id9502 . -3) (undo-tree-id9503 . -3) (undo-tree-id9504 . -3) (undo-tree-id9505 . -3) (undo-tree-id9506 . -3) (undo-tree-id9507 . -3) (undo-tree-id9508 . -3) (undo-tree-id9509 . -3) (undo-tree-id9510 . -3) (undo-tree-id9511 . -3) (undo-tree-id9512 . -3) (undo-tree-id9513 . -3) (undo-tree-id9514 . -3) (undo-tree-id9515 . -3) (undo-tree-id9516 . -3) (undo-tree-id9517 . -3) (undo-tree-id9518 . -3) (undo-tree-id9519 . -3) (undo-tree-id9520 . -3) (undo-tree-id9521 . -3) (undo-tree-id9522 . -3) (undo-tree-id9523 . -3) (undo-tree-id9524 . -3) (undo-tree-id9525 . -3) (undo-tree-id9526 . -3) (undo-tree-id9527 . -3) (undo-tree-id9528 . -3) (undo-tree-id9529 . -3) (undo-tree-id9530 . -3) (undo-tree-id9531 . -3) (undo-tree-id9532 . -3) (undo-tree-id9533 . -3) (undo-tree-id9534 . -3) (undo-tree-id9535 . -3) (undo-tree-id9536 . -3) (undo-tree-id9537 . -3) (undo-tree-id9538 . -3) (undo-tree-id9539 . -3) (undo-tree-id9540 . -3) (undo-tree-id9541 . -3) (undo-tree-id9542 . -3) (undo-tree-id9543 . -3) (undo-tree-id9544 . -3) (undo-tree-id9545 . -3) (undo-tree-id9546 . -3) (undo-tree-id9547 . -3) (undo-tree-id9548 . -3) (undo-tree-id9549 . -3) (undo-tree-id9550 . -3) (undo-tree-id9551 . -3) (undo-tree-id9552 . -3) (undo-tree-id9553 . -3) (undo-tree-id9554 . -3) (undo-tree-id9555 . -3) (undo-tree-id9556 . -3) (undo-tree-id9557 . -3) (undo-tree-id9558 . -3) (undo-tree-id9559 . -3) (undo-tree-id9560 . -3) (undo-tree-id9561 . -3) (undo-tree-id9562 . -3) (undo-tree-id9563 . -3) (undo-tree-id9564 . -3) (undo-tree-id9565 . -3) (undo-tree-id9566 . -3) (undo-tree-id9567 . -3) (undo-tree-id9568 . -3) (undo-tree-id9569 . -3) (undo-tree-id9570 . -3) (undo-tree-id9571 . -3) (undo-tree-id9572 . -3) (undo-tree-id9573 . -3) (undo-tree-id9574 . -3) (undo-tree-id9575 . -3) (undo-tree-id9576 . -3) (undo-tree-id9577 . -3) (undo-tree-id9578 . -3) (undo-tree-id9579 . -3) (undo-tree-id9580 . -3) (undo-tree-id9581 . -3) (undo-tree-id9582 . -3) (undo-tree-id9583 . -3) (undo-tree-id9584 . -3) (undo-tree-id9585 . -3) (undo-tree-id9586 . -3) (undo-tree-id9587 . -3) (undo-tree-id9588 . -3) (undo-tree-id9589 . -3) (undo-tree-id9590 . -3) (undo-tree-id9591 . -3) (undo-tree-id9592 . -3) (undo-tree-id9593 . -3) (undo-tree-id9594 . -3) (undo-tree-id9595 . -3) (undo-tree-id9596 . -3) (undo-tree-id9597 . -3) (undo-tree-id9598 . -3) (undo-tree-id9599 . -3) (undo-tree-id9600 . -3) (undo-tree-id9601 . -3) (undo-tree-id9602 . -3) (undo-tree-id9603 . -3) (undo-tree-id9604 . -3) (undo-tree-id9605 . -3) (undo-tree-id9606 . -3) (undo-tree-id9607 . -3) (undo-tree-id9608 . -3) (undo-tree-id9609 . -3) (undo-tree-id9610 . -3) (undo-tree-id9611 . -3) (undo-tree-id9612 . -3) (undo-tree-id9613 . -3) (undo-tree-id9614 . -3) (undo-tree-id9615 . -3) (undo-tree-id9616 . -3) (undo-tree-id9617 . -3) (undo-tree-id9618 . -3) (undo-tree-id9619 . -3) (undo-tree-id9620 . -3) (undo-tree-id9621 . -3) (undo-tree-id9622 . -3) (undo-tree-id9623 . -3) (undo-tree-id9624 . -3) (undo-tree-id9625 . -3) (undo-tree-id9626 . -3) (undo-tree-id9627 . -3) (undo-tree-id9628 . -3) (undo-tree-id9629 . -3) (undo-tree-id9630 . -3) (undo-tree-id9631 . -3) (undo-tree-id9632 . -3) (undo-tree-id9633 . -3) (undo-tree-id9634 . -3) (undo-tree-id9635 . -3) (undo-tree-id9636 . -3) (undo-tree-id9637 . -3) (undo-tree-id9638 . -3) (undo-tree-id9639 . -3) (undo-tree-id9640 . -3) (undo-tree-id9641 . -3) (undo-tree-id9642 . -3) (undo-tree-id9643 . -3) (undo-tree-id9644 . -3) (undo-tree-id9645 . -3) (undo-tree-id9646 . -3) (undo-tree-id9647 . -3) (undo-tree-id9648 . -3) (undo-tree-id9649 . -3) (undo-tree-id9650 . -3) (undo-tree-id9651 . -3) (undo-tree-id9652 . -3) (undo-tree-id9653 . -3) (undo-tree-id9654 . -3) (undo-tree-id9655 . -3) (undo-tree-id9656 . -3) (undo-tree-id9657 . -3) (undo-tree-id9658 . -3) (undo-tree-id9659 . -3) (undo-tree-id9660 . -3) (undo-tree-id9661 . -3) (undo-tree-id9662 . -3) (undo-tree-id9663 . -3) (undo-tree-id9664 . -3) (undo-tree-id9665 . -3) (undo-tree-id9666 . -3) (undo-tree-id9667 . -3) (undo-tree-id9668 . -3) 3217) nil (26651 52327 595006 0) 0 nil])
([nil nil ((#("write " 0 6 (fontified t)) . -3208) (undo-tree-id9287 . -6) (undo-tree-id9288 . -6) (undo-tree-id9289 . -6) (undo-tree-id9290 . -6) (undo-tree-id9291 . -6) (undo-tree-id9292 . -6) (undo-tree-id9293 . -6) (undo-tree-id9294 . -6) (undo-tree-id9295 . -6) (undo-tree-id9296 . -6) (undo-tree-id9297 . -6) (undo-tree-id9298 . -6) (undo-tree-id9299 . -6) (undo-tree-id9300 . -6) (undo-tree-id9301 . -6) (undo-tree-id9302 . -6) (undo-tree-id9303 . -6) (undo-tree-id9304 . -6) (undo-tree-id9305 . -6) (undo-tree-id9306 . -6) (undo-tree-id9307 . -6) (undo-tree-id9308 . -6) (undo-tree-id9309 . -6) (undo-tree-id9310 . -6) (undo-tree-id9311 . -6) (undo-tree-id9312 . -6) (undo-tree-id9313 . -6) (undo-tree-id9314 . -6) (undo-tree-id9315 . -6) (undo-tree-id9316 . -6) (undo-tree-id9317 . -6) (undo-tree-id9318 . -6) (undo-tree-id9319 . -6) (undo-tree-id9320 . -6) (undo-tree-id9321 . -6) (undo-tree-id9322 . -6) (undo-tree-id9323 . -6) (undo-tree-id9324 . -6) (undo-tree-id9325 . -6) (undo-tree-id9326 . -6) (undo-tree-id9327 . -6) (undo-tree-id9328 . -6) (undo-tree-id9329 . -6) (undo-tree-id9330 . -6) (undo-tree-id9331 . -6) (undo-tree-id9332 . -6) (undo-tree-id9333 . -6) (undo-tree-id9334 . -6) (undo-tree-id9335 . -6) (undo-tree-id9336 . -6) (undo-tree-id9337 . -6) (undo-tree-id9338 . -6) (undo-tree-id9339 . -6) (undo-tree-id9340 . -6) (undo-tree-id9341 . -6) (undo-tree-id9342 . -6) (undo-tree-id9343 . -6) (undo-tree-id9344 . -6) (undo-tree-id9345 . -6) (undo-tree-id9346 . -6) (undo-tree-id9347 . -6) (undo-tree-id9348 . -6) (undo-tree-id9349 . -6) (undo-tree-id9350 . -6) (undo-tree-id9351 . -6) (undo-tree-id9352 . -6) (undo-tree-id9353 . -6) (undo-tree-id9354 . -6) (undo-tree-id9355 . -6) (undo-tree-id9356 . -6) (undo-tree-id9357 . -6) (undo-tree-id9358 . -6) (undo-tree-id9359 . -6) (undo-tree-id9360 . -6) (undo-tree-id9361 . -6) (undo-tree-id9362 . -6) (undo-tree-id9363 . -6) (undo-tree-id9364 . -6) (undo-tree-id9365 . -6) (undo-tree-id9366 . -6) (undo-tree-id9367 . -6) (undo-tree-id9368 . -6) (undo-tree-id9369 . -6) (undo-tree-id9370 . -6) (undo-tree-id9371 . -6) (undo-tree-id9372 . -6) (undo-tree-id9373 . -6) (undo-tree-id9374 . -6) (undo-tree-id9375 . -6) (undo-tree-id9376 . -6) (undo-tree-id9377 . -6) (undo-tree-id9378 . -6) (undo-tree-id9379 . -6) (undo-tree-id9380 . -6) (undo-tree-id9381 . -6) (undo-tree-id9382 . -6) (undo-tree-id9383 . -6) (undo-tree-id9384 . -6) (undo-tree-id9385 . -6) (undo-tree-id9386 . -6) (undo-tree-id9387 . -6) (undo-tree-id9388 . -6) (undo-tree-id9389 . -6) (undo-tree-id9390 . -6) (undo-tree-id9391 . -6) (undo-tree-id9392 . -6) (undo-tree-id9393 . -6) (undo-tree-id9394 . -6) (undo-tree-id9395 . -6) (undo-tree-id9396 . -6) (undo-tree-id9397 . -6) (undo-tree-id9398 . -6) (undo-tree-id9399 . -6) (undo-tree-id9400 . -6) (undo-tree-id9401 . -6) (undo-tree-id9402 . -6) (undo-tree-id9403 . -6) (undo-tree-id9404 . -6) (undo-tree-id9405 . -6) (undo-tree-id9406 . -6) (undo-tree-id9407 . -6) (undo-tree-id9408 . -6) (undo-tree-id9409 . -6) (undo-tree-id9410 . -6) (undo-tree-id9411 . -6) (undo-tree-id9412 . -6) (undo-tree-id9413 . -6) (undo-tree-id9414 . -6) (undo-tree-id9415 . -6) (undo-tree-id9416 . -6) (undo-tree-id9417 . -6) (undo-tree-id9418 . -6) (undo-tree-id9419 . -6) (undo-tree-id9420 . -6) (undo-tree-id9421 . -6) (undo-tree-id9422 . -6) (undo-tree-id9423 . -6) (undo-tree-id9424 . -6) (undo-tree-id9425 . -6) (undo-tree-id9426 . -6) (undo-tree-id9427 . -6) (undo-tree-id9428 . -6) (undo-tree-id9429 . -6) (undo-tree-id9430 . -6) (undo-tree-id9431 . -6) (undo-tree-id9432 . -6) (undo-tree-id9433 . -6) (undo-tree-id9434 . -6) (undo-tree-id9435 . -6) (undo-tree-id9436 . -6) (undo-tree-id9437 . -6) (undo-tree-id9438 . -6) (undo-tree-id9439 . -6) (undo-tree-id9440 . -6) (undo-tree-id9441 . -6) (undo-tree-id9442 . -6) (undo-tree-id9443 . -6) (undo-tree-id9444 . -6) (undo-tree-id9445 . -6) (undo-tree-id9446 . -6) (undo-tree-id9447 . -6) (undo-tree-id9448 . -6) (undo-tree-id9449 . -6) (undo-tree-id9450 . -6) (undo-tree-id9451 . -6) (undo-tree-id9452 . -6) (undo-tree-id9453 . -6) (undo-tree-id9454 . -6) (undo-tree-id9455 . -6) (undo-tree-id9456 . -6) (undo-tree-id9457 . -6) (undo-tree-id9458 . -6) (undo-tree-id9459 . -6) (undo-tree-id9460 . -6) (undo-tree-id9461 . -6) (undo-tree-id9462 . -6) (undo-tree-id9463 . -6) (undo-tree-id9464 . -6) (undo-tree-id9465 . -6) (undo-tree-id9466 . -6) (undo-tree-id9467 . -6) (undo-tree-id9468 . -6) (undo-tree-id9469 . -6) (undo-tree-id9470 . -6) (undo-tree-id9471 . -6) (undo-tree-id9472 . -6) (undo-tree-id9473 . -6) (undo-tree-id9474 . -6) (undo-tree-id9475 . -6) (undo-tree-id9476 . -6) (undo-tree-id9477 . -6) (undo-tree-id9478 . -6) (undo-tree-id9479 . -6) 3214) nil (26651 52327 594704 0) 0 nil])
([nil nil ((#("usually " 0 8 (fontified t)) . -3200) (undo-tree-id9090 . -8) (undo-tree-id9091 . -8) (undo-tree-id9092 . -8) (undo-tree-id9093 . -8) (undo-tree-id9094 . -8) (undo-tree-id9095 . -8) (undo-tree-id9096 . -8) (undo-tree-id9097 . -8) (undo-tree-id9098 . -8) (undo-tree-id9099 . -8) (undo-tree-id9100 . -8) (undo-tree-id9101 . -8) (undo-tree-id9102 . -8) (undo-tree-id9103 . -8) (undo-tree-id9104 . -8) (undo-tree-id9105 . -8) (undo-tree-id9106 . -8) (undo-tree-id9107 . -8) (undo-tree-id9108 . -8) (undo-tree-id9109 . -8) (undo-tree-id9110 . -8) (undo-tree-id9111 . -8) (undo-tree-id9112 . -8) (undo-tree-id9113 . -8) (undo-tree-id9114 . -8) (undo-tree-id9115 . -8) (undo-tree-id9116 . -8) (undo-tree-id9117 . -8) (undo-tree-id9118 . -8) (undo-tree-id9119 . -8) (undo-tree-id9120 . -8) (undo-tree-id9121 . -8) (undo-tree-id9122 . -8) (undo-tree-id9123 . -8) (undo-tree-id9124 . -8) (undo-tree-id9125 . -8) (undo-tree-id9126 . -8) (undo-tree-id9127 . -8) (undo-tree-id9128 . -8) (undo-tree-id9129 . -8) (undo-tree-id9130 . -8) (undo-tree-id9131 . -8) (undo-tree-id9132 . -8) (undo-tree-id9133 . -8) (undo-tree-id9134 . -8) (undo-tree-id9135 . -8) (undo-tree-id9136 . -8) (undo-tree-id9137 . -8) (undo-tree-id9138 . -8) (undo-tree-id9139 . -8) (undo-tree-id9140 . -8) (undo-tree-id9141 . -8) (undo-tree-id9142 . -8) (undo-tree-id9143 . -8) (undo-tree-id9144 . -8) (undo-tree-id9145 . -8) (undo-tree-id9146 . -8) (undo-tree-id9147 . -8) (undo-tree-id9148 . -8) (undo-tree-id9149 . -8) (undo-tree-id9150 . -8) (undo-tree-id9151 . -8) (undo-tree-id9152 . -8) (undo-tree-id9153 . -8) (undo-tree-id9154 . -8) (undo-tree-id9155 . -8) (undo-tree-id9156 . -8) (undo-tree-id9157 . -8) (undo-tree-id9158 . -8) (undo-tree-id9159 . -8) (undo-tree-id9160 . -8) (undo-tree-id9161 . -8) (undo-tree-id9162 . -8) (undo-tree-id9163 . -8) (undo-tree-id9164 . -8) (undo-tree-id9165 . -8) (undo-tree-id9166 . -8) (undo-tree-id9167 . -8) (undo-tree-id9168 . -8) (undo-tree-id9169 . -8) (undo-tree-id9170 . -8) (undo-tree-id9171 . -8) (undo-tree-id9172 . -8) (undo-tree-id9173 . -8) (undo-tree-id9174 . -8) (undo-tree-id9175 . -8) (undo-tree-id9176 . -8) (undo-tree-id9177 . -8) (undo-tree-id9178 . -8) (undo-tree-id9179 . -8) (undo-tree-id9180 . -8) (undo-tree-id9181 . -8) (undo-tree-id9182 . -8) (undo-tree-id9183 . -8) (undo-tree-id9184 . -8) (undo-tree-id9185 . -8) (undo-tree-id9186 . -8) (undo-tree-id9187 . -8) (undo-tree-id9188 . -8) (undo-tree-id9189 . -8) (undo-tree-id9190 . -8) (undo-tree-id9191 . -8) (undo-tree-id9192 . -8) (undo-tree-id9193 . -8) (undo-tree-id9194 . -8) (undo-tree-id9195 . -8) (undo-tree-id9196 . -8) (undo-tree-id9197 . -8) (undo-tree-id9198 . -8) (undo-tree-id9199 . -8) (undo-tree-id9200 . -8) (undo-tree-id9201 . -8) (undo-tree-id9202 . -8) (undo-tree-id9203 . -8) (undo-tree-id9204 . -8) (undo-tree-id9205 . -8) (undo-tree-id9206 . -8) (undo-tree-id9207 . -8) (undo-tree-id9208 . -8) (undo-tree-id9209 . -8) (undo-tree-id9210 . -8) (undo-tree-id9211 . -8) (undo-tree-id9212 . -8) (undo-tree-id9213 . -8) (undo-tree-id9214 . -8) (undo-tree-id9215 . -8) (undo-tree-id9216 . -8) (undo-tree-id9217 . -8) (undo-tree-id9218 . -8) (undo-tree-id9219 . -8) (undo-tree-id9220 . -8) (undo-tree-id9221 . -8) (undo-tree-id9222 . -8) (undo-tree-id9223 . -8) (undo-tree-id9224 . -8) (undo-tree-id9225 . -8) (undo-tree-id9226 . -8) (undo-tree-id9227 . -8) (undo-tree-id9228 . -8) (undo-tree-id9229 . -8) (undo-tree-id9230 . -8) (undo-tree-id9231 . -8) (undo-tree-id9232 . -8) (undo-tree-id9233 . -8) (undo-tree-id9234 . -8) (undo-tree-id9235 . -8) (undo-tree-id9236 . -8) (undo-tree-id9237 . -8) (undo-tree-id9238 . -8) (undo-tree-id9239 . -8) (undo-tree-id9240 . -8) (undo-tree-id9241 . -8) (undo-tree-id9242 . -8) (undo-tree-id9243 . -8) (undo-tree-id9244 . -8) (undo-tree-id9245 . -8) (undo-tree-id9246 . -8) (undo-tree-id9247 . -8) (undo-tree-id9248 . -8) (undo-tree-id9249 . -8) (undo-tree-id9250 . -8) (undo-tree-id9251 . -8) (undo-tree-id9252 . -8) (undo-tree-id9253 . -8) (undo-tree-id9254 . -8) (undo-tree-id9255 . -8) (undo-tree-id9256 . -8) (undo-tree-id9257 . -8) (undo-tree-id9258 . -8) (undo-tree-id9259 . -8) (undo-tree-id9260 . -8) (undo-tree-id9261 . -8) (undo-tree-id9262 . -8) (undo-tree-id9263 . -8) (undo-tree-id9264 . -8) (undo-tree-id9265 . -8) (undo-tree-id9266 . -8) (undo-tree-id9267 . -8) (undo-tree-id9268 . -8) (undo-tree-id9269 . -8) (undo-tree-id9270 . -8) (undo-tree-id9271 . -8) (undo-tree-id9272 . -8) (undo-tree-id9273 . -8) (undo-tree-id9274 . -8) (undo-tree-id9275 . -8) (undo-tree-id9276 . -8) (undo-tree-id9277 . -8) (undo-tree-id9278 . -8) (undo-tree-id9279 . -8) (undo-tree-id9280 . -8) (undo-tree-id9281 . -8) (undo-tree-id9282 . -8) (undo-tree-id9283 . -8) (undo-tree-id9284 . -8) (undo-tree-id9285 . -8) (undo-tree-id9286 . -8) 3208) nil (26651 52327 594397 0) 0 nil])
([nil nil ((#("could " 0 6 (fontified t)) . -3194) (undo-tree-id8889 . -6) (undo-tree-id8890 . -6) (undo-tree-id8891 . -6) (undo-tree-id8892 . -6) (undo-tree-id8893 . -6) (undo-tree-id8894 . -6) (undo-tree-id8895 . -6) (undo-tree-id8896 . -6) (undo-tree-id8897 . -6) (undo-tree-id8898 . -6) (undo-tree-id8899 . -6) (undo-tree-id8900 . -6) (undo-tree-id8901 . -6) (undo-tree-id8902 . -6) (undo-tree-id8903 . -6) (undo-tree-id8904 . -6) (undo-tree-id8905 . -6) (undo-tree-id8906 . -6) (undo-tree-id8907 . -6) (undo-tree-id8908 . -6) (undo-tree-id8909 . -6) (undo-tree-id8910 . -6) (undo-tree-id8911 . -6) (undo-tree-id8912 . -6) (undo-tree-id8913 . -6) (undo-tree-id8914 . -6) (undo-tree-id8915 . -6) (undo-tree-id8916 . -6) (undo-tree-id8917 . -6) (undo-tree-id8918 . -6) (undo-tree-id8919 . -6) (undo-tree-id8920 . -6) (undo-tree-id8921 . -6) (undo-tree-id8922 . -6) (undo-tree-id8923 . -6) (undo-tree-id8924 . -6) (undo-tree-id8925 . -6) (undo-tree-id8926 . -6) (undo-tree-id8927 . -6) (undo-tree-id8928 . -6) (undo-tree-id8929 . -6) (undo-tree-id8930 . -6) (undo-tree-id8931 . -6) (undo-tree-id8932 . -6) (undo-tree-id8933 . -6) (undo-tree-id8934 . -6) (undo-tree-id8935 . -6) (undo-tree-id8936 . -6) (undo-tree-id8937 . -6) (undo-tree-id8938 . -6) (undo-tree-id8939 . -6) (undo-tree-id8940 . -6) (undo-tree-id8941 . -6) (undo-tree-id8942 . -6) (undo-tree-id8943 . -6) (undo-tree-id8944 . -6) (undo-tree-id8945 . -6) (undo-tree-id8946 . -6) (undo-tree-id8947 . -6) (undo-tree-id8948 . -6) (undo-tree-id8949 . -6) (undo-tree-id8950 . -6) (undo-tree-id8951 . -6) (undo-tree-id8952 . -6) (undo-tree-id8953 . -6) (undo-tree-id8954 . -6) (undo-tree-id8955 . -6) (undo-tree-id8956 . -6) (undo-tree-id8957 . -6) (undo-tree-id8958 . -6) (undo-tree-id8959 . -6) (undo-tree-id8960 . -6) (undo-tree-id8961 . -6) (undo-tree-id8962 . -6) (undo-tree-id8963 . -6) (undo-tree-id8964 . -6) (undo-tree-id8965 . -6) (undo-tree-id8966 . -6) (undo-tree-id8967 . -6) (undo-tree-id8968 . -6) (undo-tree-id8969 . -6) (undo-tree-id8970 . -6) (undo-tree-id8971 . -6) (undo-tree-id8972 . -6) (undo-tree-id8973 . -6) (undo-tree-id8974 . -6) (undo-tree-id8975 . -6) (undo-tree-id8976 . -6) (undo-tree-id8977 . -6) (undo-tree-id8978 . -6) (undo-tree-id8979 . -6) (undo-tree-id8980 . -6) (undo-tree-id8981 . -6) (undo-tree-id8982 . -6) (undo-tree-id8983 . -6) (undo-tree-id8984 . -6) (undo-tree-id8985 . -6) (undo-tree-id8986 . -6) (undo-tree-id8987 . -6) (undo-tree-id8988 . -6) (undo-tree-id8989 . -6) (undo-tree-id8990 . -6) (undo-tree-id8991 . -6) (undo-tree-id8992 . -6) (undo-tree-id8993 . -6) (undo-tree-id8994 . -6) (undo-tree-id8995 . -6) (undo-tree-id8996 . -6) (undo-tree-id8997 . -6) (undo-tree-id8998 . -6) (undo-tree-id8999 . -6) (undo-tree-id9000 . -6) (undo-tree-id9001 . -6) (undo-tree-id9002 . -6) (undo-tree-id9003 . -6) (undo-tree-id9004 . -6) (undo-tree-id9005 . -6) (undo-tree-id9006 . -6) (undo-tree-id9007 . -6) (undo-tree-id9008 . -6) (undo-tree-id9009 . -6) (undo-tree-id9010 . -6) (undo-tree-id9011 . -6) (undo-tree-id9012 . -6) (undo-tree-id9013 . -6) (undo-tree-id9014 . -6) (undo-tree-id9015 . -6) (undo-tree-id9016 . -6) (undo-tree-id9017 . -6) (undo-tree-id9018 . -6) (undo-tree-id9019 . -6) (undo-tree-id9020 . -6) (undo-tree-id9021 . -6) (undo-tree-id9022 . -6) (undo-tree-id9023 . -6) (undo-tree-id9024 . -6) (undo-tree-id9025 . -6) (undo-tree-id9026 . -6) (undo-tree-id9027 . -6) (undo-tree-id9028 . -6) (undo-tree-id9029 . -6) (undo-tree-id9030 . -6) (undo-tree-id9031 . -6) (undo-tree-id9032 . -6) (undo-tree-id9033 . -6) (undo-tree-id9034 . -6) (undo-tree-id9035 . -6) (undo-tree-id9036 . -6) (undo-tree-id9037 . -6) (undo-tree-id9038 . -6) (undo-tree-id9039 . -6) (undo-tree-id9040 . -6) (undo-tree-id9041 . -6) (undo-tree-id9042 . -6) (undo-tree-id9043 . -6) (undo-tree-id9044 . -6) (undo-tree-id9045 . -6) (undo-tree-id9046 . -6) (undo-tree-id9047 . -6) (undo-tree-id9048 . -6) (undo-tree-id9049 . -6) (undo-tree-id9050 . -6) (undo-tree-id9051 . -6) (undo-tree-id9052 . -6) (undo-tree-id9053 . -6) (undo-tree-id9054 . -6) (undo-tree-id9055 . -6) (undo-tree-id9056 . -6) (undo-tree-id9057 . -6) (undo-tree-id9058 . -6) (undo-tree-id9059 . -6) (undo-tree-id9060 . -6) (undo-tree-id9061 . -6) (undo-tree-id9062 . -6) (undo-tree-id9063 . -6) (undo-tree-id9064 . -6) (undo-tree-id9065 . -6) (undo-tree-id9066 . -6) (undo-tree-id9067 . -6) (undo-tree-id9068 . -6) (undo-tree-id9069 . -6) (undo-tree-id9070 . -6) (undo-tree-id9071 . -6) (undo-tree-id9072 . -6) (undo-tree-id9073 . -6) (undo-tree-id9074 . -6) (undo-tree-id9075 . -6) (undo-tree-id9076 . -6) (undo-tree-id9077 . -6) (undo-tree-id9078 . -6) (undo-tree-id9079 . -6) (undo-tree-id9080 . -6) (undo-tree-id9081 . -6) (undo-tree-id9082 . -6) (undo-tree-id9083 . -6) (undo-tree-id9084 . -6) (undo-tree-id9085 . -6) (undo-tree-id9086 . -6) (undo-tree-id9087 . -6) (undo-tree-id9088 . -6) (undo-tree-id9089 . -6) 3200) nil (26651 52327 594083 0) 0 nil])
([nil nil ((#("I " 0 2 (fontified t)) . -3192) (undo-tree-id8684 . -2) (undo-tree-id8685 . -2) (undo-tree-id8686 . -2) (undo-tree-id8687 . -2) (undo-tree-id8688 . -2) (undo-tree-id8689 . -2) (undo-tree-id8690 . -2) (undo-tree-id8691 . -2) (undo-tree-id8692 . -2) (undo-tree-id8693 . -2) (undo-tree-id8694 . -2) (undo-tree-id8695 . -2) (undo-tree-id8696 . -2) (undo-tree-id8697 . -2) (undo-tree-id8698 . -2) (undo-tree-id8699 . -2) (undo-tree-id8700 . -2) (undo-tree-id8701 . -2) (undo-tree-id8702 . -2) (undo-tree-id8703 . -2) (undo-tree-id8704 . -2) (undo-tree-id8705 . -2) (undo-tree-id8706 . -2) (undo-tree-id8707 . -2) (undo-tree-id8708 . -2) (undo-tree-id8709 . -2) (undo-tree-id8710 . -2) (undo-tree-id8711 . -2) (undo-tree-id8712 . -2) (undo-tree-id8713 . -2) (undo-tree-id8714 . -2) (undo-tree-id8715 . -2) (undo-tree-id8716 . -2) (undo-tree-id8717 . -2) (undo-tree-id8718 . -2) (undo-tree-id8719 . -2) (undo-tree-id8720 . -2) (undo-tree-id8721 . -2) (undo-tree-id8722 . -2) (undo-tree-id8723 . -2) (undo-tree-id8724 . -2) (undo-tree-id8725 . -2) (undo-tree-id8726 . -2) (undo-tree-id8727 . -2) (undo-tree-id8728 . -2) (undo-tree-id8729 . -2) (undo-tree-id8730 . -2) (undo-tree-id8731 . -2) (undo-tree-id8732 . -2) (undo-tree-id8733 . -2) (undo-tree-id8734 . -2) (undo-tree-id8735 . -2) (undo-tree-id8736 . -2) (undo-tree-id8737 . -2) (undo-tree-id8738 . -2) (undo-tree-id8739 . -2) (undo-tree-id8740 . -2) (undo-tree-id8741 . -2) (undo-tree-id8742 . -2) (undo-tree-id8743 . -2) (undo-tree-id8744 . -2) (undo-tree-id8745 . -2) (undo-tree-id8746 . -2) (undo-tree-id8747 . -2) (undo-tree-id8748 . -2) (undo-tree-id8749 . -2) (undo-tree-id8750 . -2) (undo-tree-id8751 . -2) (undo-tree-id8752 . -2) (undo-tree-id8753 . -2) (undo-tree-id8754 . -2) (undo-tree-id8755 . -2) (undo-tree-id8756 . -2) (undo-tree-id8757 . -2) (undo-tree-id8758 . -2) (undo-tree-id8759 . -2) (undo-tree-id8760 . -2) (undo-tree-id8761 . -2) (undo-tree-id8762 . -2) (undo-tree-id8763 . -2) (undo-tree-id8764 . -2) (undo-tree-id8765 . -2) (undo-tree-id8766 . -2) (undo-tree-id8767 . -2) (undo-tree-id8768 . -2) (undo-tree-id8769 . -2) (undo-tree-id8770 . -2) (undo-tree-id8771 . -2) (undo-tree-id8772 . -2) (undo-tree-id8773 . -2) (undo-tree-id8774 . -2) (undo-tree-id8775 . -2) (undo-tree-id8776 . -2) (undo-tree-id8777 . -2) (undo-tree-id8778 . -2) (undo-tree-id8779 . -2) (undo-tree-id8780 . -2) (undo-tree-id8781 . -2) (undo-tree-id8782 . -2) (undo-tree-id8783 . -2) (undo-tree-id8784 . -2) (undo-tree-id8785 . -2) (undo-tree-id8786 . -2) (undo-tree-id8787 . -2) (undo-tree-id8788 . -2) (undo-tree-id8789 . -2) (undo-tree-id8790 . -2) (undo-tree-id8791 . -2) (undo-tree-id8792 . -2) (undo-tree-id8793 . -2) (undo-tree-id8794 . -2) (undo-tree-id8795 . -2) (undo-tree-id8796 . -2) (undo-tree-id8797 . -2) (undo-tree-id8798 . -2) (undo-tree-id8799 . -2) (undo-tree-id8800 . -2) (undo-tree-id8801 . -2) (undo-tree-id8802 . -2) (undo-tree-id8803 . -2) (undo-tree-id8804 . -2) (undo-tree-id8805 . -2) (undo-tree-id8806 . -2) (undo-tree-id8807 . -2) (undo-tree-id8808 . -2) (undo-tree-id8809 . -2) (undo-tree-id8810 . -2) (undo-tree-id8811 . -2) (undo-tree-id8812 . -2) (undo-tree-id8813 . -2) (undo-tree-id8814 . -2) (undo-tree-id8815 . -2) (undo-tree-id8816 . -2) (undo-tree-id8817 . -2) (undo-tree-id8818 . -2) (undo-tree-id8819 . -2) (undo-tree-id8820 . -2) (undo-tree-id8821 . -2) (undo-tree-id8822 . -2) (undo-tree-id8823 . -2) (undo-tree-id8824 . -2) (undo-tree-id8825 . -2) (undo-tree-id8826 . -2) (undo-tree-id8827 . -2) (undo-tree-id8828 . -2) (undo-tree-id8829 . -2) (undo-tree-id8830 . -2) (undo-tree-id8831 . -2) (undo-tree-id8832 . -2) (undo-tree-id8833 . -2) (undo-tree-id8834 . -2) (undo-tree-id8835 . -2) (undo-tree-id8836 . -2) (undo-tree-id8837 . -2) (undo-tree-id8838 . -2) (undo-tree-id8839 . -2) (undo-tree-id8840 . -2) (undo-tree-id8841 . -2) (undo-tree-id8842 . -2) (undo-tree-id8843 . -2) (undo-tree-id8844 . -2) (undo-tree-id8845 . -2) (undo-tree-id8846 . -2) (undo-tree-id8847 . -2) (undo-tree-id8848 . -2) (undo-tree-id8849 . -2) (undo-tree-id8850 . -2) (undo-tree-id8851 . -2) (undo-tree-id8852 . -2) (undo-tree-id8853 . -2) (undo-tree-id8854 . -2) (undo-tree-id8855 . -2) (undo-tree-id8856 . -2) (undo-tree-id8857 . -2) (undo-tree-id8858 . -2) (undo-tree-id8859 . -2) (undo-tree-id8860 . -2) (undo-tree-id8861 . -2) (undo-tree-id8862 . -2) (undo-tree-id8863 . -2) (undo-tree-id8864 . -2) (undo-tree-id8865 . -2) (undo-tree-id8866 . -2) (undo-tree-id8867 . -2) (undo-tree-id8868 . -2) (undo-tree-id8869 . -2) (undo-tree-id8870 . -2) (undo-tree-id8871 . -2) (undo-tree-id8872 . -2) (undo-tree-id8873 . -2) (undo-tree-id8874 . -2) (undo-tree-id8875 . -2) (undo-tree-id8876 . -2) (undo-tree-id8877 . -2) (undo-tree-id8878 . -2) (undo-tree-id8879 . -2) (undo-tree-id8880 . -2) (undo-tree-id8881 . -2) (undo-tree-id8882 . -2) (undo-tree-id8883 . -2) (undo-tree-id8884 . -2) (undo-tree-id8885 . -2) (undo-tree-id8886 . -2) (undo-tree-id8887 . -2) (undo-tree-id8888 . -2) 3194) nil (26651 52327 593756 0) 0 nil])
([nil nil ((#("since " 0 6 (fontified t)) . -3186) (undo-tree-id8475 . -6) (undo-tree-id8476 . -6) (undo-tree-id8477 . -6) (undo-tree-id8478 . -6) (undo-tree-id8479 . -6) (undo-tree-id8480 . -6) (undo-tree-id8481 . -6) (undo-tree-id8482 . -6) (undo-tree-id8483 . -6) (undo-tree-id8484 . -6) (undo-tree-id8485 . -6) (undo-tree-id8486 . -6) (undo-tree-id8487 . -6) (undo-tree-id8488 . -6) (undo-tree-id8489 . -6) (undo-tree-id8490 . -6) (undo-tree-id8491 . -6) (undo-tree-id8492 . -6) (undo-tree-id8493 . -6) (undo-tree-id8494 . -6) (undo-tree-id8495 . -6) (undo-tree-id8496 . -6) (undo-tree-id8497 . -6) (undo-tree-id8498 . -6) (undo-tree-id8499 . -6) (undo-tree-id8500 . -6) (undo-tree-id8501 . -6) (undo-tree-id8502 . -6) (undo-tree-id8503 . -6) (undo-tree-id8504 . -6) (undo-tree-id8505 . -6) (undo-tree-id8506 . -6) (undo-tree-id8507 . -6) (undo-tree-id8508 . -6) (undo-tree-id8509 . -6) (undo-tree-id8510 . -6) (undo-tree-id8511 . -6) (undo-tree-id8512 . -6) (undo-tree-id8513 . -6) (undo-tree-id8514 . -6) (undo-tree-id8515 . -6) (undo-tree-id8516 . -6) (undo-tree-id8517 . -6) (undo-tree-id8518 . -6) (undo-tree-id8519 . -6) (undo-tree-id8520 . -6) (undo-tree-id8521 . -6) (undo-tree-id8522 . -6) (undo-tree-id8523 . -6) (undo-tree-id8524 . -6) (undo-tree-id8525 . -6) (undo-tree-id8526 . -6) (undo-tree-id8527 . -6) (undo-tree-id8528 . -6) (undo-tree-id8529 . -6) (undo-tree-id8530 . -6) (undo-tree-id8531 . -6) (undo-tree-id8532 . -6) (undo-tree-id8533 . -6) (undo-tree-id8534 . -6) (undo-tree-id8535 . -6) (undo-tree-id8536 . -6) (undo-tree-id8537 . -6) (undo-tree-id8538 . -6) (undo-tree-id8539 . -6) (undo-tree-id8540 . -6) (undo-tree-id8541 . -6) (undo-tree-id8542 . -6) (undo-tree-id8543 . -6) (undo-tree-id8544 . -6) (undo-tree-id8545 . -6) (undo-tree-id8546 . -6) (undo-tree-id8547 . -6) (undo-tree-id8548 . -6) (undo-tree-id8549 . -6) (undo-tree-id8550 . -6) (undo-tree-id8551 . -6) (undo-tree-id8552 . -6) (undo-tree-id8553 . -6) (undo-tree-id8554 . -6) (undo-tree-id8555 . -6) (undo-tree-id8556 . -6) (undo-tree-id8557 . -6) (undo-tree-id8558 . -6) (undo-tree-id8559 . -6) (undo-tree-id8560 . -6) (undo-tree-id8561 . -6) (undo-tree-id8562 . -6) (undo-tree-id8563 . -6) (undo-tree-id8564 . -6) (undo-tree-id8565 . -6) (undo-tree-id8566 . -6) (undo-tree-id8567 . -6) (undo-tree-id8568 . -6) (undo-tree-id8569 . -6) (undo-tree-id8570 . -6) (undo-tree-id8571 . -6) (undo-tree-id8572 . -6) (undo-tree-id8573 . -6) (undo-tree-id8574 . -6) (undo-tree-id8575 . -6) (undo-tree-id8576 . -6) (undo-tree-id8577 . -6) (undo-tree-id8578 . -6) (undo-tree-id8579 . -6) (undo-tree-id8580 . -6) (undo-tree-id8581 . -6) (undo-tree-id8582 . -6) (undo-tree-id8583 . -6) (undo-tree-id8584 . -6) (undo-tree-id8585 . -6) (undo-tree-id8586 . -6) (undo-tree-id8587 . -6) (undo-tree-id8588 . -6) (undo-tree-id8589 . -6) (undo-tree-id8590 . -6) (undo-tree-id8591 . -6) (undo-tree-id8592 . -6) (undo-tree-id8593 . -6) (undo-tree-id8594 . -6) (undo-tree-id8595 . -6) (undo-tree-id8596 . -6) (undo-tree-id8597 . -6) (undo-tree-id8598 . -6) (undo-tree-id8599 . -6) (undo-tree-id8600 . -6) (undo-tree-id8601 . -6) (undo-tree-id8602 . -6) (undo-tree-id8603 . -6) (undo-tree-id8604 . -6) (undo-tree-id8605 . -6) (undo-tree-id8606 . -6) (undo-tree-id8607 . -6) (undo-tree-id8608 . -6) (undo-tree-id8609 . -6) (undo-tree-id8610 . -6) (undo-tree-id8611 . -6) (undo-tree-id8612 . -6) (undo-tree-id8613 . -6) (undo-tree-id8614 . -6) (undo-tree-id8615 . -6) (undo-tree-id8616 . -6) (undo-tree-id8617 . -6) (undo-tree-id8618 . -6) (undo-tree-id8619 . -6) (undo-tree-id8620 . -6) (undo-tree-id8621 . -6) (undo-tree-id8622 . -6) (undo-tree-id8623 . -6) (undo-tree-id8624 . -6) (undo-tree-id8625 . -6) (undo-tree-id8626 . -6) (undo-tree-id8627 . -6) (undo-tree-id8628 . -6) (undo-tree-id8629 . -6) (undo-tree-id8630 . -6) (undo-tree-id8631 . -6) (undo-tree-id8632 . -6) (undo-tree-id8633 . -6) (undo-tree-id8634 . -6) (undo-tree-id8635 . -6) (undo-tree-id8636 . -6) (undo-tree-id8637 . -6) (undo-tree-id8638 . -6) (undo-tree-id8639 . -6) (undo-tree-id8640 . -6) (undo-tree-id8641 . -6) (undo-tree-id8642 . -6) (undo-tree-id8643 . -6) (undo-tree-id8644 . -6) (undo-tree-id8645 . -6) (undo-tree-id8646 . -6) (undo-tree-id8647 . -6) (undo-tree-id8648 . -6) (undo-tree-id8649 . -6) (undo-tree-id8650 . -6) (undo-tree-id8651 . -6) (undo-tree-id8652 . -6) (undo-tree-id8653 . -6) (undo-tree-id8654 . -6) (undo-tree-id8655 . -6) (undo-tree-id8656 . -6) (undo-tree-id8657 . -6) (undo-tree-id8658 . -6) (undo-tree-id8659 . -6) (undo-tree-id8660 . -6) (undo-tree-id8661 . -6) (undo-tree-id8662 . -6) (undo-tree-id8663 . -6) (undo-tree-id8664 . -6) (undo-tree-id8665 . -6) (undo-tree-id8666 . -6) (undo-tree-id8667 . -6) (undo-tree-id8668 . -6) (undo-tree-id8669 . -6) (undo-tree-id8670 . -6) (undo-tree-id8671 . -6) (undo-tree-id8672 . -6) (undo-tree-id8673 . -6) (undo-tree-id8674 . -6) (undo-tree-id8675 . -6) (undo-tree-id8676 . -6) (undo-tree-id8677 . -6) (undo-tree-id8678 . -6) (undo-tree-id8679 . -6) (undo-tree-id8680 . -6) (undo-tree-id8681 . -6) (undo-tree-id8682 . -6) (undo-tree-id8683 . -6) 3192) nil (26651 52327 593305 0) 0 nil])
([nil nil ((#("was " 0 4 (fontified t)) . -3182) (undo-tree-id8262 . -4) (undo-tree-id8263 . -4) (undo-tree-id8264 . -4) (undo-tree-id8265 . -4) (undo-tree-id8266 . -4) (undo-tree-id8267 . -4) (undo-tree-id8268 . -4) (undo-tree-id8269 . -4) (undo-tree-id8270 . -4) (undo-tree-id8271 . -4) (undo-tree-id8272 . -4) (undo-tree-id8273 . -4) (undo-tree-id8274 . -4) (undo-tree-id8275 . -4) (undo-tree-id8276 . -4) (undo-tree-id8277 . -4) (undo-tree-id8278 . -4) (undo-tree-id8279 . -4) (undo-tree-id8280 . -4) (undo-tree-id8281 . -4) (undo-tree-id8282 . -4) (undo-tree-id8283 . -4) (undo-tree-id8284 . -4) (undo-tree-id8285 . -4) (undo-tree-id8286 . -4) (undo-tree-id8287 . -4) (undo-tree-id8288 . -4) (undo-tree-id8289 . -4) (undo-tree-id8290 . -4) (undo-tree-id8291 . -4) (undo-tree-id8292 . -4) (undo-tree-id8293 . -4) (undo-tree-id8294 . -4) (undo-tree-id8295 . -4) (undo-tree-id8296 . -4) (undo-tree-id8297 . -4) (undo-tree-id8298 . -4) (undo-tree-id8299 . -4) (undo-tree-id8300 . -4) (undo-tree-id8301 . -4) (undo-tree-id8302 . -4) (undo-tree-id8303 . -4) (undo-tree-id8304 . -4) (undo-tree-id8305 . -4) (undo-tree-id8306 . -4) (undo-tree-id8307 . -4) (undo-tree-id8308 . -4) (undo-tree-id8309 . -4) (undo-tree-id8310 . -4) (undo-tree-id8311 . -4) (undo-tree-id8312 . -4) (undo-tree-id8313 . -4) (undo-tree-id8314 . -4) (undo-tree-id8315 . -4) (undo-tree-id8316 . -4) (undo-tree-id8317 . -4) (undo-tree-id8318 . -4) (undo-tree-id8319 . -4) (undo-tree-id8320 . -4) (undo-tree-id8321 . -4) (undo-tree-id8322 . -4) (undo-tree-id8323 . -4) (undo-tree-id8324 . -4) (undo-tree-id8325 . -4) (undo-tree-id8326 . -4) (undo-tree-id8327 . -4) (undo-tree-id8328 . -4) (undo-tree-id8329 . -4) (undo-tree-id8330 . -4) (undo-tree-id8331 . -4) (undo-tree-id8332 . -4) (undo-tree-id8333 . -4) (undo-tree-id8334 . -4) (undo-tree-id8335 . -4) (undo-tree-id8336 . -4) (undo-tree-id8337 . -4) (undo-tree-id8338 . -4) (undo-tree-id8339 . -4) (undo-tree-id8340 . -4) (undo-tree-id8341 . -4) (undo-tree-id8342 . -4) (undo-tree-id8343 . -4) (undo-tree-id8344 . -4) (undo-tree-id8345 . -4) (undo-tree-id8346 . -4) (undo-tree-id8347 . -4) (undo-tree-id8348 . -4) (undo-tree-id8349 . -4) (undo-tree-id8350 . -4) (undo-tree-id8351 . -4) (undo-tree-id8352 . -4) (undo-tree-id8353 . -4) (undo-tree-id8354 . -4) (undo-tree-id8355 . -4) (undo-tree-id8356 . -4) (undo-tree-id8357 . -4) (undo-tree-id8358 . -4) (undo-tree-id8359 . -4) (undo-tree-id8360 . -4) (undo-tree-id8361 . -4) (undo-tree-id8362 . -4) (undo-tree-id8363 . -4) (undo-tree-id8364 . -4) (undo-tree-id8365 . -4) (undo-tree-id8366 . -4) (undo-tree-id8367 . -4) (undo-tree-id8368 . -4) (undo-tree-id8369 . -4) (undo-tree-id8370 . -4) (undo-tree-id8371 . -4) (undo-tree-id8372 . -4) (undo-tree-id8373 . -4) (undo-tree-id8374 . -4) (undo-tree-id8375 . -4) (undo-tree-id8376 . -4) (undo-tree-id8377 . -4) (undo-tree-id8378 . -4) (undo-tree-id8379 . -4) (undo-tree-id8380 . -4) (undo-tree-id8381 . -4) (undo-tree-id8382 . -4) (undo-tree-id8383 . -4) (undo-tree-id8384 . -4) (undo-tree-id8385 . -4) (undo-tree-id8386 . -4) (undo-tree-id8387 . -4) (undo-tree-id8388 . -4) (undo-tree-id8389 . -4) (undo-tree-id8390 . -4) (undo-tree-id8391 . -4) (undo-tree-id8392 . -4) (undo-tree-id8393 . -4) (undo-tree-id8394 . -4) (undo-tree-id8395 . -4) (undo-tree-id8396 . -4) (undo-tree-id8397 . -4) (undo-tree-id8398 . -4) (undo-tree-id8399 . -4) (undo-tree-id8400 . -4) (undo-tree-id8401 . -4) (undo-tree-id8402 . -4) (undo-tree-id8403 . -4) (undo-tree-id8404 . -4) (undo-tree-id8405 . -4) (undo-tree-id8406 . -4) (undo-tree-id8407 . -4) (undo-tree-id8408 . -4) (undo-tree-id8409 . -4) (undo-tree-id8410 . -4) (undo-tree-id8411 . -4) (undo-tree-id8412 . -4) (undo-tree-id8413 . -4) (undo-tree-id8414 . -4) (undo-tree-id8415 . -4) (undo-tree-id8416 . -4) (undo-tree-id8417 . -4) (undo-tree-id8418 . -4) (undo-tree-id8419 . -4) (undo-tree-id8420 . -4) (undo-tree-id8421 . -4) (undo-tree-id8422 . -4) (undo-tree-id8423 . -4) (undo-tree-id8424 . -4) (undo-tree-id8425 . -4) (undo-tree-id8426 . -4) (undo-tree-id8427 . -4) (undo-tree-id8428 . -4) (undo-tree-id8429 . -4) (undo-tree-id8430 . -4) (undo-tree-id8431 . -4) (undo-tree-id8432 . -4) (undo-tree-id8433 . -4) (undo-tree-id8434 . -4) (undo-tree-id8435 . -4) (undo-tree-id8436 . -4) (undo-tree-id8437 . -4) (undo-tree-id8438 . -4) (undo-tree-id8439 . -4) (undo-tree-id8440 . -4) (undo-tree-id8441 . -4) (undo-tree-id8442 . -4) (undo-tree-id8443 . -4) (undo-tree-id8444 . -4) (undo-tree-id8445 . -4) (undo-tree-id8446 . -4) (undo-tree-id8447 . -4) (undo-tree-id8448 . -4) (undo-tree-id8449 . -4) (undo-tree-id8450 . -4) (undo-tree-id8451 . -4) (undo-tree-id8452 . -4) (undo-tree-id8453 . -4) (undo-tree-id8454 . -4) (undo-tree-id8455 . -4) (undo-tree-id8456 . -4) (undo-tree-id8457 . -4) (undo-tree-id8458 . -4) (undo-tree-id8459 . -4) (undo-tree-id8460 . -4) (undo-tree-id8461 . -4) (undo-tree-id8462 . -4) (undo-tree-id8463 . -4) (undo-tree-id8464 . -4) (undo-tree-id8465 . -4) (undo-tree-id8466 . -4) (undo-tree-id8467 . -4) (undo-tree-id8468 . -4) (undo-tree-id8469 . -4) (undo-tree-id8470 . -4) (undo-tree-id8471 . -4) (undo-tree-id8472 . -4) (undo-tree-id8473 . -4) (undo-tree-id8474 . -4) 3186) nil (26651 52327 592975 0) 0 nil])
([nil nil ((#("This " 0 5 (fontified t)) . -3177) (undo-tree-id8045 . -5) (undo-tree-id8046 . -5) (undo-tree-id8047 . -5) (undo-tree-id8048 . -5) (undo-tree-id8049 . -5) (undo-tree-id8050 . -5) (undo-tree-id8051 . -5) (undo-tree-id8052 . -5) (undo-tree-id8053 . -5) (undo-tree-id8054 . -5) (undo-tree-id8055 . -5) (undo-tree-id8056 . -5) (undo-tree-id8057 . -5) (undo-tree-id8058 . -5) (undo-tree-id8059 . -5) (undo-tree-id8060 . -5) (undo-tree-id8061 . -5) (undo-tree-id8062 . -5) (undo-tree-id8063 . -5) (undo-tree-id8064 . -5) (undo-tree-id8065 . -5) (undo-tree-id8066 . -5) (undo-tree-id8067 . -5) (undo-tree-id8068 . -5) (undo-tree-id8069 . -5) (undo-tree-id8070 . -5) (undo-tree-id8071 . -5) (undo-tree-id8072 . -5) (undo-tree-id8073 . -5) (undo-tree-id8074 . -5) (undo-tree-id8075 . -5) (undo-tree-id8076 . -5) (undo-tree-id8077 . -5) (undo-tree-id8078 . -5) (undo-tree-id8079 . -5) (undo-tree-id8080 . -5) (undo-tree-id8081 . -5) (undo-tree-id8082 . -5) (undo-tree-id8083 . -5) (undo-tree-id8084 . -5) (undo-tree-id8085 . -5) (undo-tree-id8086 . -5) (undo-tree-id8087 . -5) (undo-tree-id8088 . -5) (undo-tree-id8089 . -5) (undo-tree-id8090 . -5) (undo-tree-id8091 . -5) (undo-tree-id8092 . -5) (undo-tree-id8093 . -5) (undo-tree-id8094 . -5) (undo-tree-id8095 . -5) (undo-tree-id8096 . -5) (undo-tree-id8097 . -5) (undo-tree-id8098 . -5) (undo-tree-id8099 . -5) (undo-tree-id8100 . -5) (undo-tree-id8101 . -5) (undo-tree-id8102 . -5) (undo-tree-id8103 . -5) (undo-tree-id8104 . -5) (undo-tree-id8105 . -5) (undo-tree-id8106 . -5) (undo-tree-id8107 . -5) (undo-tree-id8108 . -5) (undo-tree-id8109 . -5) (undo-tree-id8110 . -5) (undo-tree-id8111 . -5) (undo-tree-id8112 . -5) (undo-tree-id8113 . -5) (undo-tree-id8114 . -5) (undo-tree-id8115 . -5) (undo-tree-id8116 . -5) (undo-tree-id8117 . -5) (undo-tree-id8118 . -5) (undo-tree-id8119 . -5) (undo-tree-id8120 . -5) (undo-tree-id8121 . -5) (undo-tree-id8122 . -5) (undo-tree-id8123 . -5) (undo-tree-id8124 . -5) (undo-tree-id8125 . -5) (undo-tree-id8126 . -5) (undo-tree-id8127 . -5) (undo-tree-id8128 . -5) (undo-tree-id8129 . -5) (undo-tree-id8130 . -5) (undo-tree-id8131 . -5) (undo-tree-id8132 . -5) (undo-tree-id8133 . -5) (undo-tree-id8134 . -5) (undo-tree-id8135 . -5) (undo-tree-id8136 . -5) (undo-tree-id8137 . -5) (undo-tree-id8138 . -5) (undo-tree-id8139 . -5) (undo-tree-id8140 . -5) (undo-tree-id8141 . -5) (undo-tree-id8142 . -5) (undo-tree-id8143 . -5) (undo-tree-id8144 . -5) (undo-tree-id8145 . -5) (undo-tree-id8146 . -5) (undo-tree-id8147 . -5) (undo-tree-id8148 . -5) (undo-tree-id8149 . -5) (undo-tree-id8150 . -5) (undo-tree-id8151 . -5) (undo-tree-id8152 . -5) (undo-tree-id8153 . -5) (undo-tree-id8154 . -5) (undo-tree-id8155 . -5) (undo-tree-id8156 . -5) (undo-tree-id8157 . -5) (undo-tree-id8158 . -5) (undo-tree-id8159 . -5) (undo-tree-id8160 . -5) (undo-tree-id8161 . -5) (undo-tree-id8162 . -5) (undo-tree-id8163 . -5) (undo-tree-id8164 . -5) (undo-tree-id8165 . -5) (undo-tree-id8166 . -5) (undo-tree-id8167 . -5) (undo-tree-id8168 . -5) (undo-tree-id8169 . -5) (undo-tree-id8170 . -5) (undo-tree-id8171 . -5) (undo-tree-id8172 . -5) (undo-tree-id8173 . -5) (undo-tree-id8174 . -5) (undo-tree-id8175 . -5) (undo-tree-id8176 . -5) (undo-tree-id8177 . -5) (undo-tree-id8178 . -5) (undo-tree-id8179 . -5) (undo-tree-id8180 . -5) (undo-tree-id8181 . -5) (undo-tree-id8182 . -5) (undo-tree-id8183 . -5) (undo-tree-id8184 . -5) (undo-tree-id8185 . -5) (undo-tree-id8186 . -5) (undo-tree-id8187 . -5) (undo-tree-id8188 . -5) (undo-tree-id8189 . -5) (undo-tree-id8190 . -5) (undo-tree-id8191 . -5) (undo-tree-id8192 . -5) (undo-tree-id8193 . -5) (undo-tree-id8194 . -5) (undo-tree-id8195 . -5) (undo-tree-id8196 . -5) (undo-tree-id8197 . -5) (undo-tree-id8198 . -5) (undo-tree-id8199 . -5) (undo-tree-id8200 . -5) (undo-tree-id8201 . -5) (undo-tree-id8202 . -5) (undo-tree-id8203 . -5) (undo-tree-id8204 . -5) (undo-tree-id8205 . -5) (undo-tree-id8206 . -5) (undo-tree-id8207 . -5) (undo-tree-id8208 . -5) (undo-tree-id8209 . -5) (undo-tree-id8210 . -5) (undo-tree-id8211 . -5) (undo-tree-id8212 . -5) (undo-tree-id8213 . -5) (undo-tree-id8214 . -5) (undo-tree-id8215 . -5) (undo-tree-id8216 . -5) (undo-tree-id8217 . -5) (undo-tree-id8218 . -5) (undo-tree-id8219 . -5) (undo-tree-id8220 . -5) (undo-tree-id8221 . -5) (undo-tree-id8222 . -5) (undo-tree-id8223 . -5) (undo-tree-id8224 . -5) (undo-tree-id8225 . -5) (undo-tree-id8226 . -5) (undo-tree-id8227 . -5) (undo-tree-id8228 . -5) (undo-tree-id8229 . -5) (undo-tree-id8230 . -5) (undo-tree-id8231 . -5) (undo-tree-id8232 . -5) (undo-tree-id8233 . -5) (undo-tree-id8234 . -5) (undo-tree-id8235 . -5) (undo-tree-id8236 . -5) (undo-tree-id8237 . -5) (undo-tree-id8238 . -5) (undo-tree-id8239 . -5) (undo-tree-id8240 . -5) (undo-tree-id8241 . -5) (undo-tree-id8242 . -5) (undo-tree-id8243 . -5) (undo-tree-id8244 . -5) (undo-tree-id8245 . -5) (undo-tree-id8246 . -5) (undo-tree-id8247 . -5) (undo-tree-id8248 . -5) (undo-tree-id8249 . -5) (undo-tree-id8250 . -5) (undo-tree-id8251 . -5) (undo-tree-id8252 . -5) (undo-tree-id8253 . -5) (undo-tree-id8254 . -5) (undo-tree-id8255 . -5) (undo-tree-id8256 . -5) (undo-tree-id8257 . -5) (undo-tree-id8258 . -5) (undo-tree-id8259 . -5) (undo-tree-id8260 . -5) (undo-tree-id8261 . -5) 3182) nil (26651 52327 592635 0) 0 nil])
([nil nil ((#("examples. " 0 10 (fontified t)) . -3167) (undo-tree-id7824 . -10) (undo-tree-id7825 . -10) (undo-tree-id7826 . -10) (undo-tree-id7827 . -10) (undo-tree-id7828 . -10) (undo-tree-id7829 . -10) (undo-tree-id7830 . -10) (undo-tree-id7831 . -10) (undo-tree-id7832 . -10) (undo-tree-id7833 . -10) (undo-tree-id7834 . -10) (undo-tree-id7835 . -10) (undo-tree-id7836 . -10) (undo-tree-id7837 . -10) (undo-tree-id7838 . -10) (undo-tree-id7839 . -10) (undo-tree-id7840 . -10) (undo-tree-id7841 . -10) (undo-tree-id7842 . -10) (undo-tree-id7843 . -10) (undo-tree-id7844 . -10) (undo-tree-id7845 . -10) (undo-tree-id7846 . -10) (undo-tree-id7847 . -10) (undo-tree-id7848 . -10) (undo-tree-id7849 . -10) (undo-tree-id7850 . -10) (undo-tree-id7851 . -10) (undo-tree-id7852 . -10) (undo-tree-id7853 . -10) (undo-tree-id7854 . -10) (undo-tree-id7855 . -10) (undo-tree-id7856 . -10) (undo-tree-id7857 . -10) (undo-tree-id7858 . -10) (undo-tree-id7859 . -10) (undo-tree-id7860 . -10) (undo-tree-id7861 . -10) (undo-tree-id7862 . -10) (undo-tree-id7863 . -10) (undo-tree-id7864 . -10) (undo-tree-id7865 . -10) (undo-tree-id7866 . -10) (undo-tree-id7867 . -10) (undo-tree-id7868 . -10) (undo-tree-id7869 . -10) (undo-tree-id7870 . -10) (undo-tree-id7871 . -10) (undo-tree-id7872 . -10) (undo-tree-id7873 . -10) (undo-tree-id7874 . -10) (undo-tree-id7875 . -10) (undo-tree-id7876 . -10) (undo-tree-id7877 . -10) (undo-tree-id7878 . -10) (undo-tree-id7879 . -10) (undo-tree-id7880 . -10) (undo-tree-id7881 . -10) (undo-tree-id7882 . -10) (undo-tree-id7883 . -10) (undo-tree-id7884 . -10) (undo-tree-id7885 . -10) (undo-tree-id7886 . -10) (undo-tree-id7887 . -10) (undo-tree-id7888 . -10) (undo-tree-id7889 . -10) (undo-tree-id7890 . -10) (undo-tree-id7891 . -10) (undo-tree-id7892 . -10) (undo-tree-id7893 . -10) (undo-tree-id7894 . -10) (undo-tree-id7895 . -10) (undo-tree-id7896 . -10) (undo-tree-id7897 . -10) (undo-tree-id7898 . -10) (undo-tree-id7899 . -10) (undo-tree-id7900 . -10) (undo-tree-id7901 . -10) (undo-tree-id7902 . -10) (undo-tree-id7903 . -10) (undo-tree-id7904 . -10) (undo-tree-id7905 . -10) (undo-tree-id7906 . -10) (undo-tree-id7907 . -10) (undo-tree-id7908 . -10) (undo-tree-id7909 . -10) (undo-tree-id7910 . -10) (undo-tree-id7911 . -10) (undo-tree-id7912 . -10) (undo-tree-id7913 . -10) (undo-tree-id7914 . -10) (undo-tree-id7915 . -10) (undo-tree-id7916 . -10) (undo-tree-id7917 . -10) (undo-tree-id7918 . -10) (undo-tree-id7919 . -10) (undo-tree-id7920 . -10) (undo-tree-id7921 . -10) (undo-tree-id7922 . -10) (undo-tree-id7923 . -10) (undo-tree-id7924 . -10) (undo-tree-id7925 . -10) (undo-tree-id7926 . -10) (undo-tree-id7927 . -10) (undo-tree-id7928 . -10) (undo-tree-id7929 . -10) (undo-tree-id7930 . -10) (undo-tree-id7931 . -10) (undo-tree-id7932 . -10) (undo-tree-id7933 . -10) (undo-tree-id7934 . -10) (undo-tree-id7935 . -10) (undo-tree-id7936 . -10) (undo-tree-id7937 . -10) (undo-tree-id7938 . -10) (undo-tree-id7939 . -10) (undo-tree-id7940 . -10) (undo-tree-id7941 . -10) (undo-tree-id7942 . -10) (undo-tree-id7943 . -10) (undo-tree-id7944 . -10) (undo-tree-id7945 . -10) (undo-tree-id7946 . -10) (undo-tree-id7947 . -10) (undo-tree-id7948 . -10) (undo-tree-id7949 . -10) (undo-tree-id7950 . -10) (undo-tree-id7951 . -10) (undo-tree-id7952 . -10) (undo-tree-id7953 . -10) (undo-tree-id7954 . -10) (undo-tree-id7955 . -10) (undo-tree-id7956 . -10) (undo-tree-id7957 . -10) (undo-tree-id7958 . -10) (undo-tree-id7959 . -10) (undo-tree-id7960 . -10) (undo-tree-id7961 . -10) (undo-tree-id7962 . -10) (undo-tree-id7963 . -10) (undo-tree-id7964 . -10) (undo-tree-id7965 . -10) (undo-tree-id7966 . -10) (undo-tree-id7967 . -10) (undo-tree-id7968 . -10) (undo-tree-id7969 . -10) (undo-tree-id7970 . -10) (undo-tree-id7971 . -10) (undo-tree-id7972 . -10) (undo-tree-id7973 . -10) (undo-tree-id7974 . -10) (undo-tree-id7975 . -10) (undo-tree-id7976 . -10) (undo-tree-id7977 . -10) (undo-tree-id7978 . -10) (undo-tree-id7979 . -10) (undo-tree-id7980 . -10) (undo-tree-id7981 . -10) (undo-tree-id7982 . -10) (undo-tree-id7983 . -10) (undo-tree-id7984 . -10) (undo-tree-id7985 . -10) (undo-tree-id7986 . -10) (undo-tree-id7987 . -10) (undo-tree-id7988 . -10) (undo-tree-id7989 . -10) (undo-tree-id7990 . -10) (undo-tree-id7991 . -10) (undo-tree-id7992 . -10) (undo-tree-id7993 . -10) (undo-tree-id7994 . -10) (undo-tree-id7995 . -10) (undo-tree-id7996 . -10) (undo-tree-id7997 . -10) (undo-tree-id7998 . -10) (undo-tree-id7999 . -10) (undo-tree-id8000 . -10) (undo-tree-id8001 . -10) (undo-tree-id8002 . -10) (undo-tree-id8003 . -10) (undo-tree-id8004 . -10) (undo-tree-id8005 . -10) (undo-tree-id8006 . -10) (undo-tree-id8007 . -10) (undo-tree-id8008 . -10) (undo-tree-id8009 . -10) (undo-tree-id8010 . -10) (undo-tree-id8011 . -10) (undo-tree-id8012 . -10) (undo-tree-id8013 . -10) (undo-tree-id8014 . -10) (undo-tree-id8015 . -10) (undo-tree-id8016 . -10) (undo-tree-id8017 . -10) (undo-tree-id8018 . -10) (undo-tree-id8019 . -10) (undo-tree-id8020 . -10) (undo-tree-id8021 . -10) (undo-tree-id8022 . -10) (undo-tree-id8023 . -10) (undo-tree-id8024 . -10) (undo-tree-id8025 . -10) (undo-tree-id8026 . -10) (undo-tree-id8027 . -10) (undo-tree-id8028 . -10) (undo-tree-id8029 . -10) (undo-tree-id8030 . -10) (undo-tree-id8031 . -10) (undo-tree-id8032 . -10) (undo-tree-id8033 . -10) (undo-tree-id8034 . -10) (undo-tree-id8035 . -10) (undo-tree-id8036 . -10) (undo-tree-id8037 . -10) (undo-tree-id8038 . -10) (undo-tree-id8039 . -10) (undo-tree-id8040 . -10) (undo-tree-id8041 . -10) (undo-tree-id8042 . -10) (undo-tree-id8043 . -10) (undo-tree-id8044 . -10) 3177) nil (26651 52327 592292 0) 0 nil])
([nil nil ((3167 . 3185)) nil (26651 52327 591913 0) 0 nil])
([nil nil ((3185 . 3189)) nil (26651 52327 591912 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -3185) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (#("a" 0 1 (fontified t)) . -3186) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (#("s" 0 1 (fontified t)) . -3187) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (#(" " 0 1 (fontified t)) . -3188) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) 3189) nil (26651 52327 591905 0) 0 nil])
([nil nil ((3185 . 3191)) nil (26651 52327 591781 0) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -3190) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) 3191) nil (26651 52327 591779 0) 0 nil])
([nil nil ((3190 . 3196)) nil (26651 52327 591762 0) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -3194) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (#(" " 0 1 (fontified t)) . -3195) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) 3196) nil (26651 52327 591758 0) 0 nil])
([nil nil ((3194 . 3196)) nil (26651 52327 591707 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3195) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) 3196) nil (26651 52327 591705 0) 0 nil])
([nil nil ((3195 . 3197)) nil (26651 52327 591693 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3196) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) 3197) nil (26651 52327 591691 0) 0 nil])
([nil nil ((3196 . 3197)) nil (26651 52327 591678 0) 0 nil])
([nil nil ((3197 . 3198)) nil (26651 52327 591676 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3194) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (#("." 0 1 (fontified t)) . -3195) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (#("." 0 1 (fontified t)) . -3196) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (#(" " 0 1 (fontified t)) . -3197) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) 3198) nil (26651 52327 591666 0) 0 nil])
([nil nil ((3194 . 3196)) nil (26651 52327 591453 0) 0 nil])
([nil nil ((#("theory" 0 6 (fontified t)) . -13863) (undo-tree-id12018 . -6) (undo-tree-id12019 . -6) (undo-tree-id12020 . -6) 13869 (t 26651 52327 704957 427000)) nil (26651 54516 751634 0) 0 nil])
([nil nil ((#("Graph " 0 6 (fontified t)) . -13857) (undo-tree-id12015 . -6) (undo-tree-id12016 . -6) (undo-tree-id12017 . -6) 13863) nil (26651 54516 751625 0) 0 nil])
([nil nil ((13863 . 13869) (#(" " 0 1 (fontified nil)) . 13826) (13825 . 13826) (13857 . 13863)) nil (26651 54516 751618 0) 0 nil])
([nil nil ((#("exist " 0 6 (fontified t)) . -13863) (undo-tree-id12013 . -6) (undo-tree-id12014 . -6) 13869) nil (26651 54516 751615 0) 0 nil])
([nil nil ((#("There " 0 6 (fontified t)) . -13857) (undo-tree-id12011 . -6) (undo-tree-id12012 . -6) 13863) nil (26651 54516 751609 0) 0 nil])
([nil nil ((13857 . 13863)) nil (26651 54516 751604 0) 0 nil])
([nil nil ((#("There " 0 6 (fontified t)) . -13857) (undo-tree-id12009 . -6) (undo-tree-id12010 . -6) 13863) nil (26651 54516 751603 0) 0 nil])
([nil nil ((13857 . 13865)) nil (26651 54516 751597 0) 0 nil])
([nil nil ((#("watn " 0 5 (fontified t)) . -13860) (undo-tree-id12007 . -5) (undo-tree-id12008 . -5) 13865) nil (26651 54516 751595 0) 0 nil])
([nil nil ((#("We " 0 3 (fontified t)) . -13857) (undo-tree-id12005 . -3) (undo-tree-id12006 . -3) 13860) nil (26651 54516 751589 0) 0 nil])
([nil nil ((13857 . 13866)) nil (26651 54516 751584 0) 0 nil])
([nil nil ((13866 . 13868)) nil (26651 54516 751583 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -13866) (undo-tree-id12001 . -1) (undo-tree-id12002 . -1) (#("r" 0 1 (fontified t)) . -13867) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) 13868) nil (26651 54516 751580 0) 0 nil])
([nil nil ((13866 . 13887)) nil (26651 54516 751571 0) 0 nil])
([nil nil ((13901 . 13908) (#(" " 0 1 (fontified nil)) . 13897) (13896 . 13897) (13887 . 13901)) nil (26651 54516 751570 0) 0 nil])
([nil nil ((13908 . 13929)) nil (26651 54516 751567 0) 0 nil])
([nil nil ((13929 . 13936)) nil (26651 54516 751565 0) 0 nil])
([nil nil ((13936 . 13937)) nil (26651 54516 751564 0) 0 nil])
([nil nil ((13937 . 13940)) nil (26651 54516 751562 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -13936) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (#("w" 0 1 (fontified t)) . -13937) (undo-tree-id11995 . -1) (undo-tree-id11996 . -1) (#("i" 0 1 (fontified t)) . -13938) (undo-tree-id11997 . -1) (undo-tree-id11998 . -1) (#("t" 0 1 (fontified t)) . -13939) (undo-tree-id11999 . -1) (undo-tree-id12000 . -1) 13940) nil (26651 54516 751559 0) 0 nil])
([nil nil ((13936 . 13957)) nil (26651 54516 751542 0) 0 nil])
([nil nil ((13957 . 13967)) nil (26651 54516 751541 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -13965) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (#("g" 0 1 (fontified t)) . -13966) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) 13967) nil (26651 54516 751538 0) 0 nil])
([nil nil ((13971 . 13974) (#(" " 0 1 (fontified nil)) . 13959) (13958 . 13959) (13965 . 13971)) nil (26651 54516 751529 0) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -13972) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (#("S" 0 1 (fontified t)) . -13973) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) 13974) nil (26651 54516 751526 0) 0 nil])
([nil nil ((13972 . 13987)) nil (26651 54516 751516 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -13979) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (#("t" 0 1 (fontified t)) . -13980) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (#("s" 0 1 (fontified t)) . -13981) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (#(" " 0 1 (fontified t)) . -13982) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (#("a" 0 1 (fontified t)) . -13983) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (#("n" 0 1 (fontified t)) . -13984) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (#("d" 0 1 (fontified t)) . -13985) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) (#(" " 0 1 (fontified t)) . -13986) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) 13987) nil (26651 54516 751512 0) 0 nil])
([nil nil ((13979 . 13988)) nil (26651 54516 751481 0) 0 nil])
([nil nil ((13988 . 14006)) nil (26651 54516 751479 0) 0 nil])
([nil nil ((#("Secah" 0 5 (fontified t)) . -14001) (undo-tree-id11943 . -5) (undo-tree-id11944 . -5) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -2) (undo-tree-id11950 . -2) (undo-tree-id11951 . -2) (undo-tree-id11952 . -2) (undo-tree-id11953 . -3) (undo-tree-id11954 . -3) (undo-tree-id11955 . -3) (undo-tree-id11956 . -3) (undo-tree-id11957 . -4) (undo-tree-id11958 . -4) (undo-tree-id11959 . -4) (undo-tree-id11960 . -4) (undo-tree-id11961 . -5) (undo-tree-id11962 . -5) (undo-tree-id11963 . -5) (undo-tree-id11964 . -5) (undo-tree-id11965 . -5) (undo-tree-id11966 . -5) (undo-tree-id11967 . -5) (undo-tree-id11968 . -5) 14006) nil (26651 54516 751475 0) 0 nil])
([nil nil ((14001 . 14008)) nil (26651 54516 751431 0) 0 nil])
([nil nil ((#("Serach " 0 7 (fontified t)) . -14001) (undo-tree-id11909 . -7) (undo-tree-id11910 . -7) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -2) (undo-tree-id11916 . -2) (undo-tree-id11917 . -2) (undo-tree-id11918 . -2) (undo-tree-id11919 . -3) (undo-tree-id11920 . -3) (undo-tree-id11921 . -3) (undo-tree-id11922 . -3) (undo-tree-id11923 . -4) (undo-tree-id11924 . -4) (undo-tree-id11925 . -4) (undo-tree-id11926 . -4) (undo-tree-id11927 . -5) (undo-tree-id11928 . -5) (undo-tree-id11929 . -5) (undo-tree-id11930 . -5) (undo-tree-id11931 . -6) (undo-tree-id11932 . -6) (undo-tree-id11933 . -6) (undo-tree-id11934 . -6) (undo-tree-id11935 . -7) (undo-tree-id11936 . -7) (undo-tree-id11937 . -7) (undo-tree-id11938 . -7) (undo-tree-id11939 . -7) (undo-tree-id11940 . -7) (undo-tree-id11941 . -7) (undo-tree-id11942 . -7) 14008) nil (26651 54516 751427 0) 0 nil])
([nil nil ((14001 . 14016)) nil (26651 54516 751365 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -14012) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (#("o" 0 1 (fontified t)) . -14013) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (#("m" 0 1 (fontified t)) . -14014) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (#("m" 0 1 (fontified t)) . -14015) (undo-tree-id11896 . -1) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) 14016) nil (26651 54516 751355 0) 0 nil])
([nil nil ((14012 . 14024)) nil (26651 54516 751176 0) 0 nil])
([nil nil ((#("\\subsection{Traversal Algorithms}
" 0 11 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 32 (face (font-latex-sectioning-3-face) fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t) 33 34 (fontified t)) . 14025) (undo-tree-id12021 . -33) (undo-tree-id12022 . -34) (undo-tree-id12023 . -33) (undo-tree-id12024 . -33) (undo-tree-id12025 . -33) (undo-tree-id12026 . -33) (undo-tree-id12027 . -33) (undo-tree-id12028 . -33) (undo-tree-id12029 . -33) (undo-tree-id12030 . -33) (undo-tree-id12031 . -32) (undo-tree-id12032 . -33) (undo-tree-id12033 . -32) (undo-tree-id12034 . -33) (undo-tree-id12035 . -32) (undo-tree-id12036 . -33) (undo-tree-id12037 . -32) (undo-tree-id12038 . -33) (undo-tree-id12039 . -32) (undo-tree-id12040 . -33) (undo-tree-id12041 . -32) (undo-tree-id12042 . -33) (undo-tree-id12043 . -32) (undo-tree-id12044 . -33) (undo-tree-id12045 . -11) (undo-tree-id12046 . -12) (undo-tree-id12047 . -11) (undo-tree-id12048 . -10) (undo-tree-id12049 . -11) (undo-tree-id12050 . -33) (undo-tree-id12051 . -33) (undo-tree-id12052 . -33) (undo-tree-id12053 . -33) (undo-tree-id12054 . -33) (undo-tree-id12055 . -33) (undo-tree-id12056 . -33) (undo-tree-id12057 . -32) (undo-tree-id12058 . -33) (undo-tree-id12059 . -32) (undo-tree-id12060 . -33) (undo-tree-id12061 . -32) (undo-tree-id12062 . -33) (undo-tree-id12063 . -32) (undo-tree-id12064 . -33) (undo-tree-id12065 . -32) (undo-tree-id12066 . -33) (undo-tree-id12067 . -32) (undo-tree-id12068 . -33) (undo-tree-id12069 . -32) (undo-tree-id12070 . -33) (undo-tree-id12071 . -11) (undo-tree-id12072 . -12) (undo-tree-id12073 . -11) (undo-tree-id12074 . -10) (undo-tree-id12075 . -11) (undo-tree-id12076 . -33) (undo-tree-id12077 . -33) (undo-tree-id12078 . -33) (undo-tree-id12079 . -33) (undo-tree-id12080 . -33) (undo-tree-id12081 . -34) (undo-tree-id12082 . -34) 14058 (t 26651 54516 855000 623000)) nil (26651 55017 519720 0) 0 nil])
([nil nil ((14058 . 14059) 14025) nil (26651 55017 519607 0) 0 nil])
([nil nil ((14075 . 14076) (#("i" 0 1 (face (font-lock-function-name-face) fontified t)) . -14075) (undo-tree-id12134 . -1) (undo-tree-id12135 . -1) (undo-tree-id12136 . -1) (undo-tree-id12137 . -1) (undo-tree-id12138 . -1) (undo-tree-id12139 . -1) (undo-tree-id12140 . -1) 14076 (14067 . 14076) (#("itemize" 0 7 (face (font-lock-function-name-face) fontified t)) . -14067) (undo-tree-id12141 . -7) (undo-tree-id12142 . -7) (undo-tree-id12143 . -1) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1) (undo-tree-id12146 . -1) (undo-tree-id12147 . -2) (undo-tree-id12148 . -2) (undo-tree-id12149 . -2) (undo-tree-id12150 . -2) (undo-tree-id12151 . -3) (undo-tree-id12152 . -3) (undo-tree-id12153 . -3) (undo-tree-id12154 . -3) (undo-tree-id12155 . -4) (undo-tree-id12156 . -4) (undo-tree-id12157 . -4) (undo-tree-id12158 . -4) (undo-tree-id12159 . -5) (undo-tree-id12160 . -5) (undo-tree-id12161 . -5) (undo-tree-id12162 . -5) (undo-tree-id12163 . -6) (undo-tree-id12164 . -6) (undo-tree-id12165 . -6) (undo-tree-id12166 . -6) (undo-tree-id12167 . -7) (undo-tree-id12168 . -7) (undo-tree-id12169 . -7) (undo-tree-id12170 . -7) (undo-tree-id12171 . -7) (undo-tree-id12172 . -7) (undo-tree-id12173 . -7) (undo-tree-id12174 . -7) (undo-tree-id12175 . -7) (undo-tree-id12176 . -7) (undo-tree-id12177 . -7) 14074 (14067 . 14074) (14066 . 14068) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -14066) (undo-tree-id12178 . -1) (undo-tree-id12179 . -1) (14066 . 14067) (14061 . 14066) (14060 . 14061) (#("begin" 0 5 (fontified t)) . -14060) (undo-tree-id12180 . -5) (undo-tree-id12181 . -5) (undo-tree-id12182 . -1) (undo-tree-id12183 . -2) (undo-tree-id12184 . -2) (undo-tree-id12185 . -2) (undo-tree-id12186 . -2) (undo-tree-id12187 . -3) (undo-tree-id12188 . -3) (undo-tree-id12189 . -3) (undo-tree-id12190 . -3) (undo-tree-id12191 . -4) (undo-tree-id12192 . -4) (undo-tree-id12193 . -4) (undo-tree-id12194 . -4) (undo-tree-id12195 . -5) (undo-tree-id12196 . -5) (undo-tree-id12197 . -5) (undo-tree-id12198 . -5) (undo-tree-id12199 . -5) (undo-tree-id12200 . -5) (undo-tree-id12201 . -5) (undo-tree-id12202 . -5) 14065 (14060 . 14065) (#("\\" 0 1 (fontified t)) . -14060) (undo-tree-id12203 . -1) (undo-tree-id12204 . -1) (undo-tree-id12205 . -1) 14061 (#("begi" 0 4 (face (font-latex-sedate-face) fontified t)) . -14061) (undo-tree-id12206 . -4) (undo-tree-id12207 . -4) 14065 (#("n" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t)) . -14065) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (#(" " 0 1 (fontified t)) . -14066) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) (#(" " 0 1 (fontified t)) . -14067) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) 14068 (14066 . 14068) (#("
" 0 1 (font-lock-multiline t fontified t)) . -14066) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (#(" " 0 1 (font-lock-multiline t fontified t)) . -14067) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (#(" " 0 1 (font-lock-multiline t fontified t)) . -14068) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) 14069 (14066 . 14069) (14061 . 14066) (14060 . 14061) (#("Pi" 0 2 (fontified t)) . -14060) (undo-tree-id12220 . -2) (undo-tree-id12221 . -2) 14062 (14060 . 14062) (#("Searhc " 0 7 (fontified t)) . -14060) (undo-tree-id12222 . -7) (undo-tree-id12223 . -7) 14067 (14060 . 14067) (#("I
" 0 2 (fontified t)) . -14025) (undo-tree-id12224 . -2) (undo-tree-id12225 . -2) 14027 (#("think " 0 6 (fontified t)) . -14027) (undo-tree-id12226 . -6) (undo-tree-id12227 . -6) 14033 (#("a" 0 1 (fontified t)) . -14033) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) 14034 (14033 . 14034) (#(" " 0 1 (fontified nil)) . 14027) (14026 . 14027) (14024 . 14033) (t 26651 55017 626314 849000)) nil (26651 55098 154489 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14077 . 14078) (#("
" 0 1 (fontified nil)) . -14095) (14077 . 14096) 14076) nil (26651 55098 154312 0) 0 nil])
([nil nil ((14079 . 14082) (#("begin" 0 5 (face (font-lock-keyword-face font-latex-sedate-face) fontified t)) . 14079) (undo-tree-id12131 . -4) (undo-tree-id12132 . -5) (undo-tree-id12133 . -5)) nil (26651 55098 154309 0) 0 nil])
([nil nil ((14103 . 14106) (14102 . 14103) (14081 . 14102) (14080 . 14081) (14077 . 14080) 14064) nil (26651 55098 154302 0) 0 nil])
([nil nil ((14071 . 14073) (14062 . 14071) (#("t" 0 1 (fontified t)) . -14062) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) (#("i" 0 1 (fontified t)) . -14063) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (undo-tree-id12125 . -1) (undo-tree-id12126 . -1) (undo-tree-id12127 . -1) (undo-tree-id12128 . -1) (undo-tree-id12129 . -1) (undo-tree-id12130 . -1) 14064 (14060 . 14064) (14059 . 14060) 14043) nil (26651 55098 154296 0) 0 nil])
([nil nil ((14025 . 14033)) nil (26651 55098 154241 0) 0 nil])
([nil nil ((#("Dependin" 0 8 (fontified t)) . -14025) (undo-tree-id12083 . -8) (undo-tree-id12084 . -8) (undo-tree-id12085 . -4) (undo-tree-id12086 . -5) (undo-tree-id12087 . -5) (undo-tree-id12088 . -5) (undo-tree-id12089 . -5) (undo-tree-id12090 . -6) (undo-tree-id12091 . -7) (undo-tree-id12092 . -7) (undo-tree-id12093 . -7) (undo-tree-id12094 . -7) (undo-tree-id12095 . -8) (undo-tree-id12096 . -8) (undo-tree-id12097 . -8) (undo-tree-id12098 . -8) (undo-tree-id12099 . -8) 14033) nil (26651 55098 154236 0) 0 nil])
([nil nil ((14025 . 14033) (t 26651 55098 263026 466000)) nil (26651 55142 143307 0) 0 nil])
([nil nil ((14037 . 14057) (#("i" 0 1 (fontified t)) . -14037) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) 14038 (14037 . 14038) (#(" " 0 1 (fontified nil)) . 14030) (14029 . 14030) (14030 . 14037) (#("o" 0 1 (fontified t)) . -14030) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (#("r" 0 1 (fontified t)) . -14031) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) 14032 (14027 . 14032) (#("e" 0 1 (fontified t)) . -14027) (undo-tree-id12238 . -1) (undo-tree-id12239 . -1) (#("a" 0 1 (fontified t)) . -14028) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (#("s" 0 1 (fontified t)) . -14029) (undo-tree-id12242 . -1) (undo-tree-id12243 . -1) (#("e" 0 1 (fontified t)) . -14030) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) 14031 (14025 . 14031) (#("This " 0 5 (fontified t)) . -14025) (undo-tree-id12246 . -5) (undo-tree-id12247 . -5) 14030 (#("vid" 0 3 (fontified t)) . -14030) (undo-tree-id12248 . -3) (undo-tree-id12249 . -3) 14033 (t 26651 55142 252207 251000)) nil (26651 55186 327576 0) 0 nil])
([nil nil ((14047 . 14049) (#("{" 0 1 (face (font-latex-sedate-face) fontified nil)) . -14047) (14047 . 14048) (14045 . 14047) (#("f" 0 1 (face (font-latex-sedate-face) fontified t)) . -14045) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) 14046 (14043 . 14046) (14042 . 14043)) nil (26651 55186 327756 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14086 . 14087) (nil fontified nil 14049 . 14087) (14049 . 14087) 14048) nil (26651 55224 26570 0) 0 nil] [nil nil ((nil rear-nonsticky nil 14056 . 14057) (nil fontified nil 14049 . 14057) (14049 . 14057) 14048) ((#("This vid" 0 7 (fontified nil) 7 8 (rear-nonsticky nil fontified nil)) . 14049) (undo-tree-id12250 . -5) (undo-tree-id12251 . -5) (undo-tree-id12252 . -7) (undo-tree-id12253 . -5) (undo-tree-id12254 . -5) (undo-tree-id12255 . -5) (undo-tree-id12256 . -5) (nil rear-nonsticky t 14056 . 14057)) (26651 55186 327520 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14048) (undo-tree-id12315 . 1) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1)) nil (26651 55224 26566 0) 0 nil])
nil
([nil nil ((14087 . 14089) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -14087) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (14087 . 14088) (14086 . 14087) (#("}" 0 1 (fontified nil)) . -14086) (14086 . 14087)) nil (26651 55224 26545 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14088) (undo-tree-id12309 . 1) (undo-tree-id12310 . -1) (undo-tree-id12311 . -1) (undo-tree-id12312 . -1)) nil (26651 55224 26538 0) 0 nil])
([nil nil ((14140 . 14157) (14120 . 14140) (#("bre" 0 3 (fontified t)) . -14120) (undo-tree-id12297 . -3) (undo-tree-id12298 . -3) 14123 (14107 . 14123) (#("to " 0 3 (fontified t)) . -14107) (undo-tree-id12299 . -3) (undo-tree-id12300 . -3) 14110 (#("get " 0 4 (fontified t)) . -14110) (undo-tree-id12301 . -4) (undo-tree-id12302 . -4) 14114 (#("a " 0 2 (fontified t)) . -14114) (undo-tree-id12303 . -2) (undo-tree-id12304 . -2) 14116 (#("feel " 0 5 (fontified t)) . -14116) (undo-tree-id12305 . -5) (undo-tree-id12306 . -5) 14121 (#("f" 0 1 (fontified t)) . -14121) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) 14122 (14114 . 14122) (14107 . 14114) (14093 . 14095) (#(" " 0 1 (fontified nil)) . 14093) (14092 . 14093) (14103 . 14105) (#("}" 0 1 (fontified nil)) . -14103) (14103 . 14104)) nil (26651 55224 26525 0) 0 nil])
([nil nil ((#("a " 0 2 (fontified t)) . -14203) (undo-tree-id12279 . -2) (undo-tree-id12280 . -2) (undo-tree-id12281 . -2) (undo-tree-id12282 . -2) (undo-tree-id12283 . -2) (undo-tree-id12284 . -2) (undo-tree-id12285 . -2) (undo-tree-id12286 . -2) (undo-tree-id12287 . -2) (undo-tree-id12288 . -2) (undo-tree-id12289 . -2) (undo-tree-id12290 . -2) (undo-tree-id12291 . -2) (undo-tree-id12292 . -2) (undo-tree-id12293 . -2) (undo-tree-id12294 . -2) (undo-tree-id12295 . -2) (undo-tree-id12296 . -2) 14205) nil (26651 55224 26493 0) 0 nil])
([nil nil ((#("Initialize " 0 11 (fontified t)) . -14192) (undo-tree-id12257 . -11) (undo-tree-id12258 . -11) (undo-tree-id12259 . -11) (undo-tree-id12260 . -11) (undo-tree-id12261 . -11) (undo-tree-id12262 . -11) (undo-tree-id12263 . -11) (undo-tree-id12264 . -11) (undo-tree-id12265 . -11) (undo-tree-id12266 . -11) (undo-tree-id12267 . -11) (undo-tree-id12268 . -11) (undo-tree-id12269 . -11) (undo-tree-id12270 . -11) (undo-tree-id12271 . -11) (undo-tree-id12272 . -11) (undo-tree-id12273 . -11) (undo-tree-id12274 . -11) (undo-tree-id12275 . -11) (undo-tree-id12276 . -11) (undo-tree-id12277 . -11) (undo-tree-id12278 . -11) 14203) nil (26651 55224 26459 0) 0 nil])
([nil nil ((14168 . 14171) (#(" " 0 1 (fontified nil)) . 14146) (14145 . 14146) (14157 . 14168) (t 26651 55224 133424 774000)) nil (26651 55246 810383 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -14170) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) 14171) nil (26651 55246 810379 0) 0 nil])
([nil nil ((14170 . 14191)) nil (26651 55246 810374 0) 0 nil])
([nil nil ((14191 . 14193)) nil (26651 55246 810373 0) 0 nil])
([nil nil ((14193 . 14211)) nil (26651 55246 810372 0) 0 nil])
([nil nil ((#("difference" 0 10 (fontified t)) . -14201) (undo-tree-id12439 . -10) (undo-tree-id12440 . -10) 14211) nil (26651 55246 810370 0) 0 nil])
([nil nil ((#("only " 0 5 (fontified t)) . -14196) (undo-tree-id12436 . -5) (undo-tree-id12437 . -5) (undo-tree-id12438 . -5) 14201) nil (26651 55246 810364 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -14192) (undo-tree-id12431 . -4) (undo-tree-id12432 . -4) (undo-tree-id12433 . -4) (undo-tree-id12434 . -4) (undo-tree-id12435 . -4) 14196) nil (26651 55246 810356 0) 0 nil])
([nil nil ((#("implementation, " 0 16 (fontified t)) . -14176) (undo-tree-id12422 . -16) (undo-tree-id12423 . -16) (undo-tree-id12424 . -16) (undo-tree-id12425 . -16) (undo-tree-id12426 . -16) (undo-tree-id12427 . -16) (undo-tree-id12428 . -16) (undo-tree-id12429 . -16) (undo-tree-id12430 . -16) 14192) nil (26651 55246 810346 0) 0 nil])
([nil nil ((#("your " 0 5 (fontified t)) . -14171) (undo-tree-id12409 . -5) (undo-tree-id12410 . -5) (undo-tree-id12411 . -5) (undo-tree-id12412 . -5) (undo-tree-id12413 . -5) (undo-tree-id12414 . -5) (undo-tree-id12415 . -5) (undo-tree-id12416 . -5) (undo-tree-id12417 . -5) (undo-tree-id12418 . -5) (undo-tree-id12419 . -5) (undo-tree-id12420 . -5) (undo-tree-id12421 . -5) 14176) nil (26651 55246 810329 0) 0 nil])
([nil nil ((#("on " 0 3 (fontified t)) . -14168) (undo-tree-id12392 . -3) (undo-tree-id12393 . -3) (undo-tree-id12394 . -3) (undo-tree-id12395 . -3) (undo-tree-id12396 . -3) (undo-tree-id12397 . -3) (undo-tree-id12398 . -3) (undo-tree-id12399 . -3) (undo-tree-id12400 . -3) (undo-tree-id12401 . -3) (undo-tree-id12402 . -3) (undo-tree-id12403 . -3) (undo-tree-id12404 . -3) (undo-tree-id12405 . -3) (undo-tree-id12406 . -3) (undo-tree-id12407 . -3) (undo-tree-id12408 . -3) 14171) nil (26651 55246 810305 0) 0 nil])
([nil nil ((#("Depending " 0 10 (fontified t)) . -14158) (undo-tree-id12371 . -10) (undo-tree-id12372 . -10) (undo-tree-id12373 . -10) (undo-tree-id12374 . -10) (undo-tree-id12375 . -10) (undo-tree-id12376 . -10) (undo-tree-id12377 . -10) (undo-tree-id12378 . -10) (undo-tree-id12379 . -10) (undo-tree-id12380 . -10) (undo-tree-id12381 . -10) (undo-tree-id12382 . -10) (undo-tree-id12383 . -10) (undo-tree-id12384 . -10) (undo-tree-id12385 . -10) (undo-tree-id12386 . -10) (undo-tree-id12387 . -10) (undo-tree-id12388 . -10) (undo-tree-id12389 . -10) (undo-tree-id12390 . -10) (undo-tree-id12391 . -10) 14168) nil (26651 55246 810275 0) 0 nil])
([nil nil ((14158 . 14159)) nil (26651 55246 810239 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14157) (undo-tree-id12328 . -1) (undo-tree-id12329 . -1) (undo-tree-id12330 . -1) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) (undo-tree-id12345 . -1) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) (undo-tree-id12363 . -1) (#("I" 0 1 (fontified t)) . -14158) (undo-tree-id12364 . -1) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) 14159) nil (26651 55246 810231 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -14221) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (#("b" 0 1 (fontified t)) . -14222) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) 14223 (14221 . 14223) (#("BFS" 0 3 (fontified t)) . -14221) (undo-tree-id12459 . -3) (undo-tree-id12460 . -3) 14224 (14221 . 14224) (#(" " 0 1 (fontified nil)) . 14213) (14212 . 14213) (14218 . 14221) (#("n" 0 1 (fontified t)) . -14218) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) 14219 (14199 . 14219) (14178 . 14199) (14172 . 14178) (#("that " 0 5 (fontified t)) . -14172) (undo-tree-id12463 . -5) (undo-tree-id12464 . -5) 14177 (#("hte " 0 4 (fontified t)) . -14177) (undo-tree-id12465 . -4) (undo-tree-id12466 . -4) 14181 (14162 . 14181) (#("" 0 1 (fontified t)) . -14162) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) 14163 (14161 . 14163) (14158 . 14161) (#("\\" 0 1 (fontified t)) . -14158) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) 14159 (#("textsl{" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face font-latex-warning-face) fontified t)) . -14159) (undo-tree-id12471 . -7) (undo-tree-id12472 . -7) 14166 (#("You}" 0 3 (face (font-latex-italic-face) fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14166) (undo-tree-id12473 . -4) (undo-tree-id12474 . -4) 14170 (#("l " 0 2 (fontified t)) . -14170) (undo-tree-id12475 . -2) (undo-tree-id12476 . -2) 14172 (#("n" 0 1 (fontified t)) . -14172) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) 14173 (14170 . 14173) (14169 . 14170) (14158 . 14165) (14158 . 14159) 14161 (14158 . 14161) (#("\\" 0 1 (fontified t)) . -14158) (undo-tree-id12479 . -1) (undo-tree-id12480 . -1) 14159 (#("textrm{" 0 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face font-latex-warning-face) fontified t)) . -14159) (undo-tree-id12481 . -7) (undo-tree-id12482 . -7) 14166 (#("You" 0 3 (fontified t)) . -14166) (undo-tree-id12483 . -3) (undo-tree-id12484 . -3) 14169 (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14169) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) 14170 (14169 . 14170) (14158 . 14165) (14158 . 14159) 14161 (14158 . 14161) (14157 . 14158) (t 26651 55246 919151 464000)) nil (26651 55315 885438 0) 0 nil])
([nil nil ((14221 . 14235)) nil (26651 55315 885363 0) 0 nil])
([nil nil ((#("First " 0 6 (fontified t)) . -14229) (undo-tree-id12453 . -6) (undo-tree-id12454 . -6) 14235) nil (26651 55315 885361 0) 0 nil])
([nil nil ((#("Breadth " 0 8 (fontified t)) . -14221) (undo-tree-id12451 . -8) (undo-tree-id12452 . -8) 14229) nil (26651 55315 885356 0) 0 nil])
([nil nil ((14221 . 14239)) nil (26651 55315 885351 0) 0 nil])
([nil nil ((#("Sear" 0 4 (fontified t)) . -14235) (undo-tree-id12449 . -4) (undo-tree-id12450 . -4) 14239) nil (26651 55315 885348 0) 0 nil])
([nil nil ((#("Firts " 0 6 (fontified t)) . -14229) (undo-tree-id12447 . -6) (undo-tree-id12448 . -6) 14235) nil (26651 55315 885343 0) 0 nil])
([nil nil ((14229 . 14250)) nil (26651 55315 885337 0) 0 nil])
([nil nil ((14250 . 14258)) nil (26651 55315 885336 0) 0 nil])
([nil nil ((14258 . 14279)) nil (26651 55315 885334 0) 0 nil])
([nil nil ((14286 . 14295) (#(" " 0 1 (fontified nil)) . 14284) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (14283 . 14284) (14279 . 14286)) nil (26651 55315 885330 0) 0 nil])
([nil nil ((14295 . 14302) (t 26651 55315 991955 685000)) nil (26651 55375 606343 0) 0 nil])
([nil nil ((#("\\begin{enumerate}
  \\item Pick a starting node
\\end{enumerate}
" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 1 6 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 16 (face (font-lock-function-name-face) fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 18 (fontified t) 18 20 (fontified t) 20 25 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 25 46 (fontified t) 46 47 (fontified t rear-nonsticky t) 47 48 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 48 51 (face (font-lock-keyword-face font-latex-sedate-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 61 (face (font-lock-function-name-face) fontified t) 61 62 (face (rainbow-delimiters-depth-1-face) fontified t) 62 63 (fontified t)) . 14338) (undo-tree-id12591 . -62) (undo-tree-id12592 . -63) (undo-tree-id12593 . -62) (undo-tree-id12594 . -17) (undo-tree-id12595 . -62) (undo-tree-id12596 . -62) (undo-tree-id12597 . -16) (undo-tree-id12598 . -16) (undo-tree-id12599 . -16) (undo-tree-id12600 . -62) (undo-tree-id12601 . -17) (undo-tree-id12602 . -17) (undo-tree-id12603 . -17) (undo-tree-id12604 . -16) (undo-tree-id12605 . -17) (undo-tree-id12606 . -16) (undo-tree-id12607 . -17) (undo-tree-id12608 . -16) (undo-tree-id12609 . -17) (undo-tree-id12610 . -16) (undo-tree-id12611 . -17) (undo-tree-id12612 . -16) (undo-tree-id12613 . -17) (undo-tree-id12614 . -16) (undo-tree-id12615 . -17) (undo-tree-id12616 . -16) (undo-tree-id12617 . -17) (undo-tree-id12618 . -6) (undo-tree-id12619 . -7) (undo-tree-id12620 . -6) (undo-tree-id12621 . -5) (undo-tree-id12622 . -6) (undo-tree-id12623 . -17) (undo-tree-id12624 . -17) (undo-tree-id12625 . -17) (undo-tree-id12626 . -17) (undo-tree-id12627 . -17) (undo-tree-id12628 . -17) (undo-tree-id12629 . -17) (undo-tree-id12630 . -17) (undo-tree-id12631 . -16) (undo-tree-id12632 . -17) (undo-tree-id12633 . -16) (undo-tree-id12634 . -17) (undo-tree-id12635 . -16) (undo-tree-id12636 . -17) (undo-tree-id12637 . -16) (undo-tree-id12638 . -17) (undo-tree-id12639 . -16) (undo-tree-id12640 . -17) (undo-tree-id12641 . -16) (undo-tree-id12642 . -17) (undo-tree-id12643 . -16) (undo-tree-id12644 . -17) (undo-tree-id12645 . -6) (undo-tree-id12646 . -7) (undo-tree-id12647 . -6) (undo-tree-id12648 . -5) (undo-tree-id12649 . -6) (undo-tree-id12650 . -17) (undo-tree-id12651 . -17) (undo-tree-id12652 . -17) (undo-tree-id12653 . -17) (undo-tree-id12654 . -35) (undo-tree-id12655 . -35) (undo-tree-id12656 . -35) (undo-tree-id12657 . -35) (undo-tree-id12658 . -47) (undo-tree-id12659 . -62) (undo-tree-id12660 . -62) (undo-tree-id12661 . -62) (undo-tree-id12662 . -61) (undo-tree-id12663 . -62) (undo-tree-id12664 . -61) (undo-tree-id12665 . -62) (undo-tree-id12666 . -61) (undo-tree-id12667 . -62) (undo-tree-id12668 . -61) (undo-tree-id12669 . -62) (undo-tree-id12670 . -61) (undo-tree-id12671 . -62) (undo-tree-id12672 . -61) (undo-tree-id12673 . -62) (undo-tree-id12674 . -61) (undo-tree-id12675 . -62) (undo-tree-id12676 . -51) (undo-tree-id12677 . -52) (undo-tree-id12678 . -47) (undo-tree-id12679 . -51) (undo-tree-id12680 . -50) (undo-tree-id12681 . -51) (undo-tree-id12682 . -62) (undo-tree-id12683 . -62) (undo-tree-id12684 . -62) (undo-tree-id12685 . -62) (undo-tree-id12686 . -62) (undo-tree-id12687 . -63) (undo-tree-id12688 . -63) 14400) nil (26651 55375 606335 0) 0 nil])
([nil nil ((14361 . 14363) (#(" " 0 1 (fontified t)) . -14361) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) 14362 (14361 . 14362) (14344 . 14361) (#("alongth " 0 8 (fontified t)) . -14344) (undo-tree-id12577 . -8) (undo-tree-id12578 . -8) 14352 (#("t" 0 1 (fontified t)) . -14352) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) 14353 (#("h" 0 1 (fontified t)) . -14353) (undo-tree-id12581 . -1) (undo-tree-id12582 . -1) 14354 (14341 . 14354) (#("h" 0 1 (fontified t)) . -14341) (undo-tree-id12583 . -1) (undo-tree-id12584 . -1) (#("c" 0 1 (fontified t)) . -14342) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (#(" " 0 1 (fontified t)) . -14343) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) 14344 (14337 . 14344) (#("S" 0 1 (fontified t)) . -14337) (undo-tree-id12589 . -1) (undo-tree-id12590 . -1) 14338 (14337 . 14338)) nil (26651 55375 606178 0) 0 nil])
([nil nil ((14356 . 14363) (14354 . 14358) (#("``" 0 2 (face (font-latex-string-face) fontified t)) . -14354) (undo-tree-id12560 . -1) (undo-tree-id12561 . -2) (undo-tree-id12562 . -2) (undo-tree-id12563 . -1) (undo-tree-id12564 . -2) (undo-tree-id12565 . -2) (14354 . 14356)) nil (26651 55375 606129 0) 0 nil])
([nil nil ((#("breadth''" 0 7 (fontified t) 7 9 (fontified t)) . 14365) (undo-tree-id12489 . -8) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -2) (undo-tree-id12495 . -2) (undo-tree-id12496 . -2) (undo-tree-id12497 . -2) (undo-tree-id12498 . -3) (undo-tree-id12499 . -3) (undo-tree-id12500 . -3) (undo-tree-id12501 . -3) (undo-tree-id12502 . -4) (undo-tree-id12503 . -4) (undo-tree-id12504 . -4) (undo-tree-id12505 . -4) (undo-tree-id12506 . -5) (undo-tree-id12507 . -5) (undo-tree-id12508 . -5) (undo-tree-id12509 . -5) (undo-tree-id12510 . -6) (undo-tree-id12511 . -6) (undo-tree-id12512 . -6) (undo-tree-id12513 . -6) (undo-tree-id12514 . -7) (undo-tree-id12515 . -7) (undo-tree-id12516 . -7) (undo-tree-id12517 . -7) (undo-tree-id12518 . -7) (undo-tree-id12519 . -7) (undo-tree-id12520 . -7) (undo-tree-id12521 . -7) (undo-tree-id12522 . -7) (undo-tree-id12523 . -7) (undo-tree-id12524 . -7) (undo-tree-id12525 . -7) (undo-tree-id12526 . -7) (undo-tree-id12527 . -7) (undo-tree-id12528 . -7) (undo-tree-id12529 . -7) (undo-tree-id12530 . -9) (undo-tree-id12531 . -9) (undo-tree-id12532 . -9) (undo-tree-id12533 . -7) (undo-tree-id12534 . -9) (undo-tree-id12535 . -7) (undo-tree-id12536 . -9) (undo-tree-id12537 . -7) (undo-tree-id12538 . -9) (undo-tree-id12539 . -7) (undo-tree-id12540 . -9) (undo-tree-id12541 . -7) (undo-tree-id12542 . -9) (undo-tree-id12543 . -7) (undo-tree-id12544 . -9) (undo-tree-id12545 . -7) (undo-tree-id12546 . -9) (undo-tree-id12547 . -9) (undo-tree-id12548 . -9) (undo-tree-id12549 . -9) (undo-tree-id12550 . -9) (undo-tree-id12551 . -9) (undo-tree-id12552 . -9) (undo-tree-id12553 . -9) (undo-tree-id12554 . -9) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -9)) nil (26651 55375 606111 0) 0 nil])
([nil nil ((14365 . 14386)) nil (26651 55375 605944 0) 0 nil])
([nil nil ((14386 . 14396)) nil (26651 55375 605943 0) 0 nil])
([nil nil ((14396 . 14399)) nil (26651 55375 605941 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -14398) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) 14399) nil (26651 55375 605939 0) 0 nil])
([nil nil ((14413 . 14419) (#(" " 0 1 (fontified nil)) . 14407) (14406 . 14407) (14398 . 14413)) nil (26651 55375 605926 0) 0 nil])
([nil nil ((14419 . 14440)) nil (26651 55375 605923 0) 0 nil])
([nil nil ((14440 . 14446)) nil (26651 55375 605918 0) 0 nil])
([nil nil ((14446 . 14459) (t 26651 55375 714081 280000)) nil (26651 55419 243599 0) 0 nil])
([nil nil ((#("elem" 0 4 (fontified t)) . -14455) (undo-tree-id12782 . -4) (undo-tree-id12783 . -4) 14459) nil (26651 55419 243597 0) 0 nil])
([nil nil ((#("an " 0 3 (fontified t)) . -14452) (undo-tree-id12780 . -3) (undo-tree-id12781 . -3) 14455) nil (26651 55419 243592 0) 0 nil])
([nil nil ((#("pop " 0 4 (fontified t)) . -14448) (undo-tree-id12778 . -4) (undo-tree-id12779 . -4) 14452) nil (26651 55419 243587 0) 0 nil])
([nil nil ((14448 . 14449)) nil (26651 55419 243582 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -14448) (undo-tree-id12776 . -1) (undo-tree-id12777 . -1) 14449) nil (26651 55419 243580 0) 0 nil])
([nil nil ((14448 . 14454)) nil (26651 55419 243575 0) 0 nil])
([nil nil ((14454 . 14464)) nil (26651 55419 243574 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -14463) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) 14464) nil (26651 55419 243572 0) 0 nil])
([nil nil ((14463 . 14473)) nil (26651 55419 243566 0) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -14472) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) 14473) nil (26651 55419 243564 0) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . -14468) (undo-tree-id12770 . -4) (undo-tree-id12771 . -4) 14472) nil (26651 55419 243559 0) 0 nil])
([nil nil ((#("from " 0 5 (fontified t)) . -14463) (undo-tree-id12768 . -5) (undo-tree-id12769 . -5) 14468) nil (26651 55419 243554 0) 0 nil])
([nil nil ((#("element " 0 8 (fontified t)) . -14455) (undo-tree-id12766 . -8) (undo-tree-id12767 . -8) 14463) nil (26651 55419 243549 0) 0 nil])
([nil nil ((#("an " 0 3 (fontified t)) . -14452) (undo-tree-id12764 . -3) (undo-tree-id12765 . -3) 14455) nil (26651 55419 243544 0) 0 nil])
([nil nil ((#("pop " 0 4 (fontified t)) . -14448) (undo-tree-id12762 . -4) (undo-tree-id12763 . -4) 14452) nil (26651 55419 243539 0) 0 nil])
([nil nil ((#("queue, " 0 7 (fontified t)) . -14441) (undo-tree-id12760 . -7) (undo-tree-id12761 . -7) 14448) nil (26651 55419 243534 0) 0 nil])
([nil nil ((#("a " 0 2 (fontified t)) . -14439) (undo-tree-id12758 . -2) (undo-tree-id12759 . -2) 14441) nil (26651 55419 243528 0) 0 nil])
([nil nil ((#("to " 0 3 (fontified t)) . -14436) (undo-tree-id12756 . -3) (undo-tree-id12757 . -3) 14439) nil (26651 55419 243523 0) 0 nil])
([nil nil ((#("neighbours " 0 11 (fontified t)) . -14425) (undo-tree-id12754 . -11) (undo-tree-id12755 . -11) 14436) nil (26651 55419 243518 0) 0 nil])
([nil nil ((#("its " 0 4 (fontified t)) . -14421) (undo-tree-id12752 . -4) (undo-tree-id12753 . -4) 14425) nil (26651 55419 243513 0) 0 nil])
([nil nil ((#("all " 0 4 (fontified t)) . -14417) (undo-tree-id12750 . -4) (undo-tree-id12751 . -4) 14421) nil (26651 55419 243507 0) 0 nil])
([nil nil ((#("add " 0 4 (fontified t)) . -14413) (undo-tree-id12748 . -4) (undo-tree-id12749 . -4) 14417) nil (26651 55419 243502 0) 0 nil])
([nil nil ((#("node, " 0 6 (fontified t)) . -14407) (undo-tree-id12746 . -6) (undo-tree-id12747 . -6) 14413) nil (26651 55419 243496 0) 0 nil])
([nil nil ((#("starting
" 0 9 (fontified t)) . -14398) (undo-tree-id12744 . -9) (undo-tree-id12745 . -9) 14407) nil (26651 55419 243491 0) 0 nil])
([nil nil ((#("a " 0 2 (fontified t)) . -14396) (undo-tree-id12742 . -2) (undo-tree-id12743 . -2) 14398) nil (26651 55419 243486 0) 0 nil])
([nil nil ((#("pick " 0 5 (fontified t)) . -14391) (undo-tree-id12740 . -5) (undo-tree-id12741 . -5) 14396) nil (26651 55419 243481 0) 0 nil])
([nil nil ((#("means " 0 6 (fontified t)) . -14385) (undo-tree-id12738 . -6) (undo-tree-id12739 . -6) 14391) nil (26651 55419 243476 0) 0 nil])
([nil nil ((#("That " 0 5 (fontified t)) . -14380) (undo-tree-id12736 . -5) (undo-tree-id12737 . -5) 14385) nil (26651 55419 243471 0) 0 nil])
([nil nil ((14380 . 14387)) nil (26651 55419 243466 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14385) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) (#("t" 0 1 (fontified t)) . -14386) (undo-tree-id12734 . -1) (undo-tree-id12735 . -1) 14387) nil (26651 55419 243464 0) 0 nil])
([nil nil ((14385 . 14400)) nil (26651 55419 243454 0) 0 nil])
([nil nil ((#("algoirth " 0 9 (fontified t)) . -14391) (undo-tree-id12730 . -9) (undo-tree-id12731 . -9) 14400) nil (26651 55419 243453 0) 0 nil])
([nil nil ((14391 . 14397)) nil (26651 55419 243448 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -14395) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (#("r" 0 1 (fontified t)) . -14396) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) 14397) nil (26651 55419 243446 0) 0 nil])
([nil nil ((14412 . 14416) (#(" " 0 1 (fontified nil)) . 14401) (14400 . 14401) (14395 . 14412)) nil (26651 55419 243437 0) 0 nil])
([nil nil ((14416 . 14423)) nil (26651 55419 243435 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -14422) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) 14423) nil (26651 55419 243433 0) 0 nil])
([nil nil ((14422 . 14430)) nil (26651 55419 243428 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -14429) (undo-tree-id12717 . -1) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) (undo-tree-id12723 . -1) 14430) nil (26651 55419 243426 0) 0 nil])
([nil nil ((14429 . 14436)) nil (26651 55419 243413 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -14434) (undo-tree-id12689 . -1) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) (undo-tree-id12696 . -1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (undo-tree-id12706 . -1) (#(" " 0 1 (fontified t)) . -14435) (undo-tree-id12707 . -1) (undo-tree-id12708 . -1) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) (undo-tree-id12714 . -1) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) 14436) nil (26651 55419 243409 0) 0 nil])
([nil nil ((14434 . 14454)) nil (26651 55419 243351 0) 0 nil])
([nil nil ((14517 . 14519) (#("," 0 1 (fontified t)) . -14517) (undo-tree-id12788 . -1) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) 14518 (14517 . 14518) (#("." 0 1 (fontified t)) . -14517) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (#(" " 0 1 (fontified t)) . -14518) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) 14519 (14508 . 14519) (#("before " 0 7 (fontified t)) . -14508) (undo-tree-id12826 . -7) (undo-tree-id12827 . -7) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -2) (undo-tree-id12833 . -2) (undo-tree-id12834 . -2) (undo-tree-id12835 . -2) (undo-tree-id12836 . -3) (undo-tree-id12837 . -3) (undo-tree-id12838 . -3) (undo-tree-id12839 . -3) (undo-tree-id12840 . -4) (undo-tree-id12841 . -4) (undo-tree-id12842 . -4) (undo-tree-id12843 . -4) (undo-tree-id12844 . -5) (undo-tree-id12845 . -5) (undo-tree-id12846 . -5) (undo-tree-id12847 . -5) (undo-tree-id12848 . -6) (undo-tree-id12849 . -6) (undo-tree-id12850 . -6) (undo-tree-id12851 . -6) (undo-tree-id12852 . -7) (undo-tree-id12853 . -7) (undo-tree-id12854 . -7) (undo-tree-id12855 . -7) (undo-tree-id12856 . -7) (undo-tree-id12857 . -7) (undo-tree-id12858 . -7) (undo-tree-id12859 . -7) 14515 (14495 . 14515) (#("s" 0 1 (fontified t)) . -14495) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (#(" " 0 1 (fontified t)) . -14496) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) 14497 (14493 . 14497) (14484 . 14493) (14479 . 14484) (#(" " 0 1 (fontified nil)) . 14471) (14470 . 14471) (14463 . 14479) (#("y" 0 1 (fontified t)) . -14463) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (#("l" 0 1 (fontified t)) . -14464) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (#("," 0 1 (fontified t)) . -14465) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (#(" " 0 1 (fontified t)) . -14466) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (#("y" 0 1 (fontified t)) . -14467) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (#("o" 0 1 (fontified t)) . -14468) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (#("u" 0 1 (fontified t)) . -14469) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) 14470 (14454 . 14470) (t 26651 55419 352382 533000)) nil (26651 55484 560779 0) 0 nil])
([nil nil ((14551 . 14552) 14551) nil (26651 55484 560620 0) 0 nil])
([nil nil ((14552 . 14569)) nil (26651 55484 560618 0) 0 nil])
([nil nil ((14569 . 14573) (#("``" 0 2 (face font-latex-warning-face fontified t)) . -14569) (14569 . 14571)) nil (26651 55484 560617 0) 0 nil])
([nil nil ((14571 . 14576)) nil (26651 55484 560614 0) 0 nil])
([nil nil ((14578 . 14599)) nil (26651 55484 560613 0) 0 nil])
([nil nil ((14599 . 14602)) nil (26651 55484 560612 0) 0 nil])
([nil nil ((14602 . 14620)) nil (26651 55484 560610 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14618) (undo-tree-id12784 . -1) (undo-tree-id12785 . -1) (#("e" 0 1 (fontified t)) . -14619) (undo-tree-id12786 . -1) (undo-tree-id12787 . -1) 14620) nil (26651 55484 560608 0) 0 nil])
([nil nil ((14631 . 14639) (#(" " 0 1 (fontified nil)) . 14623) (14622 . 14623) (14618 . 14631)) nil (26651 55484 560590 0) 0 nil])
([nil nil ((14639 . 14640)) nil (26651 55484 560587 0) 0 nil])
([nil nil ((14640 . 14659)) nil (26651 55484 560582 0) 0 nil])
([nil nil ((14659 . 14661) (t 26651 55484 670362 139000)) nil (26651 55498 291313 0) 0 nil])
([nil nil ((14659 . 14660)) nil (26651 55498 291311 0) 0 nil])
([nil nil ((14660 . 14668)) nil (26651 55498 291310 0) 0 nil])
([nil nil ((14668 . 14670) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -14668) (14668 . 14669)) nil (26651 55498 291307 0) 0 nil])
([nil nil ((14669 . 14682)) nil (26651 55498 291301 0) 0 nil])
([nil nil ((14681 . 14695) (#("ex" 0 2 (face (font-lock-constant-face) fontified t)) . -14681) (undo-tree-id12882 . -2) (undo-tree-id12883 . -2) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -2) (undo-tree-id12889 . -2) (undo-tree-id12890 . -2) (undo-tree-id12891 . -2) (undo-tree-id12892 . -2) (undo-tree-id12893 . -2) (undo-tree-id12894 . -2) (undo-tree-id12895 . -2) 14683 (14681 . 14683) (#("for " 0 4 (face (font-lock-constant-face) fontified t)) . -14681) (undo-tree-id12896 . -4) (undo-tree-id12897 . -4) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -2) (undo-tree-id12911 . -2) (undo-tree-id12912 . -2) (undo-tree-id12913 . -2) (undo-tree-id12914 . -3) (undo-tree-id12915 . -3) (undo-tree-id12916 . -3) (undo-tree-id12917 . -3) (undo-tree-id12918 . -4) (undo-tree-id12919 . -4) (undo-tree-id12920 . -4) (undo-tree-id12921 . -4) (undo-tree-id12922 . -4) (undo-tree-id12923 . -4) (undo-tree-id12924 . -4) (undo-tree-id12925 . -4) (undo-tree-id12926 . -4) (undo-tree-id12927 . -4) (undo-tree-id12928 . -4) (undo-tree-id12929 . -4) (undo-tree-id12930 . -4) (undo-tree-id12931 . -4) (undo-tree-id12932 . -4) (undo-tree-id12933 . -4) (undo-tree-id12934 . -4) (undo-tree-id12935 . -4) (undo-tree-id12936 . -4) (undo-tree-id12937 . -4) (undo-tree-id12938 . -4) (undo-tree-id12939 . -4) (undo-tree-id12940 . -4) (undo-tree-id12941 . -4) 14685 (#("190" 0 3 (face (font-lock-constant-face) fontified t)) . -14685) (undo-tree-id12942 . -3) (undo-tree-id12943 . -3) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -2) (undo-tree-id12949 . -2) (undo-tree-id12950 . -2) (undo-tree-id12951 . -2) (undo-tree-id12952 . -3) (undo-tree-id12953 . -3) (undo-tree-id12954 . -3) (undo-tree-id12955 . -3) (undo-tree-id12956 . -3) (undo-tree-id12957 . -3) (undo-tree-id12958 . -3) (undo-tree-id12959 . -3) 14688 (14682 . 14688) (#("r" 0 1 (face (font-lock-constant-face) fontified t)) . -14682) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) 14683 (14681 . 14683) (#("e" 0 1 (face (font-lock-constant-face) fontified t)) . -14681) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (#("x" 0 1 (face (font-lock-constant-face) fontified t)) . -14682) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) 14683 (14672 . 14683) (14669 . 14672) (#("Probably " 0 9 (face (font-lock-constant-face) fontified t)) . -14669) (undo-tree-id12989 . -9) (undo-tree-id12990 . -9) (undo-tree-id12991 . -9) (undo-tree-id12992 . -9) (undo-tree-id12993 . -9) (undo-tree-id12994 . -9) (undo-tree-id12995 . -9) (undo-tree-id12996 . -9) (undo-tree-id12997 . -9) (undo-tree-id12998 . -9) (undo-tree-id12999 . -9) (undo-tree-id13000 . -9) (undo-tree-id13001 . -9) (undo-tree-id13002 . -9) (undo-tree-id13003 . -9) (undo-tree-id13004 . -9) 14678 (#("not " 0 4 (face (font-lock-constant-face) fontified t)) . -14678) (undo-tree-id13005 . -4) (undo-tree-id13006 . -3) (undo-tree-id13007 . -4) (undo-tree-id13008 . -4) (undo-tree-id13009 . -4) (undo-tree-id13010 . -4) (undo-tree-id13011 . -4) (undo-tree-id13012 . -4) (undo-tree-id13013 . -4) (undo-tree-id13014 . -4) (undo-tree-id13015 . -4) (undo-tree-id13016 . -4) (undo-tree-id13017 . -4) 14682 (t 26651 55498 400831 650000)) nil (26651 55517 314154 0) 0 nil])
([nil nil ((14692 . 14694) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 14692) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (14691 . 14692) (14698 . 14699)) nil (26651 55517 313913 0) 0 nil])
([nil nil ((14300 . 14301) (t 26651 55517 425303 953000)) nil (26651 55755 214470 0) 0 nil])
([nil nil ((14301 . 14309)) nil (26651 55755 214468 0) 0 nil])
([nil nil ((14309 . 14311) (#("{" 0 1 (face (font-lock-keyword-face font-latex-sedate-face) fontified nil)) . -14309) (14309 . 14310)) nil (26651 55755 214466 0) 0 nil])
([nil nil ((14310 . 14331)) nil (26651 55755 214464 0) 0 nil])
([nil nil ((14331 . 14334)) nil (26651 55755 214462 0) 0 nil])
([nil nil ((#("D" 0 1 (face (font-lock-constant-face) fontified t)) . -14333) (undo-tree-id13332 . -1) (undo-tree-id13333 . -1) 14334) nil (26651 55755 214460 0) 0 nil])
([nil nil ((14333 . 14354)) nil (26651 55755 214455 0) 0 nil])
([nil nil ((14355 . 14356) (#(" " 0 1 (face (font-lock-constant-face) fontified nil)) . 14354) (14354 . 14356)) nil (26651 55755 214454 0) 0 nil])
([nil nil ((14356 . 14362)) nil (26651 55755 214451 0) 0 nil])
([nil nil ((14362 . 14365)) nil (26651 55755 214450 0) 0 nil])
([nil nil ((#("F" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14360) (undo-tree-id13322 . -1) (undo-tree-id13323 . -1) (#("S" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14361) (undo-tree-id13324 . -1) (undo-tree-id13325 . -1) (#("o" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14362) (undo-tree-id13326 . -1) (undo-tree-id13327 . -1) (#("r" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14363) (undo-tree-id13328 . -1) (undo-tree-id13329 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14364) (undo-tree-id13330 . -1) (undo-tree-id13331 . -1) 14365) nil (26651 55755 214447 0) 0 nil])
([nil nil ((14360 . 14362)) nil (26651 55755 214428 0) 0 nil])
([nil nil ((14362 . 14365)) nil (26651 55755 214427 0) 0 nil])
([nil nil ((#("o" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14362) (undo-tree-id13316 . -1) (undo-tree-id13317 . -1) (#("r" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14363) (undo-tree-id13318 . -1) (undo-tree-id13319 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14364) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) 14365) nil (26651 55755 214425 0) 0 nil])
([nil nil ((14362 . 14378)) nil (26651 55755 214412 0) 0 nil])
([nil nil ((#("remmebr" 0 7 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14371) (undo-tree-id13310 . -7) (undo-tree-id13311 . -7) (undo-tree-id13312 . -6) (undo-tree-id13313 . -7) (undo-tree-id13314 . -7) (undo-tree-id13315 . -7) 14378) nil (26651 55755 214409 0) 0 nil])
([nil nil ((14371 . 14385)) nil (26651 55755 214398 0) 0 nil])
([nil nil ((#("that " 0 5 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14380) (undo-tree-id13284 . -5) (undo-tree-id13285 . -5) (undo-tree-id13286 . -1) (undo-tree-id13287 . -1) (undo-tree-id13288 . -1) (undo-tree-id13289 . -1) (undo-tree-id13290 . -2) (undo-tree-id13291 . -2) (undo-tree-id13292 . -2) (undo-tree-id13293 . -2) (undo-tree-id13294 . -3) (undo-tree-id13295 . -3) (undo-tree-id13296 . -3) (undo-tree-id13297 . -3) (undo-tree-id13298 . -4) (undo-tree-id13299 . -4) (undo-tree-id13300 . -4) (undo-tree-id13301 . -4) (undo-tree-id13302 . -5) (undo-tree-id13303 . -5) (undo-tree-id13304 . -5) (undo-tree-id13305 . -5) (undo-tree-id13306 . -5) (undo-tree-id13307 . -5) (undo-tree-id13308 . -5) (undo-tree-id13309 . -5) 14385) nil (26651 55755 214395 0) 0 nil])
([nil nil ((#("remember " 0 9 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14371) (undo-tree-id13215 . -9) (undo-tree-id13216 . -9) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -2) (undo-tree-id13222 . -2) (undo-tree-id13223 . -2) (undo-tree-id13224 . -2) (undo-tree-id13225 . -3) (undo-tree-id13226 . -3) (undo-tree-id13227 . -3) (undo-tree-id13228 . -3) (undo-tree-id13229 . -4) (undo-tree-id13230 . -4) (undo-tree-id13231 . -4) (undo-tree-id13232 . -4) (undo-tree-id13233 . -5) (undo-tree-id13234 . -5) (undo-tree-id13235 . -5) (undo-tree-id13236 . -5) (undo-tree-id13237 . -6) (undo-tree-id13238 . -6) (undo-tree-id13239 . -6) (undo-tree-id13240 . -6) (undo-tree-id13241 . -7) (undo-tree-id13242 . -7) (undo-tree-id13243 . -7) (undo-tree-id13244 . -7) (undo-tree-id13245 . -8) (undo-tree-id13246 . -8) (undo-tree-id13247 . -8) (undo-tree-id13248 . -8) (undo-tree-id13249 . -9) (undo-tree-id13250 . -9) (undo-tree-id13251 . -9) (undo-tree-id13252 . -9) (undo-tree-id13253 . -9) (undo-tree-id13254 . -9) (undo-tree-id13255 . -9) (undo-tree-id13256 . -9) (undo-tree-id13257 . -9) (undo-tree-id13258 . -9) (undo-tree-id13259 . -9) (undo-tree-id13260 . -9) (undo-tree-id13261 . -9) (undo-tree-id13262 . -9) (undo-tree-id13263 . -9) (undo-tree-id13264 . -9) (undo-tree-id13265 . -9) (undo-tree-id13266 . -9) (undo-tree-id13267 . -9) (undo-tree-id13268 . -9) (undo-tree-id13269 . -9) (undo-tree-id13270 . -9) (undo-tree-id13271 . -9) (undo-tree-id13272 . -9) (undo-tree-id13273 . -9) (undo-tree-id13274 . -9) (undo-tree-id13275 . -9) (undo-tree-id13276 . -9) (undo-tree-id13277 . -9) (undo-tree-id13278 . -9) (undo-tree-id13279 . -9) (undo-tree-id13280 . -9) (undo-tree-id13281 . -9) (undo-tree-id13282 . -9) (undo-tree-id13283 . -9) 14380) nil (26651 55755 214348 0) 0 nil])
([nil nil ((#("," 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14369) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (undo-tree-id13115 . -1) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) (undo-tree-id13127 . -1) (undo-tree-id13128 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14370) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (undo-tree-id13131 . -1) (undo-tree-id13132 . -1) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (undo-tree-id13136 . -1) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) 14371) nil (26651 55755 214225 0) 0 nil])
([nil nil ((14369 . 14374)) nil (26651 55755 213941 0) 0 nil])
([nil nil ((#("DFS" 0 3 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14371) (undo-tree-id13018 . -3) (undo-tree-id13019 . -3) (undo-tree-id13020 . -1) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (undo-tree-id13023 . -1) (undo-tree-id13024 . -2) (undo-tree-id13025 . -2) (undo-tree-id13026 . -2) (undo-tree-id13027 . -2) (undo-tree-id13028 . -3) (undo-tree-id13029 . -3) (undo-tree-id13030 . -3) (undo-tree-id13031 . -3) (undo-tree-id13032 . -3) (undo-tree-id13033 . -3) (undo-tree-id13034 . -3) (undo-tree-id13035 . -3) (undo-tree-id13036 . -3) (undo-tree-id13037 . -3) (undo-tree-id13038 . -3) 14374) nil (26651 55755 213938 0) 0 nil])
([nil nil ((14371 . 14375)) nil (26651 55755 213892 0) 0 nil])
([nil nil ((14375 . 14396)) nil (26651 55755 213890 0) 0 nil])
([nil nil ((14396 . 14406)) nil (26651 55755 213885 0) 0 nil])
([nil nil ((#("once" 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14402) (undo-tree-id13417 . -4) (undo-tree-id13418 . -4) (undo-tree-id13419 . -4) 14406 (t 26651 55755 326545 285000)) nil (26651 55816 103843 0) 0 nil])
([nil nil ((#("at " 0 3 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14399) (undo-tree-id13414 . -3) (undo-tree-id13415 . -3) (undo-tree-id13416 . -3) 14402) nil (26651 55816 103835 0) 0 nil])
([nil nil ((14399 . 14404)) nil (26651 55816 103829 0) 0 nil])
([nil nil ((#("first" 0 5 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14399) (undo-tree-id13412 . -5) (undo-tree-id13413 . -5) 14404) nil (26651 55816 103827 0) 0 nil])
([nil nil ((#("neighbours " 0 11 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14388) (undo-tree-id13410 . -11) (undo-tree-id13411 . -11) 14399) nil (26651 55816 103822 0) 0 nil])
([nil nil ((14388 . 14389)) nil (26651 55816 103817 0) 0 nil])
([nil nil ((#("n" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14388) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) 14389) nil (26651 55816 103815 0) 0 nil])
([nil nil ((14388 . 14409)) nil (26651 55816 103810 0) 0 nil])
([nil nil ((14427 . 14430) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified nil)) . 14423) (14422 . 14423) (14409 . 14427)) nil (26651 55816 103808 0) 0 nil])
([nil nil ((14430 . 14433)) nil (26651 55816 103805 0) 0 nil])
([nil nil ((14433 . 14453)) nil (26651 55816 103804 0) 0 nil])
([nil nil ((#("the " 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14449) (undo-tree-id13406 . -4) (undo-tree-id13407 . -4) 14453) nil (26651 55816 103802 0) 0 nil])
([nil nil ((#("is " 0 3 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14446) (undo-tree-id13404 . -3) (undo-tree-id13405 . -3) 14449) nil (26651 55816 103797 0) 0 nil])
([nil nil ((#("see " 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14442) (undo-tree-id13402 . -4) (undo-tree-id13403 . -4) 14446) nil (26651 55816 103790 0) 0 nil])
([nil nil ((#("y" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14438) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (#("o" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14439) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (#("u" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14440) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14441) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) 14442) nil (26651 55816 103784 0) 0 nil])
([nil nil ((14438 . 14440)) nil (26651 55816 103769 0) 0 nil])
([nil nil ((#("ex" 0 2 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14438) (undo-tree-id13392 . -2) (undo-tree-id13393 . -2) 14440) nil (26651 55816 103767 0) 0 nil])
([nil nil ((14438 . 14459)) nil (26651 55816 103762 0) 0 nil])
([nil nil ((14459 . 14476)) nil (26651 55816 103760 0) 0 nil])
([nil nil ((14476 . 14478)) nil (26651 55816 103759 0) 0 nil])
([nil nil ((14478 . 14479)) nil (26651 55816 103757 0) 0 nil])
([nil nil ((14479 . 14483)) nil (26651 55816 103756 0) 0 nil])
([nil nil ((#("t" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14479) (undo-tree-id13384 . -1) (undo-tree-id13385 . -1) (#("h" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14480) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (#("a" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14481) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (#("t" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14482) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) 14483) nil (26651 55816 103753 0) 0 nil])
([nil nil ((14479 . 14484)) nil (26651 55816 103738 0) 0 nil])
([nil nil ((14484 . 14486)) nil (26651 55816 103737 0) 0 nil])
([nil nil ((14486 . 14492)) nil (26651 55816 103735 0) 0 nil])
([nil nil ((#("like " 0 5 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14487) (undo-tree-id13382 . -5) (undo-tree-id13383 . -5) 14492) nil (26651 55816 103733 0) 0 nil])
([nil nil ((#("that's " 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t) 4 5 (face (font-lock-constant-face) font-lock-multiline t fontified t) 5 7 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14480) (undo-tree-id13380 . -7) (undo-tree-id13381 . -7) 14487) nil (26651 55816 103727 0) 0 nil])
([nil nil ((#("explore --> " 0 12 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14468) (undo-tree-id13378 . -12) (undo-tree-id13379 . -12) 14480) nil (26651 55816 103722 0) 0 nil])
([nil nil ((14468 . 14476)) nil (26651 55816 103717 0) 0 nil])
([nil nil ((14476 . 14478)) nil (26651 55816 103715 0) 0 nil])
([nil nil ((14478 . 14479)) nil (26651 55816 103714 0) 0 nil])
([nil nil ((14479 . 14480)) nil (26651 55816 103712 0) 0 nil])
([nil nil ((#("Q" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14479) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) 14480) nil (26651 55816 103710 0) 0 nil])
([nil nil ((14479 . 14487)) nil (26651 55816 103692 0) 0 nil])
([nil nil ((14500 . 14508) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified nil)) . 14491) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) (14490 . 14491) (14487 . 14500)) nil (26651 55816 103690 0) 0 nil])
([nil nil ((14508 . 14510)) nil (26651 55816 103679 0) 0 nil])
([nil nil ((#("depth " 0 6 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14504) (undo-tree-id13334 . -6) (undo-tree-id13335 . -6) (undo-tree-id13336 . -1) (undo-tree-id13337 . -1) (undo-tree-id13338 . -1) (undo-tree-id13339 . -1) (undo-tree-id13340 . -2) (undo-tree-id13341 . -2) (undo-tree-id13342 . -2) (undo-tree-id13343 . -2) (undo-tree-id13344 . -3) (undo-tree-id13345 . -3) (undo-tree-id13346 . -3) (undo-tree-id13347 . -3) (undo-tree-id13348 . -4) (undo-tree-id13349 . -4) (undo-tree-id13350 . -4) (undo-tree-id13351 . -4) (undo-tree-id13352 . -5) (undo-tree-id13353 . -5) (undo-tree-id13354 . -5) (undo-tree-id13355 . -5) (undo-tree-id13356 . -6) (undo-tree-id13357 . -6) (undo-tree-id13358 . -6) (undo-tree-id13359 . -6) (undo-tree-id13360 . -6) (undo-tree-id13361 . -6) (undo-tree-id13362 . -6) (undo-tree-id13363 . -6) 14510) nil (26651 55816 103673 0) 0 nil])
([nil nil ((#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . 14503) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) 14504 (t 26651 55816 216642 929000)) nil (26651 55829 626652 0) 0 nil])
([nil nil ((#("the" 0 3 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14500) (undo-tree-id13465 . -3) (undo-tree-id13466 . -3) (undo-tree-id13467 . -3) (undo-tree-id13468 . -3) (undo-tree-id13469 . -3) (undo-tree-id13470 . -3) (undo-tree-id13471 . -3) (undo-tree-id13472 . -3) (undo-tree-id13473 . -3) (undo-tree-id13474 . -3) (undo-tree-id13475 . -3) (undo-tree-id13476 . -3) (undo-tree-id13477 . -3) (undo-tree-id13478 . -3) (undo-tree-id13479 . -3) (undo-tree-id13480 . -3) (undo-tree-id13481 . -3) (undo-tree-id13482 . -3) (undo-tree-id13483 . -3) (undo-tree-id13484 . -3) (undo-tree-id13485 . -3) (undo-tree-id13486 . -3) (undo-tree-id13487 . -3) (undo-tree-id13488 . -3) (undo-tree-id13489 . -3) (undo-tree-id13490 . -3) (undo-tree-id13491 . -3) (undo-tree-id13492 . -3) (undo-tree-id13493 . -3) (undo-tree-id13494 . -3) (undo-tree-id13495 . -3) (undo-tree-id13496 . -3) (undo-tree-id13497 . -3) (undo-tree-id13498 . -3) (undo-tree-id13499 . -3) (undo-tree-id13500 . -3) (undo-tree-id13501 . -3) (undo-tree-id13502 . -3) (undo-tree-id13503 . -3) (undo-tree-id13504 . -3) (undo-tree-id13505 . -3) (undo-tree-id13506 . -3) (undo-tree-id13507 . -3) (undo-tree-id13508 . -3) (undo-tree-id13509 . -3) 14503) nil (26651 55829 626587 0) 0 nil])
([nil nil ((14500 . 14521)) nil (26651 55829 626515 0) 0 nil])
([nil nil ((14521 . 14535)) nil (26651 55829 626513 0) 0 nil])
([nil nil ((#("r" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14533) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) (#("o" 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14534) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) 14535) nil (26651 55829 626510 0) 0 nil])
([nil nil ((14533 . 14538)) nil (26651 55829 626472 0) 0 nil])
([nil nil ((#("odes " 0 5 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14533) (undo-tree-id13420 . -5) (undo-tree-id13421 . -5) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -2) (undo-tree-id13427 . -2) (undo-tree-id13428 . -2) (undo-tree-id13429 . -2) (undo-tree-id13430 . -3) (undo-tree-id13431 . -3) (undo-tree-id13432 . -3) (undo-tree-id13433 . -3) (undo-tree-id13434 . -4) (undo-tree-id13435 . -4) (undo-tree-id13436 . -4) (undo-tree-id13437 . -4) (undo-tree-id13438 . -5) (undo-tree-id13439 . -5) (undo-tree-id13440 . -5) (undo-tree-id13441 . -5) (undo-tree-id13442 . -5) 14538) nil (26651 55829 626468 0) 0 nil])
([nil nil ((14533 . 14539)) nil (26651 55829 626417 0) 0 nil])
([nil nil ((#("nodes " 0 6 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14533) (undo-tree-id13658 . -6) (undo-tree-id13659 . -6) (undo-tree-id13660 . -6) 14539 (t 26651 55829 737485 132000)) nil (26651 55855 961557 0) 0 nil])
([nil nil ((#("neighbour " 0 10 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14523) (undo-tree-id13656 . -10) (undo-tree-id13657 . -10) 14533) nil (26651 55855 961550 0) 0 nil])
([nil nil ((14523 . 14544)) nil (26651 55855 961545 0) 0 nil])
([nil nil ((14544 . 14556)) nil (26651 55855 961543 0) 0 nil])
([nil nil ((#("cuccen" 0 6 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14550) (undo-tree-id13654 . -6) (undo-tree-id13655 . -6) 14556) nil (26651 55855 961542 0) 0 nil])
([nil nil ((14563 . 14566) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified nil)) . 14558) (14557 . 14558) (14550 . 14563)) nil (26651 55855 961537 0) 0 nil])
([nil nil ((#("is " 0 3 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14563) (undo-tree-id13652 . -3) (undo-tree-id13653 . -3) 14566) nil (26651 55855 961534 0) 0 nil])
([nil nil ((#("path " 0 5 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14558) (undo-tree-id13650 . -5) (undo-tree-id13651 . -5) 14563) nil (26651 55855 961528 0) 0 nil])
([nil nil ((#("current
" 0 8 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14550) (undo-tree-id13648 . -8) (undo-tree-id13649 . -8) 14558) nil (26651 55855 961523 0) 0 nil])
([nil nil ((#("your " 0 5 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14545) (undo-tree-id13646 . -5) (undo-tree-id13647 . -5) 14550) nil (26651 55855 961518 0) 0 nil])
([nil nil ((#("than " 0 5 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14540) (undo-tree-id13644 . -5) (undo-tree-id13645 . -5) 14545) nil (26651 55855 961513 0) 0 nil])
([nil nil ((#("other " 0 6 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14534) (undo-tree-id13642 . -6) (undo-tree-id13643 . -6) 14540) nil (26651 55855 961508 0) 0 nil])
([nil nil ((#("everything " 0 11 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14523) (undo-tree-id13640 . -11) (undo-tree-id13641 . -11) 14534) nil (26651 55855 961502 0) 0 nil])
([nil nil ((14523 . 14526)) nil (26651 55855 961497 0) 0 nil])
([nil nil ((14526 . 14545)) nil (26651 55855 961496 0) 0 nil])
([nil nil ((#("add" 0 3 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14542) (undo-tree-id13619 . -3) (undo-tree-id13620 . -3) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -2) (undo-tree-id13626 . -2) (undo-tree-id13627 . -2) (undo-tree-id13628 . -2) (undo-tree-id13629 . -3) (undo-tree-id13630 . -3) (undo-tree-id13631 . -3) (undo-tree-id13632 . -3) (undo-tree-id13633 . -3) (undo-tree-id13634 . -3) (undo-tree-id13635 . -3) (undo-tree-id13636 . -3) (undo-tree-id13637 . -3) (undo-tree-id13638 . -3) (undo-tree-id13639 . -3) 14545) nil (26651 55855 961493 0) 0 nil])
([nil nil ((14542 . 14544)) nil (26651 55855 961457 0) 0 nil])
([nil nil ((#("ex" 0 2 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14542) (undo-tree-id13605 . -2) (undo-tree-id13606 . -2) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -2) (undo-tree-id13612 . -2) (undo-tree-id13613 . -2) (undo-tree-id13614 . -2) (undo-tree-id13615 . -2) (undo-tree-id13616 . -2) (undo-tree-id13617 . -2) (undo-tree-id13618 . -2) 14544) nil (26651 55855 961454 0) 0 nil])
([nil nil ((#("are " 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14538) (undo-tree-id13549 . -4) (undo-tree-id13550 . -4) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -2) (undo-tree-id13556 . -2) (undo-tree-id13557 . -2) (undo-tree-id13558 . -2) (undo-tree-id13559 . -3) (undo-tree-id13560 . -3) (undo-tree-id13561 . -3) (undo-tree-id13562 . -3) (undo-tree-id13563 . -4) (undo-tree-id13564 . -4) (undo-tree-id13565 . -4) (undo-tree-id13566 . -4) (undo-tree-id13567 . -4) (undo-tree-id13568 . -4) (undo-tree-id13569 . -4) (undo-tree-id13570 . -4) (undo-tree-id13571 . -4) (undo-tree-id13572 . -4) (undo-tree-id13573 . -4) (undo-tree-id13574 . -4) (undo-tree-id13575 . -4) (undo-tree-id13576 . -4) (undo-tree-id13577 . -4) (undo-tree-id13578 . -4) (undo-tree-id13579 . -4) (undo-tree-id13580 . -4) (undo-tree-id13581 . -4) (undo-tree-id13582 . -4) (undo-tree-id13583 . -4) (undo-tree-id13584 . -4) (undo-tree-id13585 . -4) (undo-tree-id13586 . -4) (undo-tree-id13587 . -4) (undo-tree-id13588 . -4) (undo-tree-id13589 . -4) (undo-tree-id13590 . -4) (undo-tree-id13591 . -4) (undo-tree-id13592 . -4) (undo-tree-id13593 . -4) (undo-tree-id13594 . -4) (undo-tree-id13595 . -4) (undo-tree-id13596 . -4) (undo-tree-id13597 . -4) (undo-tree-id13598 . -4) (undo-tree-id13599 . -4) (undo-tree-id13600 . -4) (undo-tree-id13601 . -4) (undo-tree-id13602 . -4) (undo-tree-id13603 . -4) (undo-tree-id13604 . -4) 14542) nil (26651 55855 961425 0) 0 nil])
([nil nil ((14538 . 14557)) nil (26651 55855 961324 0) 0 nil])
([nil nil ((14557 . 14565)) nil (26651 55855 961320 0) 0 nil])
([nil nil ((#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14577) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) 14578 (14574 . 14578) (14570 . 14574) (14569 . 14570) (14567 . 14569) (#(" " 0 1 (face (font-lock-constant-face) font-lock-multiline t fontified nil)) . 14561) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (14560 . 14561) (14561 . 14567) (#("last" 0 4 (face (font-lock-constant-face) font-lock-multiline t fontified t)) . -14561) (undo-tree-id13687 . -4) (undo-tree-id13688 . -3) (undo-tree-id13689 . -4) (undo-tree-id13690 . -4) (undo-tree-id13691 . -4) (undo-tree-id13692 . -4) (undo-tree-id13693 . -4) (undo-tree-id13694 . -4) (undo-tree-id13695 . -4) (undo-tree-id13696 . -4) (undo-tree-id13697 . -4) (undo-tree-id13698 . -4) (undo-tree-id13699 . -4) 14565 (t 26651 55856 76007 230000)) nil (26651 55866 485763 0) 0 nil])
([nil nil ((3347 . 3348) (#("H" 0 1 (fontified t)) . 3347) (#(" " 0 1 (fontified nil)) . 3325) (3324 . 3325) (3329 . 3347) (3313 . 3329) (#("t" 0 1 (fontified t)) . -3313) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (#("h" 0 1 (fontified t)) . -3314) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) 3315 (3304 . 3315) (3283 . 3304) (#("o" 0 1 (fontified t)) . -3283) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) 3284 (3278 . 3284) (3268 . 3278) (#(" " 0 1 (fontified nil)) . 3267) (3257 . 3269) (#("w" 0 1 (fontified t)) . -3257) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) 3258 (#("i" 0 1 (fontified t)) . -3258) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (#("l" 0 1 (fontified t)) . -3259) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (#("l" 0 1 (fontified t)) . -3260) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (#(" " 0 1 (fontified t)) . -3261) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) 3262 (3257 . 3262) (3245 . 3257) (#("h" 0 1 (fontified t)) . -3245) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (#(" " 0 1 (fontified t)) . -3246) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) 3247 (3246 . 3247) (#("a" 0 1 (fontified t)) . -3246) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (#("v" 0 1 (fontified t)) . -3247) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (#("e" 0 1 (fontified t)) . -3248) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (#(" " 0 1 (fontified t)) . -3249) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) 3250 (3245 . 3250) (3230 . 3245) (3223 . 3230) (#("n" 0 1 (fontified t)) . -3223) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (#("t" 0 1 (fontified t)) . -3224) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) 3225 (3222 . 3225) (3221 . 3222) (#(" " 0 1 (fontified t)) . -3221) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) 3222 (3218 . 3222) (3197 . 3218) (#("If " 0 3 (fontified t)) . -3197) (undo-tree-id13734 . -3) (undo-tree-id13735 . -3) 3200 (#("Ihav" 0 4 (fontified t)) . -3200) (undo-tree-id13736 . -4) (undo-tree-id13737 . -4) 3204 (#("e" 0 1 (fontified t)) . -3204) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (#(" " 0 1 (fontified t)) . -3205) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) (#("t" 0 1 (fontified t)) . -3206) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (#("i" 0 1 (fontified t)) . -3207) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1) 3208 (3201 . 3208) (3197 . 3201) (3196 . 3197) (#(" " 0 1 (fontified nil)) . 3195) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (3196 . 3197) (t 26651 55866 597486 595000)) nil (26651 55964 41228 0) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -17768) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 17769) (#("p" 0 1 (fontified t)) . -17769) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) 17770 (17769 . 17770) (#("purpil" 0 6 (fontified t)) . -17769) (undo-tree-id13752 . -6) (undo-tree-id13753 . -6) 17775 (17769 . 17775) (17768 . 17770) (#("{" 0 1 (face (font-lock-type-face font-latex-sedate-face) fontified nil)) . -17768) (17768 . 17769) (17763 . 17768) (17762 . 17763) (t 26651 55964 154138 678000)) nil (26651 56355 467434 0) 0 nil])
([nil nil ((#("\\color
" 0 6 (face (font-lock-type-face font-latex-sedate-face) fontified t) 6 7 (font-lock-multiline t fontified t)) . 17762) (undo-tree-id13754 . -6) (undo-tree-id13755 . -6) (undo-tree-id13756 . -7) (undo-tree-id13757 . 1) (undo-tree-id13758 . -6) (undo-tree-id13759 . -6) (undo-tree-id13760 . -6) (undo-tree-id13761 . -6) (undo-tree-id13762 . -6) (undo-tree-id13763 . -6) (undo-tree-id13764 . -6) (undo-tree-id13765 . -6) (undo-tree-id13766 . -6) (undo-tree-id13767 . -7) (undo-tree-id13768 . -6) (undo-tree-id13769 . -6) (undo-tree-id13770 . -6) (undo-tree-id13771 . -6) (undo-tree-id13772 . -6) (undo-tree-id13773 . -6) (undo-tree-id13774 . -6) (undo-tree-id13775 . -6) (undo-tree-id13776 . -6) (undo-tree-id13777 . -6) (undo-tree-id13778 . -6) (undo-tree-id13779 . -6) (undo-tree-id13780 . -7) (undo-tree-id13781 . -7) 17768 (t 26651 56355 585496 995000)) nil (26651 56618 625991 0) 0 nil])
([nil nil ((17761 . 17762) 17693) nil (26651 56618 625903 0) 0 nil])
([nil nil ((17768 . 17770) (#("{" 0 1 (face (font-lock-type-face font-latex-sedate-face) fontified nil)) . -17768) (17768 . 17769) (17763 . 17768) (17762 . 17763) (t 26651 56618 745352 857000)) nil (26651 56692 374683 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17782 . 17783) (nil fontified nil 17770 . 17783) (17770 . 17783) 17769) nil (26651 56692 374679 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 17769) (undo-tree-id13782 . 1) (undo-tree-id13783 . -1) (undo-tree-id13784 . -1) (undo-tree-id13785 . -1) (undo-tree-id13786 . -1) (undo-tree-id13787 . -1) (undo-tree-id13788 . -1)) nil (26651 56692 374676 0) 0 nil])
([nil nil ((17782 . 17783) (#("}" 0 1 (fontified nil)) . -17782) (17782 . 17783)) nil (26651 56692 374650 0) 0 nil])
([nil nil ((20446 . 20447) (#("}" 0 1 (fontified nil)) . -20446) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 20447) (20442 . 20447) (20441 . 20443) (#("{" 0 1 (face (font-lock-type-face font-latex-sedate-face) fontified nil)) . -20441) (20441 . 20442) (20436 . 20441) (20435 . 20436) (20434 . 20435) 20433) nil (26651 56692 374645 0) 0 nil])
([nil nil ((20446 . 20447)) nil (26651 56692 374634 0) 0 nil])
([nil nil ((#("\\color{black}
" 0 6 (face (font-lock-type-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 14 (fontified t)) . 20435) (undo-tree-id13804 . -12) (undo-tree-id13805 . 2) (undo-tree-id13806 . -12) (undo-tree-id13807 . -12) (undo-tree-id13808 . -13) (undo-tree-id13809 . -12) (undo-tree-id13810 . -12) (undo-tree-id13811 . -12) (undo-tree-id13812 . -12) 20447 (t 26651 56692 493545 965000)) nil (26651 56875 943934 0) 0 nil])
([nil nil ((#("\\color{pinkishpurple}
" 0 6 (face (font-lock-type-face font-latex-sedate-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t) 7 19 (fontified t) 19 20 (rear-nonsticky t fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 22 (fontified t)) . 17762) (undo-tree-id13789 . -22) (undo-tree-id13790 . -22) (undo-tree-id13791 . -20) (undo-tree-id13792 . -21) (undo-tree-id13793 . -22) (undo-tree-id13794 . -20) (undo-tree-id13795 . -20) (undo-tree-id13796 . -7) (undo-tree-id13797 . -7) (undo-tree-id13798 . -22) (undo-tree-id13799 . -22) (undo-tree-id13800 . -22) (undo-tree-id13801 . -22) (undo-tree-id13802 . -22) (undo-tree-id13803 . -22)) nil (26651 56875 943909 0) 0 nil])
([nil nil ((17761 . 17762) 17693) nil (26651 56875 943850 0) 0 nil])
([nil current ((17770 . 17783) (#("pinkish" 0 7 (fontified t)) . -17770) (undo-tree-id13813 . -7) (undo-tree-id13814 . -7) (undo-tree-id13815 . -6) (undo-tree-id13816 . -7) (undo-tree-id13817 . -7) (undo-tree-id13818 . -7) (undo-tree-id13819 . -7) (undo-tree-id13820 . -7) (undo-tree-id13821 . -7) (undo-tree-id13822 . -7) (undo-tree-id13823 . -7) (undo-tree-id13824 . -7) (undo-tree-id13825 . -7) (undo-tree-id13826 . -7) 17777 (17770 . 17777) (17769 . 17771) (#("{" 0 1 (face (font-lock-type-face font-latex-sedate-face) fontified nil)) . -17769) (17769 . 17770) (17764 . 17769) (17763 . 17764) (17762 . 17763) (t 26651 56876 60323 920000) 17762) nil (26651 56921 220461 0) 0 nil])
nil
